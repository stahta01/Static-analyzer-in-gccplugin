../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   44 |   memcpy (dirname, filename, base - filename);
      |   ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:9:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
    8 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    9 | 
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   44 |   memcpy (dirname, filename, base - filename);
      |   ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   61 |         unsigned long length = strlen (arg);
      |                                ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   62 |         memcpy (end, arg, length);
      |         ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/binutils/leak_7/binutils_leak_7.c:7:
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: note: in expansion of macro ‘xstrdup’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: note: in expansion of macro ‘xstrdup’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^~~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: warning: implicit declaration of function ‘setlocale’ [-Wimplicit-function-declaration]
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: warning: passing argument 1 of ‘strdup’ makes pointer from integer without a cast [-Wint-conversion]
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     int
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: note: expected ‘const char *’ but argument is of type ‘int’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  112 |   progsize = strlen (progname);
      |              ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: note: include ‘<string.h>’ or provide a declaration of ‘strlen’

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)  1298k ( 44%)
 phase parsing                      :   0.02 ( 50%)   0.02 ( 67%)   0.04 ( 57%)  1362k ( 46%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 33%)   0.03 ( 43%)   261k (  9%)
 callgraph construction             :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 14%)    32k (  1%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.02 ( 29%)   150k (  5%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 preprocessing                      :   0.01 ( 25%)   0.01 ( 33%)   0.01 ( 14%)   528k ( 18%)
 lexical analysis                   :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 14%)     0  (  0%)
 parser (global)                    :   0.01 ( 25%)   0.00 (  0%)   0.02 ( 29%)   642k ( 22%)
 tree PTA                           :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)  4176  (  0%)
 tree forward propagate             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   736  (  0%)
 TOTAL                              :   0.04          0.03          0.07         2932k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 96%)
 TOTAL                              :   0.00          0.00          0.01         2238k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=6
	next_branch :=9
node:= 9 
 	next_branch :=15
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=14
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
	next_branch :=17
node:= 16 
 	next_branch :=20
node:= 17 
 	next_branch :=18
	next_branch :=19
node:= 18 
 	next_branch :=20
node:= 19 
 	next_branch :=20
=======node_fun:concat=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 13 
===============The second stage : Mapping stmt=================
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);
# .MEM_60 = VDEF <.MEM_59>
memcpy (dirname_32, _5, _34);
# .MEM_64 = VDEF <.MEM_56>
progname_7 = concat (_6, "bin");
# .MEM_65 = VDEF <.MEM_64>
_8 = setlocale ("LC_ALL", 0B);
# .MEM_66 = VDEF <.MEM_65>
oldloc_11 = strdup (_10);
# .MEM_67 = VDEF <.MEM_66>
setlocale ("LC_ALL", "");
# VUSE <.MEM_67>
progsize_12 = strlen (progname_7);
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);
# .MEM_79 = VDEF <.MEM_78>
__builtin_fwrite ("out of memory\n", 1, 14, _16);
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
# .MEM_3 = VDEF <.MEM_54>
concat ("dummy", "");
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));
# .MEM_11 = VDEF <.MEM_7>
memcpy (newstr_3, arg_5(D), length_9);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
dirname_32 = malloc (_31);
=============== *this point analyzable =================
progname_7 = concat (_6, "bin");
=============== *this point analyzable =================
_8 = setlocale ("LC_ALL", 0B);
=============== *this point analyzable =================
oldloc_11 = strdup (_10);
=============== *this point analyzable =================
progsize_12 = strlen (progname_7);
=============== *this point analyzable =================
ret_24 = malloc (_14);
=============== *this point analyzable =================
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
=============== *this point analyzable =================
newstr_3 = malloc (1);
=============== *this point analyzable =================
length_9 = strlen (arg_5(D));
=============== *this point analyzable =================
dirname_32 = malloc (_31);
=============== *this point analyzable =================
memcpy (dirname_32, _5, _34);
=============== *this point analyzable =================
memcpy (dirname_32, _5, _34);
=============== *this point analyzable =================
progname_7 = concat (_6, "bin");
=============== *this point analyzable =================
oldloc_11 = strdup (_10);
=============== *this point analyzable =================
ret_24 = malloc (_14);
=============== *this point analyzable =================
__builtin_fwrite ("out of memory\n", 1, 14, _16);
=============== *this point analyzable =================
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
=============== *this point analyzable =================
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
=============== *this point analyzable =================
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
=============== *this point analyzable =================
length_9 = strlen (arg_5(D));
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:concat========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path concat  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5c60
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d169a1900 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f7d16990ac8>
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*end_10 = 0;
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
end_10 = newstr_3 + length_9;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5c60
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d169a1900 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f7d16990ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a50d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
    var <var_decl 0x7f7d169a1f30 length>
    def_stmt length_9 = strlen (arg_5(D));
    version:9
    ptr-info 0x7f7d1699cc80>
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a50d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
    var <var_decl 0x7f7d169a1f30 length>
    def_stmt length_9 = strlen (arg_5(D));
    version:9
    ptr-info 0x7f7d1699cc80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_11 = VDEF <.MEM_7>
memcpy (newstr_3, arg_5(D), length_9);
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:setlocale========= [0m
[40;33m =======POP node_fun stack:setlocale========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:mbstowcs========= [0m
[40;33m =======POP node_fun stack:mbstowcs========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7d1699dbd0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d1770bd80 dirname>
    def_stmt dirname_32 = malloc (_31);
    version:32
    ptr-info 0x7f7d16990960>
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_63 = _46;
lto1: warning: use location
_6 = _63;
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
progname_7 = concat (_6, "bin");
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :malloc
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
_69 = ret_24;
lto1: warning: use location
_41 = dirname_32 + _40;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_41 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
memcpy (dirname_32, _5, _34);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:2 
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);
dirname_32 = malloc (_31);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699dbd0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d1770bd80 dirname>
    def_stmt dirname_32 = malloc (_31);
    version:32
    ptr-info 0x7f7d16990960>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bd80
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d16995c60 progname>
    def_stmt progname_7 = concat (_6, "bin");
    version:7
    ptr-info 0x7f7d16990870>
# .MEM_64 = VDEF <.MEM_56>
progname_7 = concat (_6, "bin");

 ================== pre trace ptable ================== 
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function concat
 
 Start check Pointer Collect  

======================================================================
# .MEM_64 = VDEF <.MEM_56>
progname_7 = concat (_6, "bin");
progname_7 = concat (_6, "bin");
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bd80
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d16995c60 progname>
    def_stmt progname_7 = concat (_6, "bin");
    version:7
    ptr-info 0x7f7d16990870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bdc8
    type <integer_type 0x7f7d16e785e8 int public SI
        size <integer_cst 0x7f7d16e63df8 constant 32>
        unit-size <integer_cst 0x7f7d16e63e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e785e8 precision:32 min <integer_cst 0x7f7d16e63db0 -2147483648> max <integer_cst 0x7f7d16e63dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7d16e7f9d8>>
   
    def_stmt _8 = setlocale ("LC_ALL", 0B);
    version:8>
# .MEM_65 = VDEF <.MEM_64>
_8 = setlocale ("LC_ALL", 0B);

 ================== pre trace ptable ================== 
trace fucntion name:setlocale 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function setlocale
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_64>
_8 = setlocale ("LC_ALL", 0B);
_8 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:0 
_9 = (long int) _8;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
_10 = (const char *) _9;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
oldloc_11 = strdup (_10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
this stmt call this function :strdup
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================

 Expand conflict 
 The same function may have multiple branches :setlocale
# .MEM_65 = VDEF <.MEM_64>
_8 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bdc8
    type <integer_type 0x7f7d16e785e8 int public SI
        size <integer_cst 0x7f7d16e63df8 constant 32>
        unit-size <integer_cst 0x7f7d16e63e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e785e8 precision:32 min <integer_cst 0x7f7d16e63db0 -2147483648> max <integer_cst 0x7f7d16e63dc8 2147483647>
        pointer_to_this <pointer_type 0x7f7d16e7f9d8>>
   
    def_stmt _8 = setlocale ("LC_ALL", 0B);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bea0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d16995e10 oldloc>
    def_stmt oldloc_11 = strdup (_10);
    version:11
    ptr-info 0x7f7d169908a0>
# .MEM_66 = VDEF <.MEM_65>
oldloc_11 = strdup (_10);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_66 = VDEF <.MEM_65>
oldloc_11 = strdup (_10);
oldloc_11 = strdup (_10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bea0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d16995e10 oldloc>
    def_stmt oldloc_11 = strdup (_10);
    version:11
    ptr-info 0x7f7d169908a0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bee8
    type <integer_type 0x7f7d1697b540 size_t public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f7d16995cf0 progsize>
    def_stmt progsize_12 = strlen (progname_7);
    version:12
    ptr-info 0x7f7d1699cac0>
# VUSE <.MEM_67>
progsize_12 = strlen (progname_7);

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_67>
progsize_12 = strlen (progname_7);
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bee8
    type <integer_type 0x7f7d1697b540 size_t public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f7d16995cf0 progsize>
    def_stmt progsize_12 = strlen (progname_7);
    version:12
    ptr-info 0x7f7d1699cac0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d318
    type <pointer_type 0x7f7d16e7f000
        type <void_type 0x7f7d16e78f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7d16e7f000>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16e849d8>>
    var <var_decl 0x7f7d1699b990 ret>
    def_stmt ret_24 = malloc (_14);
    version:24
    ptr-info 0x7f7d16990900>
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_69 = ret_24;
lto1: warning: use location
progname_copy_15 = _69;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d318
    type <pointer_type 0x7f7d16e7f000
        type <void_type 0x7f7d16e78f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f7d16e7f000>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16e849d8>>
    var <var_decl 0x7f7d1699b990 ret>
    def_stmt ret_24 = malloc (_14);
    version:24
    ptr-info 0x7f7d16990900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d120
    type <integer_type 0x7f7d1697b540 size_t public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f7d16995d80 count>
    def_stmt count_19 = mbstowcs (progname_copy_15, progname_7, _18);
    version:19>
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);

 ================== pre trace ptable ================== 
trace fucntion name:mbstowcs 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function mbstowcs
 
 Start check Pointer Collect  

======================================================================
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d120
    type <integer_type 0x7f7d1697b540 size_t public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f7d16995d80 count>
    def_stmt count_19 = mbstowcs (progname_copy_15, progname_7, _18);
    version:19>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699db88
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _31 = (long unsigned int) _30;
    version:31>
_31 = (long unsigned int) _30;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);
dirname_32 = malloc (_31);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_63 = _46;
lto1: warning: use location
_6 = _63;
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
progname_7 = concat (_6, "bin");
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :malloc
# .MEM_59 = VDEF <.MEM_1(D)>
dirname_32 = malloc (_31);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
_69 = ret_24;
lto1: warning: use location
_41 = dirname_32 + _40;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_41 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
memcpy (dirname_32, _5, _34);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699db88
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _31 = (long unsigned int) _30;
    version:31>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bcf0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
   
    def_stmt _5 = 0B;
    version:5
    ptr-info 0x7f7d16990840>
_5 = 0B;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_52 = PHI <_5(2), base_49(3)>
lto1: warning: use location
this stmt have mutiple branch --------
_57 = base_52;
lto1: warning: use location
_47 = _57;
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
   28 |   return unix_lbasename (name);
      |          ^
_58 = _47;
lto1: warning: use location
base_25 = _58;
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_26 = PHI <base_25(5), base_27(6)>
lto1: warning: use location
this stmt have mutiple branch --------
base_42 = PHI <base_26(10), base_26(11), base_26(12), base_38(13)>
lto1: warning: use location
this stmt have mutiple branch --------
_43 = base_42 - _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_44 = (sizetype) _43;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_45 = dirname_32 + _44;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_45 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_39 = base_26 - _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_40 = (sizetype) _39;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_41 = dirname_32 + _40;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_41 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_38 = base_26 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_36 = *base_26;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_36 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_35 = base_26 - _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_35 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_33 = base_26 - _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_34 = (long unsigned int) _33;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
# .MEM_60 = VDEF <.MEM_59>
memcpy (dirname_32, _5, _34);
memcpy (dirname_32, _5, _34);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_29 = base_26 - _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_30 = _29 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_31 = (long unsigned int) _30;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
dirname_32 = malloc (_31);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
this stmt call this function :malloc
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_63 = _46;
lto1: warning: use location
_6 = _63;
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
progname_7 = concat (_6, "bin");
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location
progname_copy_15 = _69;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = MEM[(const char *)base_26 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_27 = base_26 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
name_48 = PHI <_5(2), name_50(3)>
lto1: warning: use location
this stmt have mutiple branch ---mbstowcs-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = *name_48;
./benchmarks/binutils/leak_7/binutils_leak_7.c:19:21: warning: use location
   19 |   for (base = name; *name; name++)
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_51 != 0)
./benchmarks/binutils/leak_7/binutils_leak_7.c:19:21: warning: use location
_37 = MEM[(const char *)_5];
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^
_37 = MEM[(const char *)_5];
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bcf0
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
   
    def_stmt _5 = 0B;
    version:5
    ptr-info 0x7f7d16990840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
base_52 = PHI <_5(2), base_49(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
base_52 = PHI <_5(2), base_49(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
base_26 = PHI <base_25(5), base_27(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
base_26 = PHI <base_25(5), base_27(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
base_42 = PHI <base_26(10), base_26(11), base_26(12), base_38(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
base_42 = PHI <base_26(10), base_26(11), base_26(12), base_38(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_46 = PHI <0B(9), dirname_32(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: free in this location
  135 |         xfree(progname_copy);
      |         ^
[40;35m target gimple type: ssa_name [0m
name_48 = PHI <_5(2), name_50(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
name_48 = PHI <_5(2), name_50(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699dc60
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _34 = (long unsigned int) _33;
    version:34>
_34 = (long unsigned int) _33;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_60 = VDEF <.MEM_59>
memcpy (dirname_32, _5, _34);
memcpy (dirname_32, _5, _34);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_60 = VDEF <.MEM_59>
memcpy (dirname_32, _5, _34);
memcpy (dirname_32, _5, _34);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699dc60
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _34 = (long unsigned int) _33;
    version:34>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bd38
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
   
    def_stmt _6 = _63;
    version:6
    ptr-info 0x7f7d16990858>
_6 = _63;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_64 = VDEF <.MEM_56>
progname_7 = concat (_6, "bin");
progname_7 = concat (_6, "bin");
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bd38
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
   
    def_stmt _6 = _63;
    version:6
    ptr-info 0x7f7d16990858>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6be58
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = (const char *) _9;
    version:10
    ptr-info 0x7f7d16990888>
_10 = (const char *) _9;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_66 = VDEF <.MEM_65>
oldloc_11 = strdup (_10);
oldloc_11 = strdup (_10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6be58
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = (const char *) _9;
    version:10
    ptr-info 0x7f7d16990888>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_71 = VDEF <.MEM_70>
setlocale ("LC_ALL", oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d16e6bf78
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _14 = _13 * 4;
    version:14>
_14 = _13 * 4;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_68 = VDEF <.MEM_67>
ret_24 = malloc (_14);
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location
progname_copy_15 = _69;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d16e6bf78
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _14 = _13 * 4;
    version:14>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d048
    type <pointer_type 0x7f7d169827e0
        type <record_type 0x7f7d16982738 FILE BLK
            size <integer_cst 0x7f7d16f380a8 constant 1728>
            unit-size <integer_cst 0x7f7d16972870 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16982690 fields <field_decl 0x7f7d16983260 _flags> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169827e0>>
        unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16987348>>
   
    def_stmt _16 = stderr;
    version:16
    ptr-info 0x7f7d169908d0>
# VUSE <.MEM_78>
_16 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_79 = VDEF <.MEM_78>
__builtin_fwrite ("out of memory\n", 1, 14, _16);
__builtin_fwrite ("out of memory\n", 1, 14, _16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_79 = VDEF <.MEM_78>
__builtin_fwrite ("out of memory\n", 1, 14, _16);
__builtin_fwrite ("out of memory\n", 1, 14, _16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d048
    type <pointer_type 0x7f7d169827e0
        type <record_type 0x7f7d16982738 FILE BLK
            size <integer_cst 0x7f7d16f380a8 constant 1728>
            unit-size <integer_cst 0x7f7d16972870 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16982690 fields <field_decl 0x7f7d16983260 _flags> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169827e0>>
        unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16987348>>
   
    def_stmt _16 = stderr;
    version:16
    ptr-info 0x7f7d169908d0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_79 = VDEF <.MEM_78>
__builtin_fwrite ("out of memory\n", 1, 14, _16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_78>
__builtin_fwrite ("out of memory\n", 1, 14, _16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d000
    type <pointer_type 0x7f7d169852a0
        type <integer_type 0x7f7d169851f8 wchar_t SI
            size <integer_cst 0x7f7d16e63df8 constant 32>
            unit-size <integer_cst 0x7f7d16e63e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e785e8 precision:32 min <integer_cst 0x7f7d16e63db0 -2147483648> max <integer_cst 0x7f7d16e63dc8 2147483647> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169852a0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7d16995ea0 progname_copy>
    def_stmt progname_copy_15 = _69;
    version:15
    ptr-info 0x7f7d169908b8>
progname_copy_15 = _69;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d000
    type <pointer_type 0x7f7d169852a0
        type <integer_type 0x7f7d169851f8 wchar_t SI
            size <integer_cst 0x7f7d16e63df8 constant 32>
            unit-size <integer_cst 0x7f7d16e63e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e785e8 precision:32 min <integer_cst 0x7f7d16e63db0 -2147483648> max <integer_cst 0x7f7d16e63dc8 2147483647> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169852a0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7d16995ea0 progname_copy>
    def_stmt progname_copy_15 = _69;
    version:15
    ptr-info 0x7f7d169908b8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d0d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _18 = progsize_12 + 1;
    version:18>
_18 = progsize_12 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_15 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
progsize_12 = strlen (progname_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_13 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_14 = _13 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
ret_24 = malloc (_14);
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc
_69 = ret_24;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d0d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
   
    def_stmt _18 = progsize_12 + 1;
    version:18>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_70 = VDEF <.MEM_68>
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
if (count_19 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_53 = MEM[(int *)progname_copy_15];
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_73 = VDEF <.MEM_72>
printf ("%d\n", _53);
./benchmarks/binutils/leak_7/binutils_leak_7.c:91:9: warning: use location
   91 |         __USE(progname);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
_18 = progsize_12 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d1699d168
    type <pointer_type 0x7f7d169827e0
        type <record_type 0x7f7d16982738 FILE BLK
            size <integer_cst 0x7f7d16f380a8 constant 1728>
            unit-size <integer_cst 0x7f7d16972870 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16982690 fields <field_decl 0x7f7d16983260 _flags> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169827e0>>
        unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16987348>>
   
    def_stmt _20 = stderr;
    version:20
    ptr-info 0x7f7d169908e8>
# VUSE <.MEM_76>
_20 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d1699d168
    type <pointer_type 0x7f7d169827e0
        type <record_type 0x7f7d16982738 FILE BLK
            size <integer_cst 0x7f7d16f380a8 constant 1728>
            unit-size <integer_cst 0x7f7d16972870 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16982690 fields <field_decl 0x7f7d16983260 _flags> context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f7d169827e0>>
        unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f7d16987348>>
   
    def_stmt _20 = stderr;
    version:20
    ptr-info 0x7f7d169908e8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_74 = VDEF <.MEM_73>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: addr_expr [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_68>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_70>
free (oldloc_11);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (progname_copy_15);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_77 = VDEF <.MEM_76>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:concat========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path concat  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5c60
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d169a1900 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f7d16990ac8>
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*end_10 = 0;
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
end_10 = newstr_3 + length_9;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5c60
    type <pointer_type 0x7f7d1697bbd0
        type <integer_type 0x7f7d1697b9d8 char public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bbd0>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7d16e6e168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f7d16985bd0>>
    var <var_decl 0x7f7d169a1900 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f7d16990ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a50d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
    var <var_decl 0x7f7d169a1f30 length>
    def_stmt length_9 = strlen (arg_5(D));
    version:9
    ptr-info 0x7f7d1699cc80>
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a50d8
    type <integer_type 0x7f7d16e787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e78738 precision:64 min <integer_cst 0x7f7d16e63e88 0> max <integer_cst 0x7f7d16e64500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f7d16e847e0>>
    var <var_decl 0x7f7d169a1f30 length>
    def_stmt length_9 = strlen (arg_5(D));
    version:9
    ptr-info 0x7f7d1699cc80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7>
length_9 = strlen (arg_5(D));
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
length_9 = strlen (arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
*end_10 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_11 = VDEF <.MEM_7>
memcpy (newstr_3, arg_5(D), length_9);
memcpy (newstr_3, arg_5(D), length_9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7d169a5cf0
    type <pointer_type 0x7f7d1697bb28
        type <integer_type 0x7f7d1697ba80 char readonly public QI
            size <integer_cst 0x7f7d16e63ca8 constant 8>
            unit-size <integer_cst 0x7f7d16e63cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7d16e783f0 precision:8 min <integer_cst 0x7f7d16972720 -128> max <integer_cst 0x7f7d16972708 127>
            pointer_to_this <pointer_type 0x7f7d1697bb28>>
        public unsigned DI
        size <integer_cst 0x7f7d16e63bb8 constant 64>
        unit-size <integer_cst 0x7f7d16e63bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7d1698b580 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f7d16990af8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
_5 = 0B;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 929350386]:
base_49 = name_48 + 1;
name_50 = name_48 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1044213916]:
# name_48 = PHI <_5(2), name_50(3)>
# base_52 = PHI <_5(2), base_49(3)>
_51 = *name_48;
if (_51 != 0)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 114863530]:
_57 = base_52;
_47 = _57;
_58 = _47;
base_25 = _58;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878296]:
base_27 = base_26 + 18446744073709551615;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# base_26 = PHI <base_25(5), base_27(6)>
if (_5 < base_26)
  goto <bb 8>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1014686026]:
_28 = MEM[(const char *)base_26 + -1B];
if (_28 == 47)
  goto <bb 6>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 114863531]:
if (_5 == base_26)
  goto <bb 15>; [15.47%]
else
  goto <bb 10>; [84.53%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 97094143]:
_29 = base_26 - _5;
_30 = _29 + 2;
_31 = (long unsigned int) _30;
dirname_32 = malloc (_31);
_33 = base_26 - _5;
_34 = (long unsigned int) _33;
memcpy (dirname_32, _5, _34);
_35 = base_26 - _5;
if (_35 == 2)
  goto <bb 11>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 33012009]:
_36 = *base_26;
if (_36 == 47)
  goto <bb 12>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 11224083]:
_37 = MEM[(const char *)_5];
if (_37 != 47)
  goto <bb 13>; [66.00%]
else
  goto <bb 14>; [34.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 7407895]:
base_38 = base_26 + 1;
_39 = base_26 - _5;
_40 = (sizetype) _39;
_41 = dirname_32 + _40;
*_41 = 46;

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 97094143]:
# base_42 = PHI <base_26(10), base_26(11), base_26(12), base_38(13)>
_43 = base_42 - _5;
_44 = (sizetype) _43;
_45 = dirname_32 + _44;
*_45 = 0;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 114863532]:
# _46 = PHI <0B(9), dirname_32(14)>
_63 = _46;
_6 = _63;
progname_7 = concat (_6, "bin");
_8 = setlocale ("LC_ALL", 0B);
_9 = (long int) _8;
_10 = (const char *) _9;
oldloc_11 = strdup (_10);
setlocale ("LC_ALL", "");
progsize_12 = strlen (progname_7);
_13 = progsize_12 + 1;
_14 = _13 * 4;
ret_24 = malloc (_14);
_69 = ret_24;
progname_copy_15 = _69;
if (progname_copy_15 == 0B)
  goto <bb 16>; [0.04%]
else
  goto <bb 17>; [99.96%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 45945]:
free (oldloc_11);
_16 = stderr;
__builtin_fwrite ("out of memory\n", 1, 14, _16);
_17 = 0;
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 114817586]:
_18 = progsize_12 + 1;
count_19 = mbstowcs (progname_copy_15, progname_7, _18);
if (count_19 == 18446744073709551615)
  goto <bb 18>; [20.97%]
else
  goto <bb 19>; [79.03%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 24077248]:
free (oldloc_11);
free (progname_copy_15);
_20 = stderr;
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _20);
_21 = 0;
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 90740338]:
setlocale ("LC_ALL", oldloc_11);
free (oldloc_11);
_53 = MEM[(int *)progname_copy_15];
printf ("%d\n", _53);
free (progname_copy_15);
_22 = 1;

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 114863532]:
# _23 = PHI <_17(16), _21(18), _22(19)>
concat ("dummy", "");
printf ("%d\n", 1835890020);
return 0;

=======Mapping node_fun:concat=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newstr_3 = malloc (1);
length_9 = strlen (arg_5(D));
memcpy (newstr_3, arg_5(D), length_9);
end_10 = newstr_3 + length_9;
*end_10 = 0;
return newstr_3;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    all ptable point : 25 [0m
[40;34m    analyzable ptable point : 20 [0m
[40;34m    used_stmt array stack totalsize of : 0.004264 mb[0m
[40;34m    collect time: : 0.002459 s [0m
[40;34m    algorithm time: 0.059972 s [0m
[40;34m    gimple stmt count : : 78 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:28 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 84%)
 phase opt and generate             :   0.04 (100%)   0.04 (100%)   0.08 (100%)   348k ( 14%)
 callgraph functions expansion      :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 13%)   197k (  8%)
 ipa lto gimple in                  :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    77k (  3%)
 ipa pure const                     :   0.00 (  0%)   0.00 (  0%)   0.01 ( 13%)     0  (  0%)
 loop fini                          :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 plugin execution                   :   0.02 ( 50%)   0.04 (100%)   0.06 ( 75%)   904  (  0%)
 TOTAL                              :   0.04          0.04          0.08         2562k
