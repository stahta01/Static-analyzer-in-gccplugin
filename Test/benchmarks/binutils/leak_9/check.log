In file included from ./benchmarks/binutils/leak_9/binutils_leak_9.c:6:0:
./benchmarks/binutils/leak_9/../include/common.h: In function ‘discard_my_cleanups’:
./benchmarks/binutils/leak_9/../include/common.h:94:21: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_9/../include/common.h: In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_9/../include/common.h:108:13: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:6: warning: implicit declaration of function ‘strncmp’ [-Wimplicit-function-declaration]
  if (strncmp (mangled, "_ada_", 5) == 0)
      ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  len0 = strlen (mangled) + 7 + 1;
         ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_9/binutils_leak_9.c:12:36: warning: implicit declaration of function ‘isdigit’ [-Wimplicit-function-declaration]
 #define ISDIGIT(c) (ISASCII (c) && isdigit (c))
                                    ^
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:29: note: in expansion of macro ‘ISDIGIT’
      while (ISLOWER (*p) || ISDIGIT (*p)
                             ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
                   memcpy (d, operators[k][1], slen);
                   ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
           strcpy (d, name);
           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: incompatible implicit declaration of built-in function ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: incompatible implicit declaration of built-in function ‘strcpy’
           strcpy (d, name);
           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: incompatible implicit declaration of built-in function ‘memcpy’
                           memcpy (d, special[k][1], slen);
                           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: incompatible implicit declaration of built-in function ‘strcpy’
      strcpy (demangled, mangled);
      ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
In file included from ./benchmarks/binutils/leak_9/binutils_leak_9.c:6:0:
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘cplus_demangle’:
./benchmarks/binutils/leak_9/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:10: note: in expansion of macro ‘xstrdup’
   return xstrdup (mangled);
          ^~~~~~~
./benchmarks/binutils/leak_9/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:10: note: in expansion of macro ‘xstrdup’
   return xstrdup (mangled);
          ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:4: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
    strncpy (p, *mangled, symbol_len);
    ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:4: warning: incompatible implicit declaration of built-in function ‘strncpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:4: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:8: warning: implicit declaration of function ‘time’; did you mean ‘die’? [-Wimplicit-function-declaration]
  srand(time(&t));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 17
--------GIMPLE Cond -------
succs:= 19
succs:= 19
--------GIMPLE Cond -------
succs:= 22
--------GIMPLE Cond -------
succs:= 15
succs:= 16
succs:= 23
--------GIMPLE Cond -------
succs:= 24
--------GIMPLE Cond -------
succs:= 25
--------GIMPLE Cond -------
succs:= 26
--------GIMPLE Cond -------
succs:= 26
succs:= 27
--------GIMPLE Cond -------
succs:= 28
--------GIMPLE Cond -------
succs:= 29
--------GIMPLE Cond -------
succs:= 24
succs:= 25
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
succs:= 31
succs:= 32
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
succs:= 33
succs:= 34
--------GIMPLE Cond -------
succs:= 35
--------GIMPLE Cond -------
succs:= 35
succs:= 36
--------GIMPLE Cond -------
succs:= 37
--------GIMPLE Cond -------
succs:= 37
succs:= 40
--------GIMPLE Cond -------
succs:= 41
--------GIMPLE Cond -------
succs:= 42
--------GIMPLE Cond -------
succs:= 43
--------GIMPLE_SWITCH -------
succs:= 41
succs:= 42
succs:= 43
--------GIMPLE Cond -------
succs:= 49
--------GIMPLE_SWITCH -------
succs:= 49
--------GIMPLE Cond -------
succs:= 53
--------GIMPLE Cond -------
succs:= 54
--------GIMPLE Cond -------
succs:= 55
--------GIMPLE Cond -------
succs:= 57
--------GIMPLE Cond -------
succs:= 58
--------GIMPLE Cond -------
succs:= 58
succs:= 59
--------GIMPLE Cond -------
succs:= 60
--------GIMPLE Cond -------
succs:= 55
--------GIMPLE Cond -------
succs:= 64
--------GIMPLE Cond -------
succs:= 65
--------GIMPLE Cond -------
succs:= 66
succs:= 66
--------GIMPLE Cond -------
succs:= 69
--------GIMPLE Cond -------
succs:= 64
succs:= 65
--------GIMPLE Cond -------
succs:= 54
--------GIMPLE Cond -------
succs:= 72
--------GIMPLE Cond -------
succs:= 75
--------GIMPLE Cond -------
succs:= 76
--------GIMPLE Cond -------
succs:= 53
succs:= 60
succs:= 63
--------GIMPLE Cond -------
succs:= 78
--------GIMPLE Cond -------
succs:= 79
--------GIMPLE Cond -------
succs:= 78
succs:= 79
succs:= 82
--------GIMPLE Cond -------
succs:= 27
succs:= 34
succs:= 70
succs:= 77
succs:= 83
succs:= 8
succs:= 17
succs:= 23
succs:= 28
succs:= 29
succs:= 30
succs:= 32
succs:= 36
succs:= 70
succs:= 71
succs:= 72
succs:= 76
succs:= 77
succs:= 83
--------GIMPLE Cond -------
succs:= 85
succs:= 85
succs:= 5
--------GIMPLE Cond -------
succs:= 90
succs:= 90
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_5 = VDEF <.MEM_3(D)>
_1 = time (&t);
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
# .MEM_250 = VDEF <.MEM_249>
_12 = rand ();
# .MEM_251 = VDEF <.MEM_250>
p_14 = malloc (4);
# .MEM_252 = VDEF <.MEM_251>
strncpy (p_14, _15, 3);
# .MEM_254 = VDEF <.MEM_253>
_21 = rand ();
# .MEM_271 = VDEF <.MEM_254>
_23 = strdup (p_14);
# .MEM_255 = VDEF <.MEM_254>
_24 = rand ();
# VUSE <.MEM_255>
_28 = strncmp (p_14, "_ada_", 5);
# VUSE <.MEM_255>
_34 = strlen (mangled_30);
# .MEM_256 = VDEF <.MEM_255>
demangled_39 = malloc (_38);
# VUSE <.MEM_235>
slen_74 = strlen (_73);
# VUSE <.MEM_235>
_76 = strncmp (p_41, _75, slen_74);
# VUSE <.MEM_235>
slen_79 = strlen (_78);
# .MEM_258 = VDEF <.MEM_257>
memcpy (d_82, _83, slen_79);
# .MEM_262 = VDEF <.MEM_238>
strcpy (d_97, name_133);
# VUSE <.MEM_262>
_134 = strlen (name_133);
# .MEM_263 = VDEF <.MEM_238>
strcpy (d_97, name_139);
# VUSE <.MEM_263>
_140 = strlen (name_139);
# VUSE <.MEM_239>
slen_171 = strlen (_170);
# VUSE <.MEM_239>
_173 = strncmp (p_145, _172, slen_171);
# VUSE <.MEM_239>
slen_176 = strlen (_175);
# .MEM_264 = VDEF <.MEM_239>
memcpy (d_178, _177, slen_176);
# VUSE <.MEM_242>
_212 = strlen (mangled_30);
# .MEM_267 = VDEF <.MEM_242>
demangled_216 = malloc (_215);
# .MEM_269 = VDEF <.MEM_267>
strcpy (demangled_216, mangled_30);
# VUSE <.MEM_267>
_218 = __builtin_object_size (demangled_216, 1);
# .MEM_268 = VDEF <.MEM_267>
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
# .MEM_273 = VDEF <.MEM_245>
_233 = __printf_chk (1, "%d\n", _232);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 14 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:__builtin___sprintf_chk========= [0m
[40;33m =======POP node_fun stack:__builtin___sprintf_chk========= [0m
[40;42m =======pre add _ fucntion:__builtin_object_size========= [0m
[40;33m =======POP node_fun stack:__builtin_object_size========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;33m =======POP node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
# .MEM_251 = VDEF <.MEM_250>
p_14 = malloc (4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
bb index := 92
# VUSE <.MEM_10>
return 0;
In function ‘main’:
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 92 ,possiable got to succ := 93

======================================================================
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_28 = strncmp (p_14, "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:6: warning: use location
  if (strncmp (mangled, "_ada_", 5) == 0)
      ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 
if (_28 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:5: warning: use location
  if (strncmp (mangled, "_ada_", 5) == 0)
     ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:5: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_23 = strdup (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:10: warning: use location
   return xstrdup (mangled);
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_253 = VDEF <.MEM_252>
MEM[(char *)p_14 + 3B] = 0;
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
MEM[(char *)p_14 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:19: warning: use location
    p [symbol_len] = '\0';
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
strncpy (p_14, _15, 3);
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
strncpy (p_14, _15, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:4: warning: use location
    strncpy (p, *mangled, symbol_len);
    ^
this stmt is child function---strncpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
this stmt is child function---__builtin___sprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:__builtin___sprintf_chk 

 ================== trace ================== 
trace fucntion free:2 
_218 = __builtin_object_size (demangled_216, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:2 
strcpy (demangled_216, mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
      strcpy (demangled, mangled);
      ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_220 = demangled_216;
./benchmarks/binutils/leak_9/binutils_leak_9.c:293:10: warning: use location
   return demangled;
          ^
_217 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
   if (mangled[0] == '<')
              ^
if (_217 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
   if (mangled[0] == '<')
      ^
if (_217 == 60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
Cond in fucntion main basic block 85
 ================== possible direct basic block ================= 
from main basic block 86
 ================== possible direct basic block ================= 
from main basic block 87
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_212 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
   len0 = strlen (mangled);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
len0_213 = (int) _212;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
   len0 = strlen (mangled);
        ^
_34 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: use location
  len0 = strlen (mangled) + 7 + 1;
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_35 = (unsigned int) _34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
  len0 = strlen (mangled) + 7 + 1;
                              ^
_36 = _35 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
len0_37 = (int) _36;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:7: warning: use location
  len0 = strlen (mangled) + 7 + 1;
       ^
_38 = (long unsigned int) len0_37;
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:14: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
              ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:2 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
_31 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:7: warning: use location
  if (!ISLOWER (mangled[0]))
       ^
_32 = (unsigned char) _31;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:6: warning: use location
  if (!ISLOWER (mangled[0]))
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^
mangled_29 = p_14 + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:11: warning: use location
   mangled += 5;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_251 = VDEF <.MEM_250>
p_14 = malloc (4);
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
p_14 = malloc (4);
./benchmarks/binutils/leak_9/binutils_leak_9.c:315:10: warning: use location
    char *p = XNEWVEC (char, symbol_len + 1), *q;
          ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928582240
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92857f6c0 p>
    def_stmt p_14 = malloc (4);
    version 14
    ptr-info 0x7ff9285977e0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
# .MEM_271 = VDEF <.MEM_254>
_23 = strdup (p_14);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
bb index := 92
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 92 ,possiable got to succ := 93

======================================================================
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_28 = strncmp (p_14, "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:6: warning: use location
  if (strncmp (mangled, "_ada_", 5) == 0)
      ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 
if (_28 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:5: warning: use location
  if (strncmp (mangled, "_ada_", 5) == 0)
     ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:5: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_23 = strdup (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:10: warning: use location
   return xstrdup (mangled);
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_253 = VDEF <.MEM_252>
MEM[(char *)p_14 + 3B] = 0;
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
MEM[(char *)p_14 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:19: warning: use location
    p [symbol_len] = '\0';
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
strncpy (p_14, _15, 3);
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
strncpy (p_14, _15, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:4: warning: use location
    strncpy (p, *mangled, symbol_len);
    ^
this stmt is child function---strncpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
this stmt is child function---__builtin___sprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:__builtin___sprintf_chk 

 ================== trace ================== 
trace fucntion free:2 
_218 = __builtin_object_size (demangled_216, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:2 
strcpy (demangled_216, mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
      strcpy (demangled, mangled);
      ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_220 = demangled_216;
./benchmarks/binutils/leak_9/binutils_leak_9.c:293:10: warning: use location
   return demangled;
          ^
_217 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
   if (mangled[0] == '<')
              ^
if (_217 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
   if (mangled[0] == '<')
      ^
if (_217 == 60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
Cond in fucntion main basic block 85
 ================== possible direct basic block ================= 
from main basic block 86
 ================== possible direct basic block ================= 
from main basic block 87
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_212 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
   len0 = strlen (mangled);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
len0_213 = (int) _212;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
   len0 = strlen (mangled);
        ^
_34 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: use location
  len0 = strlen (mangled) + 7 + 1;
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_35 = (unsigned int) _34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
  len0 = strlen (mangled) + 7 + 1;
                              ^
_36 = _35 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
len0_37 = (int) _36;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:7: warning: use location
  len0 = strlen (mangled) + 7 + 1;
       ^
_38 = (long unsigned int) len0_37;
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:14: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
              ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:2 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
_31 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:7: warning: use location
  if (!ISLOWER (mangled[0]))
       ^
_32 = (unsigned char) _31;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:6: warning: use location
  if (!ISLOWER (mangled[0]))
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^
mangled_29 = p_14 + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:11: warning: use location
   mangled += 5;
           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928582b40
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _23 = strdup (p_14);
    version 23
    ptr-info 0x7ff928597888>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
mangled_30 = PHI <p_14(6), mangled_29(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
# .MEM_256 = VDEF <.MEM_255>
demangled_39 = malloc (_38);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
d_40 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:55:4: warning: use location
  d = demangled;
    ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a0120
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_39 = malloc (_38);
    version 39
    ptr-info 0x7ff928597900>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
# .MEM_267 = VDEF <.MEM_242>
demangled_216 = malloc (_215);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
this stmt is child function---__builtin___sprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:__builtin___sprintf_chk 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
      strcpy (demangled, mangled);
      ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_217 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
   if (mangled[0] == '<')
              ^
if (_217 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
   if (mangled[0] == '<')
      ^
if (_217 == 60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
Cond in fucntion main basic block 85
 ================== possible direct basic block ================= 
from main basic block 86
 ================== possible direct basic block ================= 
from main basic block 87
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_212 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
   len0 = strlen (mangled);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_213 = (int) _212;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
   len0 = strlen (mangled);
        ^
_34 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: use location
  len0 = strlen (mangled) + 7 + 1;
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_35 = (unsigned int) _34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
  len0 = strlen (mangled) + 7 + 1;
                              ^
_36 = _35 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
len0_37 = (int) _36;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:7: warning: use location
  len0 = strlen (mangled) + 7 + 1;
       ^
_38 = (long unsigned int) len0_37;
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:14: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
              ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
_31 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:7: warning: use location
  if (!ISLOWER (mangled[0]))
       ^
_32 = (unsigned char) _31;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:6: warning: use location
  if (!ISLOWER (mangled[0]))
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                  ^
if (_76 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^
_220 = demangled_216;
./benchmarks/binutils/leak_9/binutils_leak_9.c:293:10: warning: use location
   return demangled;
          ^
demangled_216 = malloc (_215);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:13: warning: use location
   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
             ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285ac3a8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e1b0 demangled>
    def_stmt demangled_216 = malloc (_215);
    version 216
    ptr-info 0x7ff928597eb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7ff9285569e0
    type <pointer_type 0x7ff92856be70
        type <integer_type 0x7ff92856bb28 time_t DI
            size <integer_cst 0x7ff928a38be8 constant 64>
            unit size <integer_cst 0x7ff928a38c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38e70 -9223372036854775808> max <integer_cst 0x7ff928a38e88 9223372036854775807> context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7ff92856be70>>
        unsigned DI size <integer_cst 0x7ff928a38be8 64> unit size <integer_cst 0x7ff928a38c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7ff9297cdcf0 t type <integer_type 0x7ff92856bb28 time_t>
        addressable DI file ./benchmarks/binutils/leak_9/binutils_leak_9.c line 337 col 9 size <integer_cst 0x7ff928a38be8 64> unit size <integer_cst 0x7ff928a38c00 8>
        align 64 context <function_decl 0x7ff928563b00 main>
        chain <var_decl 0x7ff9297cdc60 s type <record_type 0x7ff928562a80 string>
            BLK file ./benchmarks/binutils/leak_9/binutils_leak_9.c line 339 col 9
            size <integer_cst 0x7ff928a540a8 constant 192>
            unit size <integer_cst 0x7ff928a54078 constant 24>
            align 128 context <function_decl 0x7ff928563b00 main> chain <var_decl 0x7ff9297cdbd0 mangled>>>
    ./benchmarks/binutils/leak_9/binutils_leak_9.c:341:8 start: ./benchmarks/binutils/leak_9/binutils_leak_9.c:341:8 finish: ./benchmarks/binutils/leak_9/binutils_leak_9.c:341:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff928a40900
    type <integer_type 0x7ff928a4c690 unsigned int public unsigned SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c690 precision 32 min <integer_cst 0x7ff928a38e58 0> max <integer_cst 0x7ff928a38e10 4294967295>
        pointer_to_this <pointer_type 0x7ff928a58888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:2: warning: use location
  srand(time(&t));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7ff928a40900
    type <integer_type 0x7ff928a4c690 unsigned int public unsigned SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c690 precision 32 min <integer_cst 0x7ff928a38e58 0> max <integer_cst 0x7ff928a38e10 4294967295>
        pointer_to_this <pointer_type 0x7ff928a58888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:2: warning: use location
  srand(time(&t));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7ff928a40900
    type <integer_type 0x7ff928a4c690 unsigned int public unsigned SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c690 precision 32 min <integer_cst 0x7ff928a38e58 0> max <integer_cst 0x7ff928a38e10 4294967295>
        pointer_to_this <pointer_type 0x7ff928a58888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928a40900
    type <integer_type 0x7ff928a4c690 unsigned int public unsigned SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c690 precision 32 min <integer_cst 0x7ff928a38e58 0> max <integer_cst 0x7ff928a38e10 4294967295>
        pointer_to_this <pointer_type 0x7ff928a58888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285821b0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _12 = rand ();
    version 12>
# .MEM_250 = VDEF <.MEM_249>
_12 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _12 % 2;
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _12 % 2;
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================
_13 = _12 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:6: warning: use location
  if (__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_13 == 1)
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_13 == 1)
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================
if (_13 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:5: warning: use location
  if (__RANDBOOL)
     ^
if (_13 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 93
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_249>
_12 = rand ();
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_249>
_12 = rand ();
bb index := 2
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 93

======================================================================
_12 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:6: warning: use location
  if (__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7ff9285821b0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _12 = rand ();
    version 12>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285821b0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _12 = rand ();
    version 12>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff928565d98 type <integer_type 0x7ff928a4c7e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7ff928582ab0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _21 = rand ();
    version 21>
# .MEM_254 = VDEF <.MEM_253>
_21 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = _21 % 2;
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
_22 = _21 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:6: warning: use location
  if (__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 1)
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
if (_22 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:5: warning: use location
  if (__RANDBOOL)
     ^
if (_22 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:5: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_254 = VDEF <.MEM_253>
_21 = rand ();
bb index := 3
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 93

======================================================================
_21 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:6: warning: use location
  if (__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7ff928582ab0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _21 = rand ();
    version 21>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928582ab0
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _21 = rand ();
    version 21>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff928582b88
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _24 = rand ();
    version 24>
# .MEM_255 = VDEF <.MEM_254>
_24 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_25 = _24 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:6: warning: use location
  if (__RANDBOOL)
      ^
if (_25 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:5: warning: use location
  if (__RANDBOOL)
     ^
if (_25 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 90
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_24 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:6: warning: use location
  if (__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7ff928582b88
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _24 = rand ();
    version 24>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928582b88
    type <integer_type 0x7ff928a4c5e8 int public SI
        size <integer_cst 0x7ff928a38e28 constant 32>
        unit size <integer_cst 0x7ff928a38e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff928a4c5e8 precision 32 min <integer_cst 0x7ff928a38de0 -2147483648> max <integer_cst 0x7ff928a38df8 2147483647>
        pointer_to_this <pointer_type 0x7ff928a53a80>>
   
    def_stmt _24 = rand ();
    version 24>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
mangled_30 = PHI <p_14(6), mangled_29(7)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
this stmt is child function---__builtin___sprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:__builtin___sprintf_chk 

 ================== trace ================== 
trace fucntion free:0 
_218 = __builtin_object_size (demangled_216, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
      strcpy (demangled, mangled);
      ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_220 = demangled_216;
./benchmarks/binutils/leak_9/binutils_leak_9.c:293:10: warning: use location
   return demangled;
          ^
_217 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
   if (mangled[0] == '<')
              ^
if (_217 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
   if (mangled[0] == '<')
      ^
if (_217 == 60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
Cond in fucntion main basic block 85
 ================== possible direct basic block ================= 
from main basic block 86
 ================== possible direct basic block ================= 
from main basic block 87
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_212 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
   len0 = strlen (mangled);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
len0_213 = (int) _212;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
   len0 = strlen (mangled);
        ^
_34 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: use location
  len0 = strlen (mangled) + 7 + 1;
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
_35 = (unsigned int) _34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
  len0 = strlen (mangled) + 7 + 1;
                              ^
_36 = _35 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
len0_37 = (int) _36;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:7: warning: use location
  len0 = strlen (mangled) + 7 + 1;
       ^
_38 = (long unsigned int) len0_37;
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:14: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
              ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
_31 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:7: warning: use location
  if (!ISLOWER (mangled[0]))
       ^
_32 = (unsigned char) _31;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:6: warning: use location
  if (!ISLOWER (mangled[0]))
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                  ^
if (_76 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff928593e58
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff928588f30 mangled>
    def_stmt mangled_30 = PHI <p_14(6), mangled_29(7)>
    version 30
    ptr-info 0x7ff9285978e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
_38 = (long unsigned int) len0_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
d_40 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:55:4: warning: use location
  d = demangled;
    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a00d8
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _38 = (long unsigned int) len0_37;
    version 38>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7ff9285a0ab0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _73 = operators[k_72][0];
    version 73
    ptr-info 0x7ff9285979d8>
# VUSE <.MEM_235>
_73 = operators[k_72][0];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
slen_74 = strlen (_73);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:22: warning: use location
               size_t slen = strlen (operators[k][0]);
                      ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0ab0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _73 = operators[k_72][0];
    version 73
    ptr-info 0x7ff9285979d8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0ab0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _73 = operators[k_72][0];
    version 73
    ptr-info 0x7ff9285979d8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                  ^
if (_76 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
               if (ISDIGIT (*p))
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (unsigned int) _146;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_148 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:18: warning: use location
               if (ISDIGIT (*p))
                  ^
if (_148 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:18: warning: use location
Cond in fucntion main basic block 55
 ================== possible direct basic block ================= 
from main basic block 57
 ================== possible direct basic block ================= 
from main basic block 64
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0ab0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _73 = operators[k_72][0];
    version 73
    ptr-info 0x7ff9285979d8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (unsigned char) _52;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _53 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = _54 <= 25;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a0ab0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _73 = operators[k_72][0];
    version 73
    ptr-info 0x7ff9285979d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a01b0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_41 = PHI <mangled_30(9), p_222(10)>
    version 41
    ptr-info 0x7ff928597930>
p_41 = PHI <mangled_30(9), p_222(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a01b0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_41 = PHI <mangled_30(9), p_222(10)>
    version 41
    ptr-info 0x7ff928597930>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                  ^
if (_76 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
               if (ISDIGIT (*p))
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (unsigned int) _146;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_148 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:18: warning: use location
               if (ISDIGIT (*p))
                  ^
if (_148 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:18: warning: use location
Cond in fucntion main basic block 55
 ================== possible direct basic block ================= 
from main basic block 57
 ================== possible direct basic block ================= 
from main basic block 64
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a01b0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_41 = PHI <mangled_30(9), p_222(10)>
    version 41
    ptr-info 0x7ff928597930>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (unsigned char) _52;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _53 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = _54 <= 25;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a01b0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_41 = PHI <mangled_30(9), p_222(10)>
    version 41
    ptr-info 0x7ff928597930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a0c18
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _78 = operators[k_72][1];
    version 78
    ptr-info 0x7ff928597a20>
# VUSE <.MEM_235>
_78 = operators[k_72][1];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
slen_79 = strlen (_78);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:24: warning: use location
                   slen = strlen (operators[k][1]);
                        ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0c18
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _78 = operators[k_72][1];
    version 78
    ptr-info 0x7ff928597a20>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_82, _83, slen_79);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
                   memcpy (d, operators[k][1], slen);
                   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0c18
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _78 = operators[k_72][1];
    version 78
    ptr-info 0x7ff928597a20>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_84 = d_82 + slen_79;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
                   d += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_84 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
                   *d++ = '"';
                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a0c18
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _78 = operators[k_72][1];
    version 78
    ptr-info 0x7ff928597a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a0d38
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_82 = d_80 + 1;
    version 82
    ptr-info 0x7ff928597a68>
d_82 = d_80 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_258 = VDEF <.MEM_257>
memcpy (d_82, _83, slen_79);
memcpy (d_82, _83, slen_79);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
                   memcpy (d, operators[k][1], slen);
                   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a0d38
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_82 = d_80 + 1;
    version 82
    ptr-info 0x7ff928597a68>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_84 = d_82 + slen_79;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
                   d += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_84 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
                   *d++ = '"';
                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a0d38
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_82 = d_80 + 1;
    version 82
    ptr-info 0x7ff928597a68>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a51b0
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_97 = PHI <d_50(15), d_50(16), d_227(23)>
    version 97
    ptr-info 0x7ff928597b28>
d_97 = PHI <d_50(15), d_50(16), d_227(23)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_262 = VDEF <.MEM_238>
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
# .MEM_263 = VDEF <.MEM_238>
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_262 = VDEF <.MEM_238>
strcpy (d_97, name_133);
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a51b0
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_97 = PHI <d_50(15), d_50(16), d_227(23)>
    version 97
    ptr-info 0x7ff928597b28>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a51b0
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_97 = PHI <d_50(15), d_50(16), d_227(23)>
    version 97
    ptr-info 0x7ff928597b28>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a51b0
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_97 = PHI <d_50(15), d_50(16), d_227(23)>
    version 97
    ptr-info 0x7ff928597b28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a5bd0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e510 name>
    def_stmt name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version 133
    ptr-info 0x7ff928597bd0>
name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = strlen (name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
           d += strlen (name);
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5bd0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e510 name>
    def_stmt name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version 133
    ptr-info 0x7ff928597bd0>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5bd0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e510 name>
    def_stmt name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version 133
    ptr-info 0x7ff928597bd0>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a5bd0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e510 name>
    def_stmt name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version 133
    ptr-info 0x7ff928597bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a5d80
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e480 name>
    def_stmt name_139 = PHI <".Finalize"(50), ".Adjust"(51)>
    version 139
    ptr-info 0x7ff928597c00>
name_139 = PHI <".Finalize"(50), ".Adjust"(51)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_140 = strlen (name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
           d += strlen (name);
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5d80
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e480 name>
    def_stmt name_139 = PHI <".Finalize"(50), ".Adjust"(51)>
    version 139
    ptr-info 0x7ff928597c00>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5d80
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e480 name>
    def_stmt name_139 = PHI <".Finalize"(50), ".Adjust"(51)>
    version 139
    ptr-info 0x7ff928597c00>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a5d80
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e480 name>
    def_stmt name_139 = PHI <".Finalize"(50), ".Adjust"(51)>
    version 139
    ptr-info 0x7ff928597c00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a9678
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _170 = special[k_169][0];
    version 170
    ptr-info 0x7ff928597cd8>
# VUSE <.MEM_239>
_170 = special[k_169][0];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
slen_171 = strlen (_170);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:30: warning: use location
                       size_t slen = strlen (special[k][0]);
                              ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a9678
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _170 = special[k_169][0];
    version 170
    ptr-info 0x7ff928597cd8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a9678
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _170 = special[k_169][0];
    version 170
    ptr-info 0x7ff928597cd8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_173 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                          ^
if (_173 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
Cond in fucntion main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== possible direct basic block ================= 
from main basic block 68
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^
if (_158 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
                   if (*p == 'X')
                      ^
if (_158 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
Cond in fucntion main basic block 60
 ================== possible direct basic block ================= 
from main basic block 61
 ================== possible direct basic block ================= 
from main basic block 78
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_154 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                       ^
if (_154 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
Cond in fucntion main basic block 58
 ================== possible direct basic block ================= 
from main basic block 59
 ================== possible direct basic block ================= 
from main basic block 60
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^
if (_209 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
       if (*p == 0)
          ^
if (_209 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
Cond in fucntion main basic block 83
 ================== possible direct basic block ================= 
from main basic block 84
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a9678
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _170 = special[k_169][0];
    version 170
    ptr-info 0x7ff928597cd8>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
               if (ISDIGIT (*p))
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (unsigned int) _146;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (unsigned char) _52;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _53 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = _54 <= 25;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a9678
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _170 = special[k_169][0];
    version 170
    ptr-info 0x7ff928597cd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a5f30
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_145 = p_142 + 2;
    version 145
    ptr-info 0x7ff928597c48>
p_145 = p_142 + 2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5f30
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_145 = p_142 + 2;
    version 145
    ptr-info 0x7ff928597c48>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_173 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                          ^
if (_173 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
Cond in fucntion main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== possible direct basic block ================= 
from main basic block 68
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^
if (_158 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
                   if (*p == 'X')
                      ^
if (_158 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
Cond in fucntion main basic block 60
 ================== possible direct basic block ================= 
from main basic block 61
 ================== possible direct basic block ================= 
from main basic block 78
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_154 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                       ^
if (_154 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
Cond in fucntion main basic block 58
 ================== possible direct basic block ================= 
from main basic block 59
 ================== possible direct basic block ================= 
from main basic block 60
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^
if (_209 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
       if (*p == 0)
          ^
if (_209 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
Cond in fucntion main basic block 83
 ================== possible direct basic block ================= 
from main basic block 84
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a5f30
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_145 = p_142 + 2;
    version 145
    ptr-info 0x7ff928597c48>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
               if (ISDIGIT (*p))
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (unsigned int) _146;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (unsigned char) _52;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _53 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = _54 <= 25;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a5f30
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
    var <var_decl 0x7ff92859e090 p>
    def_stmt p_145 = p_142 + 2;
    version 145
    ptr-info 0x7ff928597c48>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a97e0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _175 = special[k_169][1];
    version 175
    ptr-info 0x7ff928597d20>
# VUSE <.MEM_239>
_175 = special[k_169][1];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slen_176 = strlen (_175);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:32: warning: use location
                           slen = strlen (special[k][1]);
                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a97e0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _175 = special[k_169][1];
    version 175
    ptr-info 0x7ff928597d20>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a97e0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _175 = special[k_169][1];
    version 175
    ptr-info 0x7ff928597d20>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a97e0
    type <pointer_type 0x7ff928562c78
        type <integer_type 0x7ff928562bd0 char readonly public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562c78>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff928562d20>>
   
    def_stmt _175 = special[k_169][1];
    version 175
    ptr-info 0x7ff928597d20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285a98b8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_178 = PHI <d_135(48), d_97(49)>
    version 178
    ptr-info 0x7ff928597d50>
d_178 = PHI <d_135(48), d_97(49)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
# .MEM_264 = VDEF <.MEM_239>
memcpy (d_178, _177, slen_176);
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a98b8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_178 = PHI <d_135(48), d_97(49)>
    version 178
    ptr-info 0x7ff928597d50>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a98b8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_178 = PHI <d_135(48), d_97(49)>
    version 178
    ptr-info 0x7ff928597d50>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285a98b8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_178 = PHI <d_135(48), d_97(49)>
    version 178
    ptr-info 0x7ff928597d50>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285a98b8
    type <pointer_type 0x7ff928562930
        type <integer_type 0x7ff928562888 char public string-flag QI
            size <integer_cst 0x7ff928a38cd8 constant 8>
            unit size <integer_cst 0x7ff928a38cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ff928a4c3f0 precision 8 min <integer_cst 0x7ff928565180 -128> max <integer_cst 0x7ff928565168 127>
            pointer_to_this <pointer_type 0x7ff928562930>>
        public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ff928a43168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7ff92859e120 d>
    def_stmt d_178 = PHI <d_135(48), d_97(49)>
    version 178
    ptr-info 0x7ff928597d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
_215 = (long unsigned int) _214;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
demangled_216 = malloc (_215);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:13: warning: use location
   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
             ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);
this stmt is child function---__builtin___sprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:__builtin___sprintf_chk 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
      strcpy (demangled, mangled);
      ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_217 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
   if (mangled[0] == '<')
              ^
if (_217 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
   if (mangled[0] == '<')
      ^
if (_217 == 60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
Cond in fucntion main basic block 85
 ================== possible direct basic block ================= 
from main basic block 86
 ================== possible direct basic block ================= 
from main basic block 87
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_212 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
   len0 = strlen (mangled);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_213 = (int) _212;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
   len0 = strlen (mangled);
        ^
_34 = strlen (mangled_30);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:9: warning: use location
  len0 = strlen (mangled) + 7 + 1;
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_35 = (unsigned int) _34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
  len0 = strlen (mangled) + 7 + 1;
                              ^
_36 = _35 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:30: warning: use location
len0_37 = (int) _36;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:7: warning: use location
  len0 = strlen (mangled) + 7 + 1;
       ^
_38 = (long unsigned int) len0_37;
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:14: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
              ^
demangled_39 = malloc (_38);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:12: warning: use location
  demangled = XNEWVEC (char, len0); // allocation site
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_270 = _221;
lto1: warning: use location
_26 = _270;
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:10: warning: use location
   return ada_demangle (mangled);
          ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_272 = _27;
lto1: warning: use location
q_16 = _272;
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:6: warning: use location
    q = cplus_demangle (p);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
this stmt is child function---free-----

 ================== find ================== 
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_245>
_230 = MEM[(int *)q_16];
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_230 = MEM[(int *)q_16];
./benchmarks/binutils/leak_9/binutils_leak_9.c:32:2: warning: use location
  __USE(s);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_275 = VDEF <.MEM_245>
_231 = __printf_chk (1, "%d\n", _230);
bb index := 91
# VUSE <.MEM_10>
return 0;
<built-in>: warning: use location
beacuse in succ := 93 have return or exit
gimple stmt in succ := 91 ,possiable got to succ := 93

======================================================================
_231 = __printf_chk (1, "%d\n", _230);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (q_16 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
    if (q)
       ^
if (q_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:7: warning: use location
Cond in fucntion main basic block 90
 ================== possible direct basic block ================= 
from main basic block 91
 ================== possible direct basic block ================= 
from main basic block 92
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
strcpy (d_97, name_139);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_97, name_133);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
           strcpy (d, name);
           ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_97 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
               *d++ = '.';
                    ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
*d_210 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
   *d = 0;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_178 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
                   *d++ = '.';
                        ^
memcpy (d_178, _177, slen_176);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
                           memcpy (d, special[k][1], slen);
                           ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_183 = d_178 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
                   *d++ = '.';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
d_141 = d_97 + _140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
           d += strlen (name);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_98 = d_97 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
               *d++ = '.';
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_50 = d_48 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location
       *d++ = *p++;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = d_48;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:9: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location
       *d++ = *p++;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = _51;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = d_80;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
                   *d++ = '"';
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_81 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
                   *d++ = '"';
                        ^
_211 = demangled_39;
./benchmarks/binutils/leak_9/binutils_leak_9.c:282:10: warning: use location
   return demangled;
          ^
_31 = *mangled_30;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:7: warning: use location
  if (!ISLOWER (mangled[0]))
       ^
_32 = (unsigned char) _31;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:6: warning: use location
  if (!ISLOWER (mangled[0]))
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = strncmp (p_41, _75, slen_74);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                   ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
               if (strncmp (p, operators[k][0], slen) == 0)
                  ^
if (_76 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_77 = p_41 + slen_74;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
                   p += slen;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
       if (p[0] == 'X')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_113 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
       if (p[0] == 'X')
          ^
if (_113 == 88)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:10: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_112 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_112 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                                    ^
if (_112 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:36: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 85
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = _109 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
       if ((*p == 'N' || *p == 'S') && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = _103 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = _102 | _104;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_105 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
          ^
if (_105 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:10: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
       if (p[0] == 'E' && p[1] == 0)
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
       if (p[0] == 'E' && p[1] == 0)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
       if (p[0] == 'E' && p[1] == 0)
          ^
if (_99 == 69)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
Cond in fucntion main basic block 31
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_95 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                                ^
if (_95 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:32: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
           else if (p[2] == '_' && p[3] == '_')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = MEM[(const char *)p_89 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = MEM[(const char *)p_89 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
           if (p[2] == 'B' && p[3] == 0)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
           if (p[2] == 'B' && p[3] == 0)
              ^
if (_92 == 66)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_89 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_91 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
                       ^
if (_91 == 75)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_89;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
       if (p[0] == 'T' && p[1] == 'K')
          ^
if (_90 == 84)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_137 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
           switch (p[1])
                    ^
_138 = (int) _137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
       else if (p[0] == 'D')
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_136 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
       else if (p[0] == 'D')
               ^
if (_136 == 68)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 50
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
           switch (p[1])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (int) _130;
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_127 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = _127 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _126 | _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = MEM[(const char *)p_122 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = MEM[(const char *)p_122 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_122;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_123 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
          ^
if (_123 == 83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_186 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^
_187 = _186 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                                ^
_184 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
           else if (p[1] == 'B' || p[1] == 'E')
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_168 = MEM[(const char *)p_142 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = MEM[(const char *)p_142 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
               else if (p[0] == '_' && p[1] != '_')
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
           if (p[1] == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_143 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
       if (p[0] == '_')
            ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_199 = MEM[(const char *)p_197 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
                          ^
_200 = (unsigned int) _199;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_198 = *p_197;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
            ^
if (_198 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
       if (p[0] == '.' && ISDIGIT (p[1]))
          ^
if (_198 == 46)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
Cond in fucntion main basic block 78
 ================== possible direct basic block ================= 
from main basic block 79
 ================== possible direct basic block ================= 
from main basic block 83
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_209 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
       if (*p == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_145 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
               p += 2;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = strncmp (p_145, _172, slen_171);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
                       if (strncmp (p, special[k][0], slen) == 0)
                           ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_150 = p_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
                     p++;
                      ^
_158 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
                   if (*p == 'X')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = MEM[(const char *)p_150 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (unsigned int) _155;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = *p_150;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = (unsigned int) _151;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_153 = _152 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_153 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
                   ^
if (_153 <= 9)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:19: warning: use location
Cond in fucntion main basic block 57
 ================== possible direct basic block ================= 
from main basic block 56
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_96 = p_89 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
               p += 4;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:14: warning: use location
    else if (p[0] == 'O')
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
    else if (p[0] == 'O')
            ^
if (_71 == 79)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:12: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 85
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_41;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:9: warning: use location
    if (!ISLOWER (*p))
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location
    if (!ISLOWER (*p))
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
    if (!ISLOWER (*p))
       ^
if (_44 > 25)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:7: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_47 = p_45 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location
       *d++ = *p++;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = p_45;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = (unsigned char) _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = MEM[(const char *)_46 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:28: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = (unsigned char) _62;
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:43: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:67:13: warning: use location
        || (p[0] == '_' && (ISLOWER (p[1]) || ISDIGIT (p[1]))));
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = (unsigned char) _56;
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:26: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = MEM[(const char *)_46 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:13: warning: use location
      while (ISLOWER (*p) || ISDIGIT (*p)
             ^
_220 = demangled_216;
./benchmarks/binutils/leak_9/binutils_leak_9.c:293:10: warning: use location
   return demangled;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff9285ac360
    type <integer_type 0x7ff928a4c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff928a38be8 constant 64>
        unit size <integer_cst 0x7ff928a38c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ff928a4c738 precision 64 min <integer_cst 0x7ff928a38eb8 0> max <integer_cst 0x7ff928a3a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff928a589d8>>
   
    def_stmt _215 = (long unsigned int) _214;
    version 215>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: use location
      free (q);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: use location
     free(p);
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_221 = PHI <demangled_39(84), demangled_216(88)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
_27 = PHI <_23(4), 0B(5), _26(89)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_80 = PHI <demangled_39(9), d_223(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_227 = PHI <d_85(20), d_80(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_97 = PHI <d_50(15), d_50(16), d_227(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_178 = PHI <d_135(48), d_97(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_229 = PHI <d_179(67), d_178(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_223 = PHI <d_98(30), d_183(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_48 = PHI <d_80(12), d_225(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
d_225 = PHI <d_50(14), d_50(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_41 = PHI <mangled_30(9), p_222(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_226 = PHI <p_77(20), p_41(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_89 = PHI <p_47(15), p_47(16), p_226(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_122 = PHI <p_89(37), p_115(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_142 = PHI <p_132(48), p_122(49)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_197 = PHI <p_142(53), p_150(60), p_160(63)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_208 = PHI <p_197(78), p_197(79), p_203(82)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_149 = PHI <p_145(55), p_228(56)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_228 = PHI <p_150(57), p_150(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_222 = PHI <p_96(30), p_145(71)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_45 = PHI <p_41(12), p_224(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
      free (q);
      ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_276 = VDEF <.MEM_275>
free (q_16);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:6: warning: Use after free error!: free location 
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_274 = VDEF <.MEM_273>
free (p_14);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:5: warning: Use after free error!: free location 
     free(p);
     ^
p_224 = PHI <p_47(14), p_47(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff928a38f90 type <integer_type 0x7ff928a4c5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff928a38f90 type <integer_type 0x7ff928a4c5e8 int> constant 1>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
mangled_278 = "123456";
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
s.e = 0B;
_19 = s.e;
s.p = _19;
_20 = s.p;
s.b = _20;
_12 = rand ();
_13 = _12 % 2;
if (_13 == 1)
  goto <bb 3>; [22.95%]
else
  goto <bb 93>; [77.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [22.95%]:
p_14 = malloc (4);
_15 = mangled_278;
strncpy (p_14, _15, 3);
MEM[(char *)p_14 + 3B] = 0;
_21 = rand ();
_22 = _21 % 2;
if (_22 == 1)
  goto <bb 4>; [30.50%]
else
  goto <bb 5>; [69.50%]

=======is loop:0=========

 bb index 4 
<bb 4> [7.00%]:
_23 = strdup (p_14);
goto <bb 90>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [15.95%]:
_24 = rand ();
_25 = _24 % 2;
if (_25 == 1)
  goto <bb 6>; [71.96%]
else
  goto <bb 90>; [28.04%]

=======is loop:0=========

 bb index 6 
<bb 6> [11.48%]:
_28 = strncmp (p_14, "_ada_", 5);
if (_28 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [5.74%]:
mangled_29 = p_14 + 5;

=======is loop:0=========

 bb index 8 
<bb 8> [11.48%]:
# mangled_30 = PHI <p_14(6), mangled_29(7)>
_31 = *mangled_30;
_32 = (unsigned char) _31;
_33 = _32 + 159;
if (_33 > 25)
  goto <bb 85> (unknown); [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [5.74%]:
_34 = strlen (mangled_30);
_35 = (unsigned int) _34;
_36 = _35 + 8;
len0_37 = (int) _36;
_38 = (long unsigned int) len0_37;
demangled_39 = malloc (_38);
d_40 = demangled_39;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [5.22%]:
# p_222 = PHI <p_96(30), p_145(71)>
# d_223 = PHI <d_98(30), d_183(71)>

=======is loop:1=========

 bb index 11 
<bb 11> [10.95%]:
# p_41 = PHI <mangled_30(9), p_222(10)>
# d_80 = PHI <demangled_39(9), d_223(10)>
_42 = *p_41;
_43 = (unsigned char) _42;
_44 = _43 + 159;
if (_44 > 25)
  goto <bb 12>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [5.48%]:
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [70.40%]:
# p_224 = PHI <p_47(14), p_47(16)>
# d_225 = PHI <d_50(14), d_50(16)>

=======is loop:1=========

 bb index 14 
<bb 14> [75.88%]:
# p_45 = PHI <p_41(12), p_224(13)>
# d_48 = PHI <d_80(12), d_225(13)>
_46 = p_45;
p_47 = p_45 + 1;
_49 = d_48;
d_50 = d_48 + 1;
_51 = *_46;
*_49 = _51;
_52 = MEM[(const char *)_46 + 1B];
_53 = (unsigned char) _52;
_54 = _53 + 159;
_55 = _54 <= 25;
_56 = MEM[(const char *)_46 + 1B];
_57 = (unsigned char) _56;
_58 = _57 + 208;
_59 = _58 <= 9;
_60 = _55 | _59;
if (_60 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [37.94%]:
_61 = MEM[(const char *)_46 + 1B];
if (_61 == 95)
  goto <bb 16>; [92.50%]
else
  goto <bb 24>; [7.50%]

=======is loop:1=========

 bb index 16 
<bb 16> [35.09%]:
_62 = MEM[(const char *)_46 + 2B];
_63 = (unsigned char) _62;
_64 = _63 + 159;
_65 = _64 <= 25;
_66 = MEM[(const char *)_46 + 2B];
_67 = (unsigned char) _66;
_68 = _67 + 208;
_69 = _68 <= 9;
_70 = _65 | _69;
if (_70 != 0)
  goto <bb 13>; [92.50%]
else
  goto <bb 24>; [7.50%]

=======is loop:1=========

 bb index 17 
<bb 17> [5.48%]:
_71 = *p_41;
if (_71 == 79)
  goto <bb 18>; [98.00%]
else
  goto <bb 85> (unknown); [2.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [5.37%]:
goto <bb 22>; [100.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [34.39%]:
_73 = operators[k_72][0];
slen_74 = strlen (_73);
_75 = operators[k_72][0];
_76 = strncmp (p_41, _75, slen_74);
if (_76 == 0)
  goto <bb 20>; [7.50%]
else
  goto <bb 21>; [92.50%]

=======is loop:1=========

 bb index 20 
<bb 20> [2.58%]:
p_77 = p_41 + slen_74;
_78 = operators[k_72][1];
slen_79 = strlen (_78);
_81 = d_80;
d_82 = d_80 + 1;
*_81 = 34;
_83 = operators[k_72][1];
memcpy (d_82, _83, slen_79);
d_84 = d_82 + slen_79;
d_85 = d_84 + 1;
*d_84 = 34;
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [31.81%]:
k_86 = k_72 + 1;

=======is loop:1=========

 bb index 22 
<bb 22> [37.18%]:
# k_72 = PHI <0(18), k_86(21)>
_87 = operators[k_72][0];
if (_87 != 0B)
  goto <bb 19>; [92.50%]
else
  goto <bb 23>; [7.50%]

=======is loop:1=========

 bb index 23 
<bb 23> [5.37%]:
# p_226 = PHI <p_77(20), p_41(22)>
# d_227 = PHI <d_85(20), d_80(22)>
_88 = operators[k_72][0];
if (_88 == 0B)
  goto <bb 85> (unknown); [2.00%]
else
  goto <bb 24>; [98.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [10.74%]:
# p_89 = PHI <p_47(15), p_47(16), p_226(23)>
# d_97 = PHI <d_50(15), d_50(16), d_227(23)>
_90 = *p_89;
if (_90 == 84)
  goto <bb 25>; [34.00%]
else
  goto <bb 31>; [66.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [3.65%]:
_91 = MEM[(const char *)p_89 + 1B];
if (_91 == 75)
  goto <bb 26>; [34.00%]
else
  goto <bb 31>; [66.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [1.24%]:
_92 = MEM[(const char *)p_89 + 2B];
if (_92 == 66)
  goto <bb 27>; [34.00%]
else
  goto <bb 28>; [66.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [0.42%]:
_93 = MEM[(const char *)p_89 + 3B];
if (_93 == 0)
  goto <bb 84>; [2.00%]
else
  goto <bb 28>; [98.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [1.23%]:
_94 = MEM[(const char *)p_89 + 2B];
if (_94 == 95)
  goto <bb 29>; [98.00%]
else
  goto <bb 85> (unknown); [2.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [1.21%]:
_95 = MEM[(const char *)p_89 + 3B];
if (_95 == 95)
  goto <bb 30>; [20.24%]
else
  goto <bb 85> (unknown); [79.76%]

=======is loop:1=========

 bb index 30 
<bb 30> [0.24%]:
p_96 = p_89 + 4;
d_98 = d_97 + 1;
*d_97 = 46;
// predicted unlikely by continue predictor.
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [9.50%]:
_99 = *p_89;
if (_99 == 69)
  goto <bb 32>; [34.00%]
else
  goto <bb 33>; [66.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [3.23%]:
_100 = MEM[(const char *)p_89 + 1B];
if (_100 == 0)
  goto <bb 85> (unknown); [2.00%]
else
  goto <bb 33>; [98.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [9.43%]:
_101 = *p_89;
_102 = _101 == 80;
_103 = *p_89;
_104 = _103 == 78;
_105 = _102 | _104;
if (_105 != 0)
  goto <bb 34>; [50.00%]
else
  goto <bb 35>; [50.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [4.72%]:
_106 = MEM[(const char *)p_89 + 1B];
if (_106 == 0)
  goto <bb 84>; [2.00%]
else
  goto <bb 35>; [98.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [9.34%]:
_107 = *p_89;
_108 = _107 == 78;
_109 = *p_89;
_110 = _109 == 83;
_111 = _108 | _110;
if (_111 != 0)
  goto <bb 36>; [50.00%]
else
  goto <bb 37>; [50.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [4.67%]:
_112 = MEM[(const char *)p_89 + 1B];
if (_112 == 0)
  goto <bb 85> (unknown); [2.00%]
else
  goto <bb 37>; [98.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [9.24%]:
_113 = *p_89;
if (_113 == 88)
  goto <bb 38>; [20.97%]
else
  goto <bb 41>; [79.03%]

=======is loop:1=========

 bb index 38 
<bb 38> [1.94%]:
p_114 = p_89 + 1;
goto <bb 40>; [100.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [10.98%]:
p_116 = p_115 + 1;

=======is loop:1=========

 bb index 40 
<bb 40> [12.92%]:
# p_115 = PHI <p_114(38), p_116(39)>
_117 = *p_115;
_118 = _117 == 110;
_119 = *p_115;
_120 = _119 == 98;
_121 = _118 | _120;
if (_121 != 0)
  goto <bb 39>; [85.00%]
else
  goto <bb 41>; [15.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [9.24%]:
# p_122 = PHI <p_89(37), p_115(40)>
_123 = *p_122;
if (_123 == 83)
  goto <bb 42>; [34.00%]
else
  goto <bb 49>; [66.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [3.14%]:
_124 = MEM[(const char *)p_122 + 1B];
if (_124 != 0)
  goto <bb 43>; [50.00%]
else
  goto <bb 49>; [50.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [1.57%]:
_125 = MEM[(const char *)p_122 + 2B];
_126 = _125 == 95;
_127 = MEM[(const char *)p_122 + 2B];
_128 = _127 == 0;
_129 = _126 | _128;
if (_129 != 0)
  goto <bb 44>; [50.00%]
else
  goto <bb 49>; [50.00%]

=======is loop:1=========

 bb index 44 
<bb 44> [0.79%]:
_130 = MEM[(const char *)p_122 + 1B];
_131 = (int) _130;
switch (_130) <default: unknown [20.00%], case 73: <L1> [20.00%], case 79: <L2> [20.00%], case 82: <L3> [20.00%], case 87: <L0> [20.00%]>

=======is loop:1=========

 bb index 45 
<L0> [0.16%]:
goto <bb 48> (<L3>); [100.00%]

=======is loop:1=========

 bb index 46 
<L1> [0.16%]:
goto <bb 48> (<L3>); [100.00%]

=======is loop:1=========

 bb index 47 
<L2> [0.16%]:

=======is loop:1=========

 bb index 48 
# name_133 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
<L3> [0.63%]:
p_132 = p_122 + 2;
strcpy (d_97, name_133);
_134 = strlen (name_133);
d_135 = d_97 + _134;
goto <bb 53>; [100.00%]

=======is loop:1=========

 bb index 49 
<bb 49> [8.46%]:
_136 = *p_122;
if (_136 == 68)
  goto <bb 50>; [2.00%]
else
  goto <bb 53>; [98.00%]

=======is loop:0=========

 bb index 50 
<bb 50> [0.17%]:
_137 = MEM[(const char *)p_122 + 1B];
_138 = (int) _137;
switch (_137) <default: unknown [33.33%], case 65: <L4> [33.33%], case 70: <L5> [33.33%]>

=======is loop:0=========

 bb index 51 
<L4> [0.06%]:

=======is loop:0=========

 bb index 52 
# name_139 = PHI <".Finalize"(50), ".Adjust"(51)>
<L5> [0.11%]:
strcpy (d_97, name_139);
_140 = strlen (name_139);
d_141 = d_97 + _140;
goto <bb 84>; [100.00%]

=======is loop:1=========

 bb index 53 
<bb 53> [8.92%]:
# p_142 = PHI <p_132(48), p_122(49)>
# d_178 = PHI <d_135(48), d_97(49)>
_143 = *p_142;
if (_143 == 95)
  goto <bb 54>; [98.00%]
else
  goto <bb 78>; [2.00%]

=======is loop:1=========

 bb index 54 
<bb 54> [8.74%]:
_144 = MEM[(const char *)p_142 + 1B];
if (_144 == 95)
  goto <bb 55>; [98.00%]
else
  goto <bb 72>; [2.00%]

=======is loop:1=========

 bb index 55 
<bb 55> [8.56%]:
p_145 = p_142 + 2;
_146 = MEM[(const char *)p_142 + 2B];
_147 = (unsigned int) _146;
_148 = _147 + 4294967248;
if (_148 <= 9)
  goto <bb 57>; [2.00%]
else
  goto <bb 64>; [98.00%]

=======is loop:1=========

 bb index 56 
<bb 56> [2.20%]:
# p_228 = PHI <p_150(57), p_150(59)>

=======is loop:1=========

 bb index 57 
<bb 57> [2.37%]:
# p_149 = PHI <p_145(55), p_228(56)>
p_150 = p_149 + 1;
_151 = *p_150;
_152 = (unsigned int) _151;
_153 = _152 + 4294967248;
if (_153 <= 9)
  goto <bb 56>; [50.00%]
else
  goto <bb 58>; [50.00%]

=======is loop:1=========

 bb index 58 
<bb 58> [1.19%]:
_154 = *p_150;
if (_154 == 95)
  goto <bb 59>; [92.50%]
else
  goto <bb 60>; [7.50%]

=======is loop:1=========

 bb index 59 
<bb 59> [1.10%]:
_155 = MEM[(const char *)p_150 + 1B];
_156 = (unsigned int) _155;
_157 = _156 + 4294967248;
if (_157 <= 9)
  goto <bb 56>; [92.50%]
else
  goto <bb 60>; [7.50%]

=======is loop:0=========

 bb index 60 
<bb 60> [0.17%]:
_158 = *p_150;
if (_158 == 88)
  goto <bb 61>; [34.00%]
else
  goto <bb 78>; [66.00%]

=======is loop:0=========

 bb index 61 
<bb 61> [0.06%]:
p_159 = p_149 + 2;
goto <bb 63>; [100.00%]

=======is loop:1=========

 bb index 62 
<bb 62> [0.33%]:
p_161 = p_160 + 1;

=======is loop:1=========

 bb index 63 
<bb 63> [0.39%]:
# p_160 = PHI <p_159(61), p_161(62)>
_162 = *p_160;
_163 = _162 == 110;
_164 = *p_160;
_165 = _164 == 98;
_166 = _163 | _165;
if (_166 != 0)
  goto <bb 62>; [85.00%]
else
  goto <bb 78>; [15.00%]

=======is loop:1=========

 bb index 64 
<bb 64> [8.39%]:
_167 = MEM[(const char *)p_142 + 2B];
if (_167 == 95)
  goto <bb 65>; [51.12%]
else
  goto <bb 71>; [48.88%]

=======is loop:1=========

 bb index 65 
<bb 65> [4.29%]:
_168 = MEM[(const char *)p_142 + 3B];
if (_168 != 95)
  goto <bb 69>; [79.76%]
else
  goto <bb 71>; [20.24%]

=======is loop:1=========

 bb index 66 
<bb 66> [21.93%]:
_170 = special[k_169][0];
slen_171 = strlen (_170);
_172 = special[k_169][0];
_173 = strncmp (p_145, _172, slen_171);
if (_173 == 0)
  goto <bb 67>; [7.50%]
else
  goto <bb 68>; [92.50%]

=======is loop:0=========

 bb index 67 
<bb 67> [1.64%]:
p_174 = p_145 + slen_171;
_175 = special[k_169][1];
slen_176 = strlen (_175);
_177 = special[k_169][1];
memcpy (d_178, _177, slen_176);
d_179 = d_178 + slen_176;
goto <bb 70>; [100.00%]

=======is loop:1=========

 bb index 68 
<bb 68> [20.28%]:
k_180 = k_169 + 1;

=======is loop:1=========

 bb index 69 
<bb 69> [23.70%]:
# k_169 = PHI <0(65), k_180(68)>
_181 = special[k_169][0];
if (_181 != 0B)
  goto <bb 66>; [92.50%]
else
  goto <bb 70>; [7.50%]

=======is loop:0=========

 bb index 70 
<bb 70> [3.42%]:
# d_229 = PHI <d_179(67), d_178(69)>
_182 = special[k_169][0];
if (_182 != 0B)
  goto <bb 84>; [66.53%]
else
  goto <bb 85> (unknown); [33.47%]

=======is loop:1=========

 bb index 71 
<bb 71> [4.97%]:
d_183 = d_178 + 1;
*d_178 = 46;
// predicted unlikely by continue predictor.
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 72 
<bb 72> [0.17%]:
_184 = MEM[(const char *)p_142 + 1B];
_185 = _184 == 66;
_186 = MEM[(const char *)p_142 + 1B];
_187 = _186 == 69;
_188 = _185 | _187;
if (_188 != 0)
  goto <bb 73>; [50.00%]
else
  goto <bb 85> (unknown); [50.00%]

=======is loop:0=========

 bb index 73 
<bb 73> [0.09%]:
p_189 = p_142 + 2;
goto <bb 75>; [100.00%]

=======is loop:1=========

 bb index 74 
<bb 74> [0.50%]:
p_191 = p_190 + 1;

=======is loop:1=========

 bb index 75 
<bb 75> [0.58%]:
# p_190 = PHI <p_189(73), p_191(74)>
_192 = *p_190;
_193 = (unsigned int) _192;
_194 = _193 + 4294967248;
if (_194 <= 9)
  goto <bb 74>; [85.00%]
else
  goto <bb 76>; [15.00%]

=======is loop:0=========

 bb index 76 
<bb 76> [0.09%]:
_195 = *p_190;
if (_195 == 115)
  goto <bb 77>; [34.00%]
else
  goto <bb 85> (unknown); [66.00%]

=======is loop:0=========

 bb index 77 
<bb 77> [0.03%]:
_196 = MEM[(const char *)p_190 + 1B];
if (_196 == 0)
  goto <bb 84>; [46.00%]
else
  goto <bb 85> (unknown); [54.00%]

=======is loop:0=========

 bb index 78 
<bb 78> [0.35%]:
# p_197 = PHI <p_142(53), p_150(60), p_160(63)>
_198 = *p_197;
if (_198 == 46)
  goto <bb 79>; [34.00%]
else
  goto <bb 83>; [66.00%]

=======is loop:0=========

 bb index 79 
<bb 79> [0.12%]:
_199 = MEM[(const char *)p_197 + 1B];
_200 = (unsigned int) _199;
_201 = _200 + 4294967248;
if (_201 <= 9)
  goto <bb 80>; [50.00%]
else
  goto <bb 83>; [50.00%]

=======is loop:0=========

 bb index 80 
<bb 80> [0.06%]:
p_202 = p_197 + 2;
goto <bb 82>; [100.00%]

=======is loop:1=========

 bb index 81 
<bb 81> [0.34%]:
p_204 = p_203 + 1;

=======is loop:1=========

 bb index 82 
<bb 82> [0.40%]:
# p_203 = PHI <p_202(80), p_204(81)>
_205 = *p_203;
_206 = (unsigned int) _205;
_207 = _206 + 4294967248;
if (_207 <= 9)
  goto <bb 81>; [85.00%]
else
  goto <bb 83>; [15.00%]

=======is loop:0=========

 bb index 83 
<bb 83> [0.35%]:
# p_208 = PHI <p_197(78), p_197(79), p_203(82)>
_209 = *p_208;
if (_209 == 0)
  goto <bb 84>; [46.00%]
else
  goto <bb 85> (unknown); [54.00%]

=======is loop:0=========

 bb index 84 
<bb 84> [2.67%]:
# d_210 = PHI <d_97(27), d_97(34), d_141(52), d_229(70), d_178(77), d_178(83)>
*d_210 = 0;
_211 = demangled_39;
goto <bb 89>; [100.00%]

=======is loop:0=========

 bb index 85 
unknown [8.81%]:
_212 = strlen (mangled_30);
len0_213 = (int) _212;
_214 = len0_213 + 3;
_215 = (long unsigned int) _214;
demangled_216 = malloc (_215);
_217 = *mangled_30;
if (_217 == 60)
  goto <bb 86>; [34.00%]
else
  goto <bb 87>; [66.00%]

=======is loop:0=========

 bb index 86 
<bb 86> [3.00%]:
strcpy (demangled_216, mangled_30);
goto <bb 88>; [100.00%]

=======is loop:0=========

 bb index 87 
<bb 87> [5.82%]:
_218 = __builtin_object_size (demangled_216, 1);
_219 = __builtin___sprintf_chk (demangled_216, 1, _218, "<%s>", mangled_30);

=======is loop:0=========

 bb index 88 
<bb 88> [8.81%]:
_220 = demangled_216;

=======is loop:0=========

 bb index 89 
<bb 89> [11.48%]:
# _221 = PHI <demangled_39(84), demangled_216(88)>
_270 = _221;
_26 = _270;

=======is loop:0=========

 bb index 90 
<bb 90> [22.95%]:
# _27 = PHI <_23(4), 0B(5), _26(89)>
_272 = _27;
q_16 = _272;
if (q_16 != 0B)
  goto <bb 91>; [66.53%]
else
  goto <bb 92>; [33.47%]

=======is loop:0=========

 bb index 91 
<bb 91> [15.27%]:
_230 = MEM[(int *)q_16];
_231 = __printf_chk (1, "%d\n", _230);
free (q_16);
goto <bb 93>; [100.00%]

=======is loop:0=========

 bb index 92 
<bb 92> [7.68%]:
_232 = MEM[(int *)p_14];
_233 = __printf_chk (1, "%d\n", _232);
free (p_14);

=======is loop:0=========

 bb index 93 
<bb 93> [100.00%]:
_17 = mangled_278;
_18 = _17 + 3;
mangled_279 = _18;
t ={v} {CLOBBER};
s ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 22 [0m
[40;34m    used_stmt array stack totalsize of : 39320 [0m
[40;34m    collect time: : 0.003315 s [0m
[40;34m    algorithm time: 0.107705 s [0m
[40;34m    gimple stmt count : : 283 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
