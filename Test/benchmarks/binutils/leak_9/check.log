../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: implicit declaration of function ‘strncmp’ [-Wimplicit-function-declaration]
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strncmp’
    7 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:40: warning: ‘strncmp’ argument 3 type is ‘int’ where ‘long unsigned int’ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |                                        ^
<built-in>: note: built-in ‘strncmp’ declared here
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_9/binutils_leak_9.c:12:36: warning: implicit declaration of function ‘isdigit’ [-Wimplicit-function-declaration]
   12 | #define ISDIGIT(c) (ISASCII (c) && isdigit (c))
      |                                    ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:66:64: note: in expansion of macro ‘ISDIGIT’
   66 |                                         while (ISLOWER (*p) || ISDIGIT (*p)
      |                                                                ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:8:1: note: include ‘<ctype.h>’ or provide a declaration of ‘isdigit’
    7 | #include "../include/binutils.h"
  +++ |+#include <ctype.h>
    8 | 
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
  171 |           strcpy (d, name);
      |           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: incompatible implicit declaration of built-in function ‘strcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: incompatible implicit declaration of built-in function ‘strcpy’ [-Wbuiltin-declaration-mismatch]
  189 |           strcpy (d, name);
      |           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: incompatible implicit declaration of built-in function ‘strcpy’ [-Wbuiltin-declaration-mismatch]
  289 |      strcpy (demangled, mangled);
      |      ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
In file included from ./benchmarks/binutils/leak_9/binutils_leak_9.c:6:
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘cplus_demangle’:
./benchmarks/binutils/leak_9/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: note: in expansion of macro ‘xstrdup’
  300 |                 return xstrdup (mangled);
      |                        ^~~~~~~
./benchmarks/binutils/leak_9/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: note: in expansion of macro ‘xstrdup’
  300 |                 return xstrdup (mangled);
      |                        ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^~~~~~~
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: incompatible implicit declaration of built-in function ‘strncpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
./benchmarks/binutils/leak_9/binutils_leak_9.c: In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  341 |         srand(time(&t));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  1298k ( 43%)
 phase parsing                      :   0.04 ( 67%)   0.01 (100%)   0.04 ( 57%)  1232k ( 41%)
 phase opt and generate             :   0.02 ( 33%)   0.00 (  0%)   0.02 ( 29%)   455k ( 15%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 callgraph ipa passes               :   0.02 ( 33%)   0.00 (  0%)   0.01 ( 14%)   191k (  6%)
 ipa lto decl out                   :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)   264  (  0%)
 preprocessing                      :   0.01 ( 17%)   0.00 (  0%)   0.03 ( 43%)   372k ( 12%)
 lexical analysis                   :   0.02 ( 33%)   0.01 (100%)   0.01 ( 14%)     0  (  0%)
 parser function body               :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)   180k (  6%)
 inline parameters                  :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 14%)    23k (  1%)
 TOTAL                              :   0.06          0.01          0.07         2995k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 96%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    81k (  4%)
 phase stream out                   :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa lto decl in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    57k (  3%)
 whopr wpa I/O                      :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2240k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
addr_expraddr_expraddr_expraddr_expraddr_expr------string_init--
addr_expraddr_expraddr_expraddr_expraddr_expr------demangle_template_value_parm--
=======node_fun:demangle_template_value_parm=========
node:= 2 
 	next_branch :=3
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------strncpy--
addr_expraddr_expraddr_expraddr_expraddr_expr------cplus_demangle--
node:= 4 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------string_append--
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------string_append--
=======node_fun:cplus_demangle=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 3 
 	next_branch :=6
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------ada_demangle--
=======node_fun:ada_demangle=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------strncmp--
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=91
node:= 6 
 	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=10
	next_branch :=13
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=9
	next_branch :=11
node:= 11 
 	next_branch :=12
	next_branch :=21
node:= 12 
 	next_branch :=9
	next_branch :=21
node:= 13 
 	next_branch :=17
	next_branch :=20
node:= 14 
 	next_branch :=15
	next_branch :=16
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------strncmp--
node:= 15 
 	next_branch :=18
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=14
	next_branch :=18
node:= 18 
 	next_branch :=19
	next_branch :=21
node:= 19 
 	next_branch :=91
node:= 20 
 	next_branch :=91
node:= 21 
 	next_branch :=22
	next_branch :=29
node:= 22 
 	next_branch :=23
	next_branch :=29
node:= 23 
 	next_branch :=24
	next_branch :=25
node:= 24 
 	next_branch :=90
	next_branch :=25
node:= 25 
 	next_branch :=26
	next_branch :=28
node:= 26 
 	next_branch :=27
	next_branch :=28
node:= 27 
 	next_branch :=7
node:= 28 
 	next_branch :=91
node:= 29 
 	next_branch :=30
	next_branch :=32
node:= 30 
 	next_branch :=31
	next_branch :=32
node:= 31 
 	next_branch :=91
node:= 32 
 	next_branch :=33
	next_branch :=34
node:= 33 
 	next_branch :=90
	next_branch :=34
node:= 34 
 	next_branch :=35
	next_branch :=37
node:= 35 
 	next_branch :=36
	next_branch :=37
node:= 36 
 	next_branch :=91
node:= 37 
 	next_branch :=38
	next_branch :=41
node:= 38 
 	next_branch :=40
node:= 39 
 	next_branch :=40
node:= 40 
 	next_branch :=39
	next_branch :=41
node:= 41 
 	next_branch :=42
	next_branch :=50
node:= 42 
 	next_branch :=43
	next_branch :=50
node:= 43 
 	next_branch :=44
	next_branch :=50
node:= 44 
 	next_branch :=48
	next_branch :=46
	next_branch :=47
	next_branch :=49
	next_branch :=45
node:= 45 
 	next_branch :=49
node:= 46 
 	next_branch :=49
node:= 47 
 	next_branch :=49
node:= 48 
 	next_branch :=91
node:= 49 
 	next_branch :=55
addr_expraddr_expraddr_expraddr_expraddr_expr------strcpy--
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 50 
 	next_branch :=51
	next_branch :=55
node:= 51 
 	next_branch :=53
	next_branch :=52
	next_branch :=54
node:= 52 
 	next_branch :=54
node:= 53 
 	next_branch :=91
node:= 54 
 	next_branch :=90
addr_expraddr_expraddr_expraddr_expraddr_expr------strcpy--
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 55 
 	next_branch :=56
	next_branch :=83
node:= 56 
 	next_branch :=57
	next_branch :=75
node:= 57 
 	next_branch :=59
	next_branch :=66
node:= 58 
 	next_branch :=59
node:= 59 
 	next_branch :=58
	next_branch :=60
node:= 60 
 	next_branch :=61
	next_branch :=62
node:= 61 
 	next_branch :=58
	next_branch :=62
node:= 62 
 	next_branch :=63
	next_branch :=83
node:= 63 
 	next_branch :=65
node:= 64 
 	next_branch :=65
node:= 65 
 	next_branch :=64
	next_branch :=83
node:= 66 
 	next_branch :=67
	next_branch :=74
node:= 67 
 	next_branch :=71
	next_branch :=74
node:= 68 
 	next_branch :=69
	next_branch :=70
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------strncmp--
node:= 69 
 	next_branch :=72
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
node:= 70 
 	next_branch :=71
node:= 71 
 	next_branch :=68
	next_branch :=72
node:= 72 
 	next_branch :=90
	next_branch :=73
node:= 73 
 	next_branch :=91
node:= 74 
 	next_branch :=7
node:= 75 
 	next_branch :=76
	next_branch :=82
node:= 76 
 	next_branch :=78
node:= 77 
 	next_branch :=78
node:= 78 
 	next_branch :=77
	next_branch :=79
node:= 79 
 	next_branch :=80
	next_branch :=81
node:= 80 
 	next_branch :=90
	next_branch :=81
node:= 81 
 	next_branch :=91
node:= 82 
 	next_branch :=91
node:= 83 
 	next_branch :=84
	next_branch :=88
node:= 84 
 	next_branch :=85
	next_branch :=88
node:= 85 
 	next_branch :=87
node:= 86 
 	next_branch :=87
node:= 87 
 	next_branch :=86
	next_branch :=88
node:= 88 
 	next_branch :=90
	next_branch :=89
node:= 89 
 	next_branch :=91
node:= 90 
 	next_branch :=94
node:= 91 
 	next_branch :=92
	next_branch :=93
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 92 
 	next_branch :=94
addr_expraddr_expraddr_expraddr_expraddr_expr------strcpy--
node:= 93 
 	next_branch :=94
addr_expraddr_expraddr_expraddr_expraddr_expr------sprintf--
=======node_fun:string_append=========
=======node_fun:string_init=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 54 
===============The second stage : Mapping stmt=================
# .MEM_5 = VDEF <.MEM_4>
_1 = time (&t);
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
# .MEM_7 = VDEF <.MEM_6>
string_init (&s);
# .MEM_8 = VDEF <.MEM_7>
demangle_template_value_parm (&mangled, &s);
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = rand ();
# .MEM_20 = VDEF <.MEM_19>
p_10 = malloc (4);
# .MEM_21 = VDEF <.MEM_20>
strncpy (p_10, _3, 3);
# .MEM_23 = VDEF <.MEM_22>
q_15 = cplus_demangle (p_10);
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
# .MEM_17 = VDEF <.MEM_16(D)>
_1 = rand ();
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
# .MEM_18 = VDEF <.MEM_17>
_3 = rand ();
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
# VUSE <.MEM_225>
slen_174 = strlen (_34);
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
# VUSE <.MEM_225>
slen_177 = strlen (_37);
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
# VUSE <.MEM_234>
_77 = strlen (name_153);
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
# VUSE <.MEM_235>
_81 = strlen (name_154);
# VUSE <.MEM_220>
slen_200 = strlen (_102);
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
# VUSE <.MEM_220>
slen_203 = strlen (_105);
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
# .MEM_239 = VDEF <.MEM_223>
demangled_216 = malloc (_129);
# .MEM_241 = VDEF <.MEM_239>
strcpy (demangled_216, mangled_131);
# .MEM_240 = VDEF <.MEM_239>
sprintf (demangled_216, "<%s>", mangled_131);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_1 = time (&t);
========================================================
=============== *this point analyzable =================
_1 = time (&t);
========================================================
 <ssa_name 0x7fcf0666d630
    type <integer_type 0x7fcf0667a690 unsigned int public unsigned SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a690 precision:32 min <integer_cst 0x7fcf06665e28 0> max <integer_cst 0x7fcf06665de0 4294967295>
        pointer_to_this <pointer_type 0x7fcf06686690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
string_init (&s);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
demangle_template_value_parm (&mangled, &s);
========================================================
=============== *this point analyzable =================
_1 = rand ();
========================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
=============== *this point analyzable =================
p_10 = malloc (4);
========================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
=============== *this point analyzable =================
strncpy (p_10, _3, 3);
========================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
=============== *this point analyzable =================
q_15 = cplus_demangle (p_10);
========================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
=============== *this point analyzable =================
string_append (s_16(D), q_15);
========================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
=============== *this point analyzable =================
_1 = rand ();
========================================================
=============== *this point analyzable =================
_14 = strdup (mangled_10(D));
========================================================
=============== *this point analyzable =================
_3 = rand ();
========================================================
=============== *this point analyzable =================
_12 = ada_demangle (mangled_10(D));
========================================================
=============== *this point analyzable =================
_12 = ada_demangle (mangled_10(D));
========================================================
=============== *this point analyzable =================
_1 = strncmp (mangled_168(D), "_ada_", 5);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_1 = strncmp (mangled_168(D), "_ada_", 5);
========================================================
=============== *this point analyzable =================
_1 = strncmp (mangled_168(D), "_ada_", 5);
========================================================
=============== *this point analyzable =================
_5 = strlen (mangled_131);
========================================================
=============== *this point analyzable =================
_5 = strlen (mangled_131);
========================================================
=============== *this point analyzable =================
demangled_172 = malloc (_8);
========================================================
=============== *this point analyzable =================
slen_174 = strlen (_34);
========================================================
=============== *this point analyzable =================
slen_174 = strlen (_34);
========================================================
=============== *this point analyzable =================
_36 = strncmp (p_132, _35, slen_174);
========================================================
=============== *this point analyzable =================
_36 = strncmp (p_132, _35, slen_174);
========================================================
=============== *this point analyzable =================
_36 = strncmp (p_132, _35, slen_174);
========================================================
=============== *this point analyzable =================
slen_177 = strlen (_37);
========================================================
=============== *this point analyzable =================
slen_177 = strlen (_37);
========================================================
=============== *this point analyzable =================
memcpy (d_178, _39, slen_177);
========================================================
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
=============== *this point analyzable =================
memcpy (d_178, _39, slen_177);
========================================================
=============== *this point analyzable =================
strcpy (d_148, name_153);
========================================================
=============== *this point analyzable =================
strcpy (d_148, name_153);
========================================================
=============== *this point analyzable =================
_77 = strlen (name_153);
========================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
=============== *this point analyzable =================
strcpy (d_148, name_154);
========================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
=============== *this point analyzable =================
_81 = strlen (name_154);
========================================================
=============== *this point analyzable =================
slen_200 = strlen (_102);
========================================================
=============== *this point analyzable =================
slen_200 = strlen (_102);
========================================================
=============== *this point analyzable =================
_104 = strncmp (p_199, _103, slen_200);
========================================================
=============== *this point analyzable =================
_104 = strncmp (p_199, _103, slen_200);
========================================================
=============== *this point analyzable =================
_104 = strncmp (p_199, _103, slen_200);
========================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
=============== *this point analyzable =================
slen_203 = strlen (_105);
========================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
=============== *this point analyzable =================
slen_203 = strlen (_105);
========================================================
=============== *this point analyzable =================
memcpy (d_149, _106, slen_203);
========================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
=============== *this point analyzable =================
memcpy (d_149, _106, slen_203);
========================================================
=============== *this point analyzable =================
_127 = strlen (mangled_131);
========================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
=============== *this point analyzable =================
demangled_216 = malloc (_129);
========================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
sprintf (demangled_216, "<%s>", mangled_131);
========================================================
=============== *this point analyzable =================
demangled_172 = malloc (_8);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:demangle_template_value_parm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path demangle_template_value_parm  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:string_append========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path string_append  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:string_append========= [0m
[40;42m =======start_check_funciton:string_append========= [0m
[40;33m =======POP node_fun stack:string_append========= [0m
[40;42m =======pre add _ fucntion:cplus_demangle========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cplus_demangle  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ada_demangle  function_call count: 6 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:ada_demangle========= [0m
[40;42m =======start_check_funciton:ada_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf06861f80
    type <array_type 0x7fcf06186498
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174888 constant 48>
        unit-size <integer_cst 0x7fcf06174870 constant 6>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf0617d888 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf061747b0 5>>
        pointer_to_this <pointer_type 0x7fcf06186540>>
    readonly constant static "_ada_\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch --------
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch --------
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch --------
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_239 = VDEF <.MEM_223>
demangled_216 = malloc (_129);
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_241 = VDEF <.MEM_239>
strcpy (demangled_216, mangled_131);
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf061ab4e0
    type <array_type 0x7fcf061881f8
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174918 constant 40>
        unit-size <integer_cst 0x7fcf061747b0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf06188150 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf06665e10 4>>
        pointer_to_this <pointer_type 0x7fcf061882a0>>
    readonly constant static "<%s>\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ada_demangle========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:cplus_demangle========= [0m
[40;42m =======start_check_funciton:cplus_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:12: warning: use location
  299 |         if (__RANDBOOL)
      |            ^
# .MEM_17 = VDEF <.MEM_16(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
if (_4 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:12: warning: use location
  302 |         if (__RANDBOOL)
      |            ^
# .MEM_18 = VDEF <.MEM_17>
_3 = rand ();
_3 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================== pre trace ptable ================== 
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_224>
return _156;
lto1: warning: use location
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
is Other function ada_demangle
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:cplus_demangle========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;33m =======POP node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:demangle_template_value_parm========= [0m
[40;42m =======start_check_funciton:demangle_template_value_parm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:13: warning: use location
  313 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:12: warning: use location
  313 |         if (__RANDBOOL)
      |            ^
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:13: warning: use location
  313 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
# .MEM_20 = VDEF <.MEM_19>
p_10 = malloc (4);
p_10 = malloc (4);
./benchmarks/binutils/leak_9/binutils_leak_9.c:315:35: warning: use location
  315 |                         char *p = XNEWVEC (char, symbol_len + 1), *q;
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
# .MEM_21 = VDEF <.MEM_20>
strncpy (p_10, _3, 3);
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
p_10 = malloc (4);
./benchmarks/binutils/leak_9/binutils_leak_9.c:315:35: warning: use location
  315 |                         char *p = XNEWVEC (char, symbol_len + 1), *q;
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
strncpy (p_10, _3, 3);
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:0 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>

 ================== pre trace ptable ================== 
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_15>
return _5;
lto1: warning: use location
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :889========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
is Other function cplus_demangle
 
 Start check Pointer Collect  

======================================================================
free (p_10);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_23 = VDEF <.MEM_22>
q_15 = cplus_demangle (p_10);
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:demangle_template_value_parm========= [0m
[40;42m =======pre add _ fucntion:string_init========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path string_init  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:string_init========= [0m
[40;42m =======start_check_funciton:string_init========= [0m
[40;33m =======POP node_fun stack:string_init========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7fcf06f0de10 t
    type <integer_type 0x7fcf06188888 time_t DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e40 -9223372036854775808> max <integer_cst 0x7fcf06665e58 9223372036854775807> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf061889d8>>
    addressable DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:337:9 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dd80 s>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fcf06f0de10 t
    type <integer_type 0x7fcf06188888 time_t DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e40 -9223372036854775808> max <integer_cst 0x7fcf06665e58 9223372036854775807> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf061889d8>>
    addressable DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:337:9 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dd80 s>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:15: warning: use location
  341 |         srand(time(&t));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d5e8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = time (&t);
    version:1>
 <ssa_name 0x7fcf0666d5e8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d5e8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = time (&t);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
_2 = (unsigned int) _1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:9: warning: use location
  341 |         srand(time(&t));
      |         ^
srand (_2);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d5e8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d630
    type <integer_type 0x7fcf0667a690 unsigned int public unsigned SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a690 precision:32 min <integer_cst 0x7fcf06665e28 0> max <integer_cst 0x7fcf06665de0 4294967295>
        pointer_to_this <pointer_type 0x7fcf06686690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7fcf0666d630
    type <integer_type 0x7fcf0667a690 unsigned int public unsigned SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a690 precision:32 min <integer_cst 0x7fcf06665e28 0> max <integer_cst 0x7fcf06665de0 4294967295>
        pointer_to_this <pointer_type 0x7fcf06686690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d630
    type <integer_type 0x7fcf0667a690 unsigned int public unsigned SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a690 precision:32 min <integer_cst 0x7fcf06665e28 0> max <integer_cst 0x7fcf06665de0 4294967295>
        pointer_to_this <pointer_type 0x7fcf06686690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_9/binutils_leak_9.c:341:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d630
    type <integer_type 0x7fcf0667a690 unsigned int public unsigned SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a690 precision:32 min <integer_cst 0x7fcf06665e28 0> max <integer_cst 0x7fcf06665de0 4294967295>
        pointer_to_this <pointer_type 0x7fcf06686690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6>
string_init (&s);
string_init (&s);
./benchmarks/binutils/leak_9/binutils_leak_9.c:343:9: warning: use location
  343 |         string_init(&s);
      |         ^
this stmt call this function :string_init
trace fucntion name:string_init 
[40;44m =======trace_function_path string_init  function_call count: 0 level :0========  [0m
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
[40;36m ======= node_fun:string_init========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘string_init’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:24:18: warning: use location
   24 |   s->b = s->p = s->e = NULL;
      |                  ^
_1 = s_4(D)->e;
./benchmarks/binutils/leak_9/binutils_leak_9.c:24:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:24:11: warning: use location
   24 |   s->b = s->p = s->e = NULL;
      |           ^
_2 = s_4(D)->p;
./benchmarks/binutils/leak_9/binutils_leak_9.c:24:11: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
demangle_template_value_parm (&mangled, &s);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:344:9: warning: use location
  344 |         demangle_template_value_parm(&mangled, &s);
      |         ^
this stmt call this function :demangle_template_value_parm
trace fucntion name:demangle_template_value_parm 
[40;44m =======trace_function_path demangle_template_value_parm  function_call count: 6 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
[40;36m ======= node_fun:demangle_template_value_parm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
_3 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
MEM[(char *)p_10 + 3B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
  330 |                 *mangled += symbol_len;
      |                          ^
_4 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5 = _4 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D) = _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:string_append========= [0m
[40;46m =======add node_fun stack:string_append========= [0m
[40;44m =======trace_function_path string_append  function_call count: 1 level :1========  [0m
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:cplus_demangle========= [0m
cplus_demangle this fucntion return value is heap-object 
demangle_template_value_parm this fucntion return value is heap-object cplus_demangle
[40;46m =======add node_fun stack:cplus_demangle========= [0m
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :1========  [0m
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :2========  [0m
 <var_decl 0x7fcf06f0dd80 s
    type <record_type 0x7fcf06184c78 string BLK
        size <integer_cst 0x7fcf06683078 constant 192>
        unit-size <integer_cst 0x7fcf06683048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0
        fields <field_decl 0x7fcf06180260 b type <pointer_type 0x7fcf0617de70>
            unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:16:9
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fcf06665be8 constant 0>
            bit-offset <integer_cst 0x7fcf06665c30 constant 0> context <record_type 0x7fcf06184bd0 string> chain <field_decl 0x7fcf061801c8 p>> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
        pointer_to_this <pointer_type 0x7fcf06184d20>>
    addressable BLK ./benchmarks/binutils/leak_9/binutils_leak_9.c:339:9 size <integer_cst 0x7fcf06683078 192> unit-size <integer_cst 0x7fcf06683048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main> chain <var_decl 0x7fcf06f0dcf0 mangled>>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                                                 ^
_34 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                                           ^
_35 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                                              ^
_37 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                                          ^
_39 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
   83 |                                         for (k = 0; operators[k][0] != NULL; k++)
      |                                                                 ^
_40 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
   98 |           if (operators[k][0] == NULL)
      |                           ^
_41 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                                       ^
_102 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
_102

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                                                 ^
_103 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
_103

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                                    ^
_105 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
_105

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                                                ^
_106 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
_106

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
  228 |                   for (k = 0; special[k][0] != NULL; k++)
      |                                         ^
_107 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
_107

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
  240 |                   if (special[k][0] != NULL)
      |                                 ^
_108 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
_108

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:s========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;46m =======add node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
demangle_template_value_parm (&mangled, &s);
demangle_template_value_parm (&mangled, &s);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:344:9: warning: use location
  344 |         demangle_template_value_parm(&mangled, &s);
      |         ^
this stmt call this function :demangle_template_value_parm
trace fucntion name:demangle_template_value_parm 
[40;44m =======trace_function_path demangle_template_value_parm  function_call count: 6 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:demangle_template_value_parm========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
_3 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
MEM[(char *)p_10 + 3B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
  330 |                 *mangled += symbol_len;
      |                          ^
_4 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5 = _4 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D) = _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:string_append========= [0m
[40;46m =======add node_fun stack:string_append========= [0m
[40;44m =======trace_function_path string_append  function_call count: 1 level :1========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:cplus_demangle========= [0m
cplus_demangle this fucntion return value is heap-object 
demangle_template_value_parm this fucntion return value is heap-object cplus_demangle
[40;46m =======add node_fun stack:cplus_demangle========= [0m
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :1========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :2========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                                                 ^
_34 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                                           ^
_35 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                                              ^
_37 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                                          ^
_39 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
   83 |                                         for (k = 0; operators[k][0] != NULL; k++)
      |                                                                 ^
_40 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
   98 |           if (operators[k][0] == NULL)
      |                           ^
_41 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                                       ^
_102 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
_102

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                                                 ^
_103 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
_103

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                                    ^
_105 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
_105

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                                                ^
_106 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
_106

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
  228 |                   for (k = 0; special[k][0] != NULL; k++)
      |                                         ^
_107 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
_107

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
  240 |                   if (special[k][0] != NULL)
      |                                 ^
_108 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
_108

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;46m =======add node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_8 = VDEF <.MEM_7>
demangle_template_value_parm (&mangled, &s);
demangle_template_value_parm (&mangled, &s);
In function ‘main’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:344:9: warning: use location
  344 |         demangle_template_value_parm(&mangled, &s);
      |         ^
this stmt call this function :demangle_template_value_parm
trace fucntion name:demangle_template_value_parm 
[40;44m =======trace_function_path demangle_template_value_parm  function_call count: 6 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:demangle_template_value_parm========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
_3 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
MEM[(char *)p_10 + 3B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
  330 |                 *mangled += symbol_len;
      |                          ^
_4 = *mangled_11(D);
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5 = _4 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D) = _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:330:26: warning: use location
*mangled_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:string_append========= [0m
[40;46m =======add node_fun stack:string_append========= [0m
[40;44m =======trace_function_path string_append  function_call count: 1 level :1========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:cplus_demangle========= [0m
cplus_demangle this fucntion return value is heap-object 
demangle_template_value_parm this fucntion return value is heap-object cplus_demangle
[40;46m =======add node_fun stack:cplus_demangle========= [0m
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :1========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :2========  [0m
 <var_decl 0x7fcf06f0dcf0 mangled
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    addressable unsigned DI ./benchmarks/binutils/leak_9/binutils_leak_9.c:340:14 size <integer_cst 0x7fcf06665bb8 64> unit-size <integer_cst 0x7fcf06665bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fcf0617ef00 main>>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                                                 ^
_34 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:49: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                                           ^
_35 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:43: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                                              ^
_37 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:46: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                                          ^
_39 = operators[k_152][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:42: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
   83 |                                         for (k = 0; operators[k][0] != NULL; k++)
      |                                                                 ^
_40 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:83:65: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
   98 |           if (operators[k][0] == NULL)
      |                           ^
_41 = operators[k_152][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:98:27: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                                       ^
_102 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:55: warning: use location
_102

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                                                 ^
_103 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:49: warning: use location
_103

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                                    ^
_105 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:52: warning: use location
_105

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                                                ^
_106 = special[k_155][1];
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:48: warning: use location
_106

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
  228 |                   for (k = 0; special[k][0] != NULL; k++)
      |                                         ^
_107 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:228:41: warning: use location
_107

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
  240 |                   if (special[k][0] != NULL)
      |                                 ^
_108 = special[k_155][0];
./benchmarks/binutils/leak_9/binutils_leak_9.c:240:33: warning: use location
_108

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;46m =======add node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:demangle_template_value_parm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path demangle_template_value_parm  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:string_append========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path string_append  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:string_append========= [0m
[40;42m =======start_check_funciton:string_append========= [0m
[40;33m =======POP node_fun stack:string_append========= [0m
[40;42m =======pre add _ fucntion:cplus_demangle========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cplus_demangle  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ada_demangle  function_call count: 6 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:ada_demangle========= [0m
[40;42m =======start_check_funciton:ada_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf06861f80
    type <array_type 0x7fcf06186498
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174888 constant 48>
        unit-size <integer_cst 0x7fcf06174870 constant 6>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf0617d888 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf061747b0 5>>
        pointer_to_this <pointer_type 0x7fcf06186540>>
    readonly constant static "_ada_\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch --------
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch --------
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch --------
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_239 = VDEF <.MEM_223>
demangled_216 = malloc (_129);
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_241 = VDEF <.MEM_239>
strcpy (demangled_216, mangled_131);
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf061ab4e0
    type <array_type 0x7fcf061881f8
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174918 constant 40>
        unit-size <integer_cst 0x7fcf061747b0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf06188150 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf06665e10 4>>
        pointer_to_this <pointer_type 0x7fcf061882a0>>
    readonly constant static "<%s>\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ada_demangle========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:cplus_demangle========= [0m
[40;42m =======start_check_funciton:cplus_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:12: warning: use location
  299 |         if (__RANDBOOL)
      |            ^
# .MEM_17 = VDEF <.MEM_16(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘demangle_template_value_parm’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
if (_4 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:12: warning: use location
  302 |         if (__RANDBOOL)
      |            ^
# .MEM_18 = VDEF <.MEM_17>
_3 = rand ();
_3 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘demangle_template_value_parm’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================== pre trace ptable ================== 
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_224>
return _156;
lto1: warning: use location
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
is Other function ada_demangle
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘demangle_template_value_parm’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:cplus_demangle========= [0m
[40;42m =======pre add _ fucntion:strncpy========= [0m
[40;33m =======POP node_fun stack:strncpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:demangle_template_value_parm========= [0m
[40;42m =======start_check_funciton:demangle_template_value_parm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:13: warning: use location
  313 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:12: warning: use location
  313 |         if (__RANDBOOL)
      |            ^
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:313:13: warning: use location
  313 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d900
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
# .MEM_20 = VDEF <.MEM_19>
p_10 = malloc (4);
p_10 = malloc (4);
./benchmarks/binutils/leak_9/binutils_leak_9.c:315:35: warning: use location
  315 |                         char *p = XNEWVEC (char, symbol_len + 1), *q;
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
# .MEM_21 = VDEF <.MEM_20>
strncpy (p_10, _3, 3);
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 
p_10 = malloc (4);
./benchmarks/binutils/leak_9/binutils_leak_9.c:315:35: warning: use location
  315 |                         char *p = XNEWVEC (char, symbol_len + 1), *q;
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666da68
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a2d0 p>
    def_stmt p_10 = malloc (4);
    version:10
    ptr-info 0x7fcf06193900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
strncpy (p_10, _3, 3);
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:0 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666d990
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _3 = *mangled_11(D);
    version:3
    ptr-info 0x7fcf061938b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>

 ================== pre trace ptable ================== 
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_15>
return _5;
lto1: warning: use location
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :889========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
is Other function cplus_demangle
 
 Start check Pointer Collect  

======================================================================
free (p_10);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
  327 |                                 free(p);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:327:33: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_23 = VDEF <.MEM_22>
q_15 = cplus_demangle (p_10);
q_15 = cplus_demangle (p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:319:29: warning: use location
  319 |                         q = cplus_demangle (p);
      |                             ^
this stmt call this function :cplus_demangle
trace fucntion name:cplus_demangle 
[40;44m =======trace_function_path cplus_demangle  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:cplus_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
ada_demangle this fucntion return value is heap-object 
cplus_demangle this fucntion return value is heap-object ada_demangle
[40;46m =======add node_fun stack:ada_demangle========= [0m
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :1========  [0m
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (q_15);
In function ‘demangle_template_value_parm’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (q_15 != 0B)
./benchmarks/binutils/leak_9/binutils_leak_9.c:320:28: warning: use location
  320 |                         if (q)
      |                            ^
MEM[(char *)p_10 + 3B] = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:317:40: warning: use location
  317 |                         p [symbol_len] = '\0';
      |                                        ^
strncpy (p_10, _3, 3);
./benchmarks/binutils/leak_9/binutils_leak_9.c:316:25: warning: use location
  316 |                         strncpy (p, *mangled, symbol_len);
      |                         ^
this stmt call this function :strncpy
trace fucntion name:strncpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666daf8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a240 q>
    def_stmt q_15 = cplus_demangle (p_10);
    version:15
    ptr-info 0x7fcf06193930>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: use location
  323 |                                         free (q);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:323:41: warning: free in this location
  323 |                                         free (q);
      |                                         ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
this stmt call this function :string_append
trace fucntion name:string_append 
[40;44m =======trace_function_path string_append  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>
[40;36m ======= node_fun:string_append========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :string_append
# .MEM_24 = VDEF <.MEM_23>
string_append (s_16(D), p_10);
./benchmarks/binutils/leak_9/binutils_leak_9.c:326:33: warning: use location
  326 |                                 string_append (s, p);
      |                                 ^
# .MEM_26 = VDEF <.MEM_23>
string_append (s_16(D), q_15);
./benchmarks/binutils/leak_9/binutils_leak_9.c:322:41: warning: use location
  322 |                                         string_append (s, q);
      |                                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666db40
    type <pointer_type 0x7fcf06184d20
        type <record_type 0x7fcf06184c78 string BLK
            size <integer_cst 0x7fcf06683078 constant 192>
            unit-size <integer_cst 0x7fcf06683048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf06184bd0 fields <field_decl 0x7fcf06180260 b> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>
            pointer_to_this <pointer_type 0x7fcf06184d20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcf0618d180 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcf06193948>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:demangle_template_value_parm========= [0m
[40;44m =======node_fun:cplus_demangle========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cplus_demangle  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:ada_demangle========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ada_demangle  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:ada_demangle========= [0m
[40;42m =======start_check_funciton:ada_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
In function ‘cplus_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf06861f80
    type <array_type 0x7fcf06186498
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174888 constant 48>
        unit-size <integer_cst 0x7fcf06174870 constant 6>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf0617d888 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf061747b0 5>>
        pointer_to_this <pointer_type 0x7fcf06186540>>
    readonly constant static "_ada_\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch --------
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch --------
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch --------
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_239 = VDEF <.MEM_223>
demangled_216 = malloc (_129);
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_241 = VDEF <.MEM_239>
strcpy (demangled_216, mangled_131);
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf061ab4e0
    type <array_type 0x7fcf061881f8
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174918 constant 40>
        unit-size <integer_cst 0x7fcf061747b0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf06188150 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf06665e10 4>>
        pointer_to_this <pointer_type 0x7fcf061882a0>>
    readonly constant static "<%s>\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ada_demangle========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:cplus_demangle========= [0m
[40;42m =======start_check_funciton:cplus_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:12: warning: use location
  299 |         if (__RANDBOOL)
      |            ^
# .MEM_17 = VDEF <.MEM_16(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:299:13: warning: use location
  299 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666dee8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘cplus_demangle’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup
# .MEM_20 = VDEF <.MEM_17>
_14 = strdup (mangled_10(D));
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c120
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _14 = strdup (mangled_10(D));
    version:14
    ptr-info 0x7fcf061939a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
if (_4 == 1)
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:12: warning: use location
  302 |         if (__RANDBOOL)
      |            ^
# .MEM_18 = VDEF <.MEM_17>
_3 = rand ();
_3 = rand ();
./benchmarks/binutils/leak_9/binutils_leak_9.c:302:13: warning: use location
  302 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0666df78
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with mangled ========= [0m
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:mangled========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
mangled_169

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                          ^
p_184 = p_133 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:58: warning: use location
p_184

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
p_176

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
p_187

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
  145 |           p++;
      |            ^
p_190 = p_135 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:145:12: warning: use location
p_190

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
p_191

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
  170 |           p += 2;
      |             ^
p_192 = p_137 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:170:13: warning: use location
p_192

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
p_199

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
p_208

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
  210 |                       p++;
      |                        ^
p_209 = p_139 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:210:24: warning: use location
p_209

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
p_210

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
  254 |               p += 2;
      |                 ^
p_197 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:254:17: warning: use location
p_197

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
p_198

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
  269 |           p += 2;
      |             ^
p_211 = p_142 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:269:13: warning: use location
p_211

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
p_212

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:mangled========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘cplus_demangle’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d280 mangled>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7fcf06193978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================== pre trace ptable ================== 
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_224>
return _156;
lto1: warning: use location
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
is Other function ada_demangle
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_18>
_12 = ada_demangle (mangled_10(D));
_12 = ada_demangle (mangled_10(D));
In function ‘cplus_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:303:24: warning: use location
  303 |                 return ada_demangle (mangled);
      |                        ^
this stmt call this function :ada_demangle
trace fucntion name:ada_demangle 
[40;44m =======trace_function_path ada_demangle  function_call count: 6 level :0========  [0m
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>
[40;36m ======= node_fun:ada_demangle========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
d_185

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
d_178

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
*d_145

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
   93 |                   *d++ = '"';
      |                     ^
d_182 = d_181 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:21: warning: use location
d_182

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
*d_181

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
d_188

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
*d_148

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
  172 |           d += strlen (name);
      |             ^
d_194 = d_148 + _77;
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:13: warning: use location
d_194

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
d_196

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
  236 |                           d += slen;
      |                             ^
d_205 = d_149 + slen_203;
./benchmarks/binutils/leak_9/binutils_leak_9.c:236:29: warning: use location
d_205

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
d_206

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
*d_149

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
*d_151

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;46m =======add node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;46m =======add node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = PHI <_14(3), 0B(4), _12(5)>
In function ‘cplus_demangle’:
lto1: warning: use location
this stmt have mutiple branch ---ada_demangle-----
_14 = strdup (mangled_10(D));
./benchmarks/binutils/leak_9/binutils_leak_9.c:300:24: warning: use location
  300 |                 return xstrdup (mangled);
      |                        ^
this stmt call this function :strdup

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c0d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
   
    def_stmt _12 = ada_demangle (mangled_10(D));
    version:12
    ptr-info 0x7fcf06193990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:cplus_demangle========= [0m
[40;44m =======node_fun:ada_demangle========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ada_demangle  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:ada_demangle========= [0m
[40;42m =======start_check_funciton:ada_demangle========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
In function ‘ada_demangle’:
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7000
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt GIMPLE_NOP
    version:168
    ptr-info 0x7fcf06193d68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf06861f80
    type <array_type 0x7fcf06186498
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174888 constant 48>
        unit-size <integer_cst 0x7fcf06174870 constant 6>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf0617d888 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf061747b0 5>>
        pointer_to_this <pointer_type 0x7fcf06186540>>
    readonly constant static "_ada_\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:12: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |            ^
mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_227(D)>
_1 = strncmp (mangled_168(D), "_ada_", 5);
./benchmarks/binutils/leak_9/binutils_leak_9.c:44:13: warning: use location
   44 |         if (strncmp (mangled, "_ada_", 5) == 0)
      |             ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^
mangled_169 = mangled_168(D) + 5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:45:25: warning: use location
   45 |                 mangled += 5;
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c3f0
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _1 = strncmp (mangled_168(D), "_ada_", 5);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6870
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <parm_decl 0x7fcf0618d480 mangled>
    def_stmt mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
    version:131
    ptr-info 0x7fcf06193b28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c510
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _5 = strlen (mangled_131);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a70d8
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_172 = malloc (_8);
    version:172
    ptr-info 0x7fcf06193d98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ccf0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _34 = operators[k_152][0];
    version:34
    ptr-info 0x7fcf061939c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_174 = strlen (_34);
slen_174 = strlen (_34);
./benchmarks/binutils/leak_9/binutils_leak_9.c:85:29: warning: use location
   85 |               size_t slen = strlen (operators[k][0]);
      |                             ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7168
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_174 = strlen (_34);
    version:174>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a68b8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_132 = PHI <mangled_131(6), p_76(7)>
    version:132
    ptr-info 0x7fcf06193b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd38
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _35 = operators[k_152][0];
    version:35
    ptr-info 0x7fcf061939d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cd80
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _36 = strncmp (p_132, _35, slen_174);
    version:36>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619cdc8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _37 = operators[k_152][1];
    version:37
    ptr-info 0x7fcf061939f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_225>
slen_177 = strlen (_37);
slen_177 = strlen (_37);
./benchmarks/binutils/leak_9/binutils_leak_9.c:89:26: warning: use location
   89 |                   slen = strlen (operators[k][1]);
      |                          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7240
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619abd0 slen>
    def_stmt slen_177 = strlen (_37);
    version:177>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7288
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_178 = d_145 + 1;
    version:178
    ptr-info 0x7fcf06193de0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619ce58
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _39 = operators[k_152][1];
    version:39
    ptr-info 0x7fcf06193a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d38
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_148 = PHI <d_185(11), d_185(12), d_147(18)>
    version:148
    ptr-info 0x7fcf06193cc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ea0
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619ac60 name>
    def_stmt name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
    version:153
    ptr-info 0x7fcf06193d20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_234>
_77 = strlen (name_153);
_77 = strlen (name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:172:16: warning: use location
  172 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5900
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _77 = strlen (name_153);
    version:77>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcpy
# .MEM_235 = VDEF <.MEM_219>
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
# .MEM_234 = VDEF <.MEM_219>
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6ee8
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619acf0 name>
    def_stmt name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
    version:154
    ptr-info 0x7fcf06193d38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_235>
_81 = strlen (name_154);
_81 = strlen (name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:16: warning: use location
  190 |           d += strlen (name);
      |                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a5a20
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _81 = strlen (name_154);
    version:81>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6048
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _102 = special[k_155][0];
    version:102
    ptr-info 0x7fcf06193a98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
slen_200 = strlen (_102);
slen_200 = strlen (_102);
./benchmarks/binutils/leak_9/binutils_leak_9.c:230:37: warning: use location
  230 |                       size_t slen = strlen (special[k][0]);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a76c0
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_200 = strlen (_102);
    version:200>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch --------
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch --------
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch --------
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7678
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
    var <var_decl 0x7fcf0619aa20 p>
    def_stmt p_199 = p_138 + 2;
    version:199
    ptr-info 0x7fcf06193f30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6090
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _103 = special[k_155][0];
    version:103
    ptr-info 0x7fcf06193ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_99 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 == 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:39: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = (unsigned int) _87;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _88 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_104 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:26: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strncmp
# VUSE <.MEM_220>
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
# VUSE <.MEM_225>
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a60d8
    type <integer_type 0x7fcf0667a5e8 int public SI
        size <integer_cst 0x7fcf06665df8 constant 32>
        unit-size <integer_cst 0x7fcf06665e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a5e8 precision:32 min <integer_cst 0x7fcf06665db0 -2147483648> max <integer_cst 0x7fcf06665dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcf066819d8>>
   
    def_stmt _104 = strncmp (p_199, _103, slen_200);
    version:104>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6120
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _105 = special[k_155][1];
    version:105
    ptr-info 0x7fcf06193ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_220>
slen_203 = strlen (_105);
slen_203 = strlen (_105);
./benchmarks/binutils/leak_9/binutils_leak_9.c:234:34: warning: use location
  234 |                           slen = strlen (special[k][1]);
      |                                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7798
    type <integer_type 0x7fcf06184540 size_t unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615> context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619ae10 slen>
    def_stmt slen_203 = strlen (_105);
    version:203>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch --------
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch --------
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6d80
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a990 d>
    def_stmt d_149 = PHI <d_194(49), d_148(50)>
    version:149
    ptr-info 0x7fcf06193cd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_236 = VDEF <.MEM_220>
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
# .MEM_230 = VDEF <.MEM_229>
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6168
    type <pointer_type 0x7fcf0617dd20
        type <integer_type 0x7fcf0617dc78 char readonly public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617dd20>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcf061840a8>>
   
    def_stmt _106 = special[k_155][1];
    version:106
    ptr-info 0x7fcf06193ae0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len0_214 = (int) _127;
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:8: warning: use location
  285 |   len0 = strlen (mangled);
      |        ^
_128 = len0_214 + 3;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
_129 = (long unsigned int) _128;
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlen
# VUSE <.MEM_223>
_127 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:285:10: warning: use location
  285 |   len0 = strlen (mangled);
      |          ^
# VUSE <.MEM_227(D)>
_5 = strlen (mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:16: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                ^
_6 = (unsigned int) _5;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |                                     ^
_7 = _6 + 8;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:37: warning: use location
len0_170 = (int) _7;
./benchmarks/binutils/leak_9/binutils_leak_9.c:52:14: warning: use location
   52 |         len0 = strlen (mangled) + 7 + 1;
      |              ^
_130 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:14: warning: use location
  288 |   if (mangled[0] == '<')
      |              ^
if (_130 == 60)
./benchmarks/binutils/leak_9/binutils_leak_9.c:288:6: warning: use location
  288 |   if (mangled[0] == '<')
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_132 = PHI <mangled_131(6), p_76(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <p_132(8), p_173(9)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *p_133;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:56: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strncmp (p_132, _35, slen_174);
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:19: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                   ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_36 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:86:18: warning: use location
   86 |               if (strncmp (p, operators[k][0], slen) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_176 = p_132 + slen_174;
./benchmarks/binutils/leak_9/binutils_leak_9.c:88:21: warning: use location
   88 |                   p += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_134 = PHI <p_176(15), p_132(17)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_135 = PHI <p_184(11), p_184(12), p_134(18)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_137 = PHI <p_135(37), p_136(40)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_138 = PHI <p_192(49), p_137(50)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_142 = PHI <p_138(55), p_208(62), p_140(65)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
p_144 = PHI <p_142(83), p_142(84), p_143(87)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_126 = *p_144;
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:11: warning: use location
  273 |       if (*p == 0)
      |           ^
if (_126 == 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:273:10: warning: use location
  273 |       if (*p == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_143 = PHI <p_211(85), p_212(86)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *p_143;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location
  270 |           while (ISDIGIT (*p))
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = (unsigned int) _123;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = _124 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_125 <= 9)
./benchmarks/binutils/leak_9/binutils_leak_9.c:270:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_212 = p_143 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:271:14: warning: use location
  271 |             p++;
      |              ^
_120 = MEM[(const char *)p_142 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |                          ^
_121 = (unsigned int) _120;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:26: warning: use location
_119 = *p_142;
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:12: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |            ^
if (_119 == 46)
./benchmarks/binutils/leak_9/binutils_leak_9.c:266:10: warning: use location
  266 |       if (p[0] == '.' && ISDIGIT (p[1]))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_141 = PHI <p_197(76), p_198(77)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----
_118 = MEM[(const char *)p_141 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:35: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                                   ^
_117 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:20: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                    ^
if (_117 == 115)
./benchmarks/binutils/leak_9/binutils_leak_9.c:257:18: warning: use location
  257 |               if (p[0] == 's' && p[1] == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = *p_141;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location
  255 |               while (ISDIGIT (*p))
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (unsigned int) _114;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:255:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_198 = p_141 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:256:18: warning: use location
  256 |                 p++;
      |                  ^
_111 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^
_112 = _111 == 69;
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:32: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                                ^
if (_113 != 0)
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:19: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                   ^
_109 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:251:21: warning: use location
  251 |           else if (p[1] == 'B' || p[1] == 'E')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = MEM[(const char *)p_138 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:40: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_101 != 95)
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:36: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_100 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:215:25: warning: use location
  215 |               else if (p[0] == '_' && p[1] != '_')
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = MEM[(const char *)p_138 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location
  202 |               if (ISDIGIT (*p))
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = (unsigned int) _84;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = _85 + 4294967248;
./benchmarks/binutils/leak_9/binutils_leak_9.c:202:19: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_199 = p_138 + 2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:200:17: warning: use location
  200 |               p += 2;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_139 = PHI <p_199(57), p_80(58)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_140 = PHI <p_209(63), p_210(64)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:42: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *p_140;
./benchmarks/binutils/leak_9/binutils_leak_9.c:211:31: warning: use location
  211 |                       while (p[0] == 'n' || p[0] == 'b')
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_210 = p_140 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:212:26: warning: use location
  212 |                         p++;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_208 = p_139 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:206:22: warning: use location
  206 |                     p++;
      |                      ^
_94 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:23: warning: use location
  208 |                   if (*p == 'X')
      |                       ^
if (_94 == 88)
./benchmarks/binutils/leak_9/binutils_leak_9.c:208:22: warning: use location
  208 |                   if (*p == 'X')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = MEM[(const char *)p_208 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (unsigned int) _91;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:58: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = *p_208;
./benchmarks/binutils/leak_9/binutils_leak_9.c:207:44: warning: use location
  207 |                   while (ISDIGIT (*p) || (p[0] == '_' && ISDIGIT (p[1])));
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = PHI <p_208(59), p_208(61)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = strncmp (p_199, _103, slen_200);
./benchmarks/binutils/leak_9/binutils_leak_9.c:231:27: warning: use location
  231 |                       if (strncmp (p, special[k][0], slen) == 0)
      |                           ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_76 = PHI <p_187(27), p_199(74)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = MEM[(const char *)p_138 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:197:16: warning: use location
  197 |           if (p[1] == '_')
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = *p_138;
./benchmarks/binutils/leak_9/binutils_leak_9.c:194:12: warning: use location
  194 |       if (p[0] == '_')
      |            ^
_79 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:178:20: warning: use location
  178 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:17: warning: use location
  174 |       else if (p[0] == 'D')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 == 68)
./benchmarks/binutils/leak_9/binutils_leak_9.c:174:15: warning: use location
  174 |       else if (p[0] == 'D')
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:153:20: warning: use location
  153 |           switch (p[1])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _72 == 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:52: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = MEM[(const char *)p_137 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:41: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = MEM[(const char *)p_137 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:27: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *p_137;
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:12: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 83)
./benchmarks/binutils/leak_9/binutils_leak_9.c:149:10: warning: use location
  149 |       if (p[0] == 'S' && p[1] != 0 && (p[2] == '_' || p[2] == 0))
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_136 = PHI <p_190(38), p_191(39)>
lto1: warning: use location
this stmt have mutiple branch ---strncmp-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_65 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = _65 == 98;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = _64 | _66;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = *p_136;
./benchmarks/binutils/leak_9/binutils_leak_9.c:146:19: warning: use location
  146 |           while (p[0] == 'n' || p[0] == 'b')
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_191 = p_136 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:147:14: warning: use location
  147 |             p++;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:142:12: warning: use location
  142 |       if (p[0] == 'X')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:40: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58 == 83;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:22: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:137:12: warning: use location
  137 |       if ((*p == 'N' || *p == 'S') && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:44: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = _52 == 78;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = _51 | _53;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:132:13: warning: use location
  132 |       if ((p[0] == 'P' || p[0] == 'N') && p[1] == 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:27: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:12: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 69)
./benchmarks/binutils/leak_9/binutils_leak_9.c:127:10: warning: use location
  127 |       if (p[0] == 'E' && p[1] == 0)
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_187 = p_135 + 4;
./benchmarks/binutils/leak_9/binutils_leak_9.c:120:17: warning: use location
  120 |               p += 4;
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:36: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:117:21: warning: use location
  117 |           else if (p[2] == '_' && p[3] == '_')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(const char *)p_135 + 3B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:31: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(const char *)p_135 + 2B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:16: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 == 66)
./benchmarks/binutils/leak_9/binutils_leak_9.c:112:14: warning: use location
  112 |           if (p[2] == 'B' && p[3] == 0)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(const char *)p_135 + 1B];
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:27: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_43 == 75)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:23: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *p_135;
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:12: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 84)
./benchmarks/binutils/leak_9/binutils_leak_9.c:109:10: warning: use location
  109 |       if (p[0] == 'T' && p[1] == 'K')
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:35: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 79)
./benchmarks/binutils/leak_9/binutils_leak_9.c:70:33: warning: use location
   70 |                         else if (p[0] == 'O')
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *p_132;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:30: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = (unsigned char) _9;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = _10 + 159;
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_11 > 25)
./benchmarks/binutils/leak_9/binutils_leak_9.c:61:28: warning: use location
   61 |                         if (!ISLOWER (*p))
      |                            ^
_2 = *mangled_131;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:14: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |              ^
_3 = (unsigned char) _2;
./benchmarks/binutils/leak_9/binutils_leak_9.c:48:13: warning: use location
   48 |         if (!ISLOWER (mangled[0]))
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a6750
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _127 = strlen (mangled_131);
    version:127>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_239 = VDEF <.MEM_223>
demangled_216 = malloc (_129);
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
sprintf (demangled_216, "<%s>", mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:291:5: warning: use location
  291 |     sprintf (demangled, "<%s>", mangled);
      |     ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_241 = VDEF <.MEM_239>
strcpy (demangled_216, mangled_131);
strcpy (demangled_216, mangled_131);
./benchmarks/binutils/leak_9/binutils_leak_9.c:289:6: warning: use location
  289 |      strcpy (demangled, mangled);
      |      ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
demangled_216 = malloc (_129);
./benchmarks/binutils/leak_9/binutils_leak_9.c:286:15: warning: use location
  286 |   demangled = XNEWVEC (char, len0 + 3); /* memory leak */
      |               ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf061a7a20
    type <pointer_type 0x7fcf0617de70
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcf06670168 ./benchmarks/binutils/leak_9/binutils_leak_9.c>>
    var <var_decl 0x7fcf0619a900 demangled>
    def_stmt demangled_216 = malloc (_129);
    version:216
    ptr-info 0x7fcf06174978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fcf061ab4e0
    type <array_type 0x7fcf061881f8
        type <integer_type 0x7fcf0617dbd0 char public QI
            size <integer_cst 0x7fcf06665ca8 constant 8>
            unit-size <integer_cst 0x7fcf06665cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a3f0 precision:8 min <integer_cst 0x7fcf06174720 -128> max <integer_cst 0x7fcf06174708 127>
            pointer_to_this <pointer_type 0x7fcf0617de70>>
        BLK
        size <integer_cst 0x7fcf06174918 constant 40>
        unit-size <integer_cst 0x7fcf061747b0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fcf06188150 type <integer_type 0x7fcf0667a000 sizetype>
            DI
            size <integer_cst 0x7fcf06665bb8 constant 64>
            unit-size <integer_cst 0x7fcf06665bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665be8 0> max <integer_cst 0x7fcf06665e10 4>>
        pointer_to_this <pointer_type 0x7fcf061882a0>>
    readonly constant static "<%s>\000">

dot graph START

======================================================================
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_228 = VDEF <.MEM_227(D)>
demangled_172 = malloc (_8);
demangled_172 = malloc (_8);
./benchmarks/binutils/leak_9/binutils_leak_9.c:53:21: warning: use location
   53 |         demangled = XNEWVEC (char, len0); // allocation site
      |                     ^
this stmt call this function :malloc
_156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_145 = PHI <demangled_172(6), d_202(7)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_146 = PHI <d_145(8), d_38(9)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_146 = _13;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_185 = d_146 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:65:51: warning: use location
   65 |                                                 *d++ = *p++;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_148 = PHI <d_185(11), d_185(12), d_147(18)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
*d_151 = 0;
./benchmarks/binutils/leak_9/binutils_leak_9.c:281:6: warning: use location
  281 |   *d = 0;
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_149 = PHI <d_194(49), d_148(50)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_149 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:24: warning: use location
  247 |                   *d++ = '.';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_206 = d_149 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:247:21: warning: use location
  247 |                   *d++ = '.';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_202 = PHI <d_188(27), d_206(74)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
d_150 = PHI <d_205(69), d_149(71)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (d_149, _106, slen_203);
./benchmarks/binutils/leak_9/binutils_leak_9.c:235:27: warning: use location
  235 |                           memcpy (d, special[k][1], slen);
      |                           ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
d_196 = d_148 + _81;
./benchmarks/binutils/leak_9/binutils_leak_9.c:190:13: warning: use location
  190 |           d += strlen (name);
      |             ^
strcpy (d_148, name_154);
./benchmarks/binutils/leak_9/binutils_leak_9.c:189:11: warning: use location
  189 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strcpy (d_148, name_153);
./benchmarks/binutils/leak_9/binutils_leak_9.c:171:11: warning: use location
  171 |           strcpy (d, name);
      |           ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_148 = 46;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:20: warning: use location
  121 |               *d++ = '.';
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_188 = d_148 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:121:17: warning: use location
  121 |               *d++ = '.';
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_38 = PHI <d_185(10), d_185(12)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_147 = PHI <d_182(15), d_145(17)>
lto1: warning: use location
this stmt have mutiple branch ---strcpy-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_145 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:24: warning: use location
   90 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_178 = d_145 + 1;
./benchmarks/binutils/leak_9/binutils_leak_9.c:90:21: warning: use location
   90 |                   *d++ = '"';
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
d_181 = d_178 + slen_177;
./benchmarks/binutils/leak_9/binutils_leak_9.c:92:21: warning: use location
   92 |                   d += slen;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_181 = 34;
./benchmarks/binutils/leak_9/binutils_leak_9.c:93:24: warning: use location
   93 |                   *d++ = '"';
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (d_178, _39, slen_177);
./benchmarks/binutils/leak_9/binutils_leak_9.c:91:19: warning: use location
   91 |                   memcpy (d, operators[k][1], slen);
      |                   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcf0619c5e8
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _8 = (long unsigned int) len0_170;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcf061a67e0
    type <integer_type 0x7fcf0667a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcf06665bb8 constant 64>
        unit-size <integer_cst 0x7fcf06665bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcf0667a738 precision:64 min <integer_cst 0x7fcf06665e88 0> max <integer_cst 0x7fcf06666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcf066867e0>>
   
    def_stmt _129 = (long unsigned int) _128;
    version:129>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ada_demangle========= [0m
[40;44m =======node_fun:string_append========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path string_append  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:string_append========= [0m
[40;42m =======start_check_funciton:string_append========= [0m
[40;33m =======POP node_fun stack:string_append========= [0m
[40;44m =======node_fun:string_init========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path string_init  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:string_init========= [0m
[40;42m =======start_check_funciton:string_init========= [0m
[40;33m =======POP node_fun stack:string_init========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
mangled = "123456";
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
string_init (&s);
demangle_template_value_parm (&mangled, &s);
t ={v} {CLOBBER};
s ={v} {CLOBBER};
mangled ={v} {CLOBBER};
return 0;

=======Mapping node_fun:demangle_template_value_parm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = rand ();
_2 = _1 % 2;
if (_2 == 1)
  goto <bb 3>; [20.24%]
else
  goto <bb 6>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 217325344]:
p_10 = malloc (4);
_3 = *mangled_11(D);
strncpy (p_10, _3, 3);
MEM[(char *)p_10 + 3B] = 0;
q_15 = cplus_demangle (p_10);
if (q_15 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 152127741]:
string_append (s_16(D), q_15);
free (q_15);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 65197602]:
string_append (s_16(D), p_10);
free (p_10);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
_4 = *mangled_11(D);
_5 = _4 + 3;
*mangled_11(D) = _5;
return;

=======Mapping node_fun:cplus_demangle=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = rand ();
_2 = _1 % 2;
if (_2 == 1)
  goto <bb 3>; [20.97%]
else
  goto <bb 4>; [79.03%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 225163664]:
_14 = strdup (mangled_10(D));
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 848578159]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 5>; [24.24%]
else
  goto <bb 6>; [75.76%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 205695344]:
_12 = ada_demangle (mangled_10(D));

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _5 = PHI <_14(3), 0B(4), _12(5)>
return _5;

=======Mapping node_fun:ada_demangle=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 119800838]:
_1 = strncmp (mangled_168(D), "_ada_", 5);
if (_1 == 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 59900419]:
mangled_169 = mangled_168(D) + 5;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 119800838]:
# mangled_131 = PHI <mangled_168(D)(2), mangled_169(3)>
_2 = *mangled_131;
_3 = (unsigned char) _2;
_4 = _3 + 159;
if (_4 > 25)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 61242189]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 58558649]:
_5 = strlen (mangled_131);
_6 = (unsigned int) _5;
_7 = _6 + 8;
len0_170 = (int) _7;
_8 = (long unsigned int) len0_170;
demangled_172 = malloc (_8);
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 56304878]:
# p_76 = PHI <p_187(27), p_199(74)>
# d_202 = PHI <d_188(27), d_206(74)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 114863528]:
# p_132 = PHI <mangled_131(6), p_76(7)>
# d_145 = PHI <demangled_172(6), d_202(7)>
_9 = *p_132;
_10 = (unsigned char) _9;
_11 = _10 + 159;
if (_11 > 25)
  goto <bb 10>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1016310061]:
# p_173 = PHI <p_184(10), p_184(12)>
# d_38 = PHI <d_185(10), d_185(12)>

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# p_133 = PHI <p_132(8), p_173(9)>
# d_146 = PHI <d_145(8), d_38(9)>
p_184 = p_133 + 1;
d_185 = d_146 + 1;
_13 = *p_133;
*d_146 = _13;
_14 = *p_184;
_15 = (unsigned char) _14;
_16 = _15 + 159;
_17 = _16 <= 25;
_18 = *p_184;
_19 = (unsigned char) _18;
_20 = _19 + 208;
_21 = _20 <= 9;
_22 = _17 | _21;
if (_22 != 0)
  goto <bb 9>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 536870913]:
_23 = *p_184;
if (_23 == 95)
  goto <bb 12>; [94.50%]
else
  goto <bb 21>; [5.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 507343013]:
_24 = MEM[(const char *)p_184 + 1B];
_25 = (unsigned char) _24;
_26 = _25 + 159;
_27 = _26 <= 25;
_28 = MEM[(const char *)p_184 + 1B];
_29 = (unsigned char) _28;
_30 = _29 + 208;
_31 = _30 <= 9;
_32 = _27 | _31;
if (_32 != 0)
  goto <bb 9>; [94.50%]
else
  goto <bb 21>; [5.50%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 57431764]:
_33 = *p_132;
if (_33 == 79)
  goto <bb 17>; [98.00%]
else
  goto <bb 20>; [2.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 497196142]:
_34 = operators[k_152][0];
slen_174 = strlen (_34);
_35 = operators[k_152][0];
_36 = strncmp (p_132, _35, slen_174);
if (_36 == 0)
  goto <bb 15>; [5.50%]
else
  goto <bb 16>; [94.50%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 27345788]:
p_176 = p_132 + slen_174;
_37 = operators[k_152][1];
slen_177 = strlen (_37);
d_178 = d_145 + 1;
*d_145 = 34;
_39 = operators[k_152][1];
memcpy (d_178, _39, slen_177);
d_181 = d_178 + slen_177;
d_182 = d_181 + 1;
*d_181 = 34;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 469850355]:
k_175 = k_152 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 526133484]:
# k_152 = PHI <0(13), k_175(16)>
_40 = operators[k_152][0];
if (_40 != 0B)
  goto <bb 14>; [94.50%]
else
  goto <bb 18>; [5.50%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 56283129]:
# p_134 = PHI <p_176(15), p_132(17)>
# d_147 = PHI <d_182(15), d_145(17)>
_41 = operators[k_152][0];
if (_41 == 0B)
  goto <bb 19>; [2.00%]
else
  goto <bb 21>; [98.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 1125663]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 1148635]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 112589232]:
# p_135 = PHI <p_184(11), p_184(12), p_134(18)>
# d_148 = PHI <d_185(11), d_185(12), d_147(18)>
_42 = *p_135;
if (_42 == 84)
  goto <bb 22>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 38280339]:
_43 = MEM[(const char *)p_135 + 1B];
if (_43 == 75)
  goto <bb 23>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 13015315]:
_44 = MEM[(const char *)p_135 + 2B];
if (_44 == 66)
  goto <bb 24>; [34.00%]
else
  goto <bb 25>; [66.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 4425207]:
_45 = MEM[(const char *)p_135 + 3B];
if (_45 == 0)
  goto <bb 90>; [2.00%]
else
  goto <bb 25>; [98.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 12926811]:
_46 = MEM[(const char *)p_135 + 2B];
if (_46 == 95)
  goto <bb 26>; [98.00%]
else
  goto <bb 28>; [2.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 12668275]:
_47 = MEM[(const char *)p_135 + 3B];
if (_47 == 95)
  goto <bb 27>; [33.00%]
else
  goto <bb 28>; [67.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 4180531]:
p_187 = p_135 + 4;
d_188 = d_148 + 1;
*d_148 = 46;
// predicted unlikely by continue predictor.
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 28 
<bb 28> [local count: 8746281]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 99573917]:
_48 = *p_135;
if (_48 == 69)
  goto <bb 30>; [34.00%]
else
  goto <bb 32>; [66.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 33855132]:
_49 = MEM[(const char *)p_135 + 1B];
if (_49 == 0)
  goto <bb 31>; [2.00%]
else
  goto <bb 32>; [98.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 677103]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 98896814]:
_50 = *p_135;
_51 = _50 == 80;
_52 = *p_135;
_53 = _52 == 78;
_54 = _51 | _53;
if (_54 != 0)
  goto <bb 33>; [50.00%]
else
  goto <bb 34>; [50.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 49448407]:
_55 = MEM[(const char *)p_135 + 1B];
if (_55 == 0)
  goto <bb 90>; [2.00%]
else
  goto <bb 34>; [98.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 97907846]:
_56 = *p_135;
_57 = _56 == 78;
_58 = *p_135;
_59 = _58 == 83;
_60 = _57 | _59;
if (_60 != 0)
  goto <bb 35>; [50.00%]
else
  goto <bb 37>; [50.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 48953923]:
_61 = MEM[(const char *)p_135 + 1B];
if (_61 == 0)
  goto <bb 36>; [2.00%]
else
  goto <bb 37>; [98.00%]

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 979079]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 96928767]:
_62 = *p_135;
if (_62 == 88)
  goto <bb 38>; [16.00%]
else
  goto <bb 41>; [84.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 15508602]:
p_190 = p_135 + 1;
goto <bb 40>; [100.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 125478693]:
p_191 = p_136 + 1;

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 140987295]:
# p_136 = PHI <p_190(38), p_191(39)>
_63 = *p_136;
_64 = _63 == 110;
_65 = *p_136;
_66 = _65 == 98;
_67 = _64 | _66;
if (_67 != 0)
  goto <bb 39>; [89.00%]
else
  goto <bb 41>; [11.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 96928767]:
# p_137 = PHI <p_135(37), p_136(40)>
_68 = *p_137;
if (_68 == 83)
  goto <bb 42>; [34.00%]
else
  goto <bb 50>; [66.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 32955781]:
_69 = MEM[(const char *)p_137 + 1B];
if (_69 != 0)
  goto <bb 43>; [50.00%]
else
  goto <bb 50>; [50.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 16477891]:
_70 = MEM[(const char *)p_137 + 2B];
_71 = _70 == 95;
_72 = MEM[(const char *)p_137 + 2B];
_73 = _72 == 0;
_74 = _71 | _73;
if (_74 != 0)
  goto <bb 44>; [50.00%]
else
  goto <bb 50>; [50.00%]

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 8238945]:
_75 = MEM[(const char *)p_137 + 1B];
switch (_75) <default: <L3> [20.00%], case 73: <L1> [20.00%], case 79: <L2> [20.00%], case 82: <L4> [20.00%], case 87: <L0> [20.00%]>

=======is loop:1=========

 bb index 45 
<bb 45> [local count: 1647789]:
<L0>:
goto <bb 49>; [100.00%]

=======is loop:1=========

 bb index 46 
<bb 46> [local count: 1647789]:
<L1>:
goto <bb 49>; [100.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 1647789]:
<L2>:
goto <bb 49>; [100.00%]

=======is loop:0=========

 bb index 48 
<bb 48> [local count: 1647789]:
<L3>:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 49 
<bb 49> [local count: 6591156]:
# name_153 = PHI <"\'Read"(44), "\'Write"(45), "\'Input"(46), "\'Output"(47)>
<L4>:
p_192 = p_137 + 2;
strcpy (d_148, name_153);
_77 = strlen (name_153);
d_194 = d_148 + _77;
goto <bb 55>; [100.00%]

=======is loop:1=========

 bb index 50 
<bb 50> [local count: 88689822]:
_78 = *p_137;
if (_78 == 68)
  goto <bb 51>; [2.00%]
else
  goto <bb 55>; [98.00%]

=======is loop:0=========

 bb index 51 
<bb 51> [local count: 1773797]:
_79 = MEM[(const char *)p_137 + 1B];
switch (_79) <default: <L6> [33.33%], case 65: <L5> [33.33%], case 70: <L7> [33.33%]>

=======is loop:0=========

 bb index 52 
<bb 52> [local count: 591266]:
<L5>:
goto <bb 54>; [100.00%]

=======is loop:0=========

 bb index 53 
<bb 53> [local count: 591266]:
<L6>:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 54 
<bb 54> [local count: 1182531]:
# name_154 = PHI <".Finalize"(51), ".Adjust"(52)>
<L7>:
strcpy (d_148, name_154);
_81 = strlen (name_154);
d_196 = d_148 + _81;
goto <bb 90>; [100.00%]

=======is loop:1=========

 bb index 55 
<bb 55> [local count: 93507181]:
# p_138 = PHI <p_192(49), p_137(50)>
# d_149 = PHI <d_194(49), d_148(50)>
_82 = *p_138;
if (_82 == 95)
  goto <bb 56>; [98.00%]
else
  goto <bb 83>; [2.00%]

=======is loop:1=========

 bb index 56 
<bb 56> [local count: 91637037]:
_83 = MEM[(const char *)p_138 + 1B];
if (_83 == 95)
  goto <bb 57>; [98.00%]
else
  goto <bb 75>; [2.00%]

=======is loop:1=========

 bb index 57 
<bb 57> [local count: 89804296]:
p_199 = p_138 + 2;
_84 = MEM[(const char *)p_138 + 2B];
_85 = (unsigned int) _84;
_86 = _85 + 4294967248;
if (_86 <= 9)
  goto <bb 59>; [2.00%]
else
  goto <bb 66>; [98.00%]

=======is loop:1=========

 bb index 58 
<bb 58> [local count: 31783466]:
# p_80 = PHI <p_208(59), p_208(61)>

=======is loop:1=========

 bb index 59 
<bb 59> [local count: 33579552]:
# p_139 = PHI <p_199(57), p_80(58)>
p_208 = p_139 + 1;
_87 = *p_208;
_88 = (unsigned int) _87;
_89 = _88 + 4294967248;
if (_89 <= 9)
  goto <bb 58>; [50.00%]
else
  goto <bb 60>; [50.00%]

=======is loop:1=========

 bb index 60 
<bb 60> [local count: 16789776]:
_90 = *p_208;
if (_90 == 95)
  goto <bb 61>; [94.50%]
else
  goto <bb 62>; [5.50%]

=======is loop:1=========

 bb index 61 
<bb 61> [local count: 15866338]:
_91 = MEM[(const char *)p_208 + 1B];
_92 = (unsigned int) _91;
_93 = _92 + 4294967248;
if (_93 <= 9)
  goto <bb 58>; [94.50%]
else
  goto <bb 62>; [5.50%]

=======is loop:0=========

 bb index 62 
<bb 62> [local count: 1796086]:
_94 = *p_208;
if (_94 == 88)
  goto <bb 63>; [34.00%]
else
  goto <bb 83>; [66.00%]

=======is loop:0=========

 bb index 63 
<bb 63> [local count: 610669]:
p_209 = p_139 + 2;
goto <bb 65>; [100.00%]

=======is loop:1=========

 bb index 64 
<bb 64> [local count: 4940870]:
p_210 = p_140 + 1;

=======is loop:1=========

 bb index 65 
<bb 65> [local count: 5551539]:
# p_140 = PHI <p_209(63), p_210(64)>
_95 = *p_140;
_96 = _95 == 110;
_97 = *p_140;
_98 = _97 == 98;
_99 = _96 | _98;
if (_99 != 0)
  goto <bb 64>; [89.00%]
else
  goto <bb 83>; [11.00%]

=======is loop:1=========

 bb index 66 
<bb 66> [local count: 88008210]:
_100 = MEM[(const char *)p_138 + 2B];
if (_100 == 95)
  goto <bb 67>; [51.12%]
else
  goto <bb 74>; [48.88%]

=======is loop:1=========

 bb index 67 
<bb 67> [local count: 44989797]:
_101 = MEM[(const char *)p_138 + 3B];
if (_101 != 95)
  goto <bb 71>; [79.76%]
else
  goto <bb 74>; [20.24%]

=======is loop:1=========

 bb index 68 
<bb 68> [local count: 316992292]:
_102 = special[k_155][0];
slen_200 = strlen (_102);
_103 = special[k_155][0];
_104 = strncmp (p_199, _103, slen_200);
if (_104 == 0)
  goto <bb 69>; [5.50%]
else
  goto <bb 70>; [94.50%]

=======is loop:0=========

 bb index 69 
<bb 69> [local count: 17434576]:
_105 = special[k_155][1];
slen_203 = strlen (_105);
_106 = special[k_155][1];
memcpy (d_149, _106, slen_203);
d_205 = d_149 + slen_203;
goto <bb 72>; [100.00%]

=======is loop:1=========

 bb index 70 
<bb 70> [local count: 299557716]:
k_201 = k_155 + 1;

=======is loop:1=========

 bb index 71 
<bb 71> [local count: 335441579]:
# k_155 = PHI <0(67), k_201(70)>
_107 = special[k_155][0];
if (_107 != 0B)
  goto <bb 68>; [94.50%]
else
  goto <bb 72>; [5.50%]

=======is loop:0=========

 bb index 72 
<bb 72> [local count: 35883863]:
# d_150 = PHI <d_205(69), d_149(71)>
_108 = special[k_155][0];
if (_108 != 0B)
  goto <bb 90>; [81.91%]
else
  goto <bb 73>; [18.09%]

=======is loop:0=========

 bb index 73 
<bb 73> [local count: 6491391]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:1=========

 bb index 74 
<bb 74> [local count: 52124348]:
d_206 = d_149 + 1;
*d_149 = 46;
// predicted unlikely by continue predictor.
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 75 
<bb 75> [local count: 1832741]:
_109 = MEM[(const char *)p_138 + 1B];
_110 = _109 == 66;
_111 = MEM[(const char *)p_138 + 1B];
_112 = _111 == 69;
_113 = _110 | _112;
if (_113 != 0)
  goto <bb 76>; [66.00%]
else
  goto <bb 82>; [34.00%]

=======is loop:0=========

 bb index 76 
<bb 76> [local count: 1209609]:
p_197 = p_138 + 2;
goto <bb 78>; [100.00%]

=======is loop:1=========

 bb index 77 
<bb 77> [local count: 9786837]:
p_198 = p_141 + 1;

=======is loop:1=========

 bb index 78 
<bb 78> [local count: 10996446]:
# p_141 = PHI <p_197(76), p_198(77)>
_114 = *p_141;
_115 = (unsigned int) _114;
_116 = _115 + 4294967248;
if (_116 <= 9)
  goto <bb 77>; [89.00%]
else
  goto <bb 79>; [11.00%]

=======is loop:0=========

 bb index 79 
<bb 79> [local count: 1209609]:
_117 = *p_141;
if (_117 == 115)
  goto <bb 80>; [50.00%]
else
  goto <bb 81>; [50.00%]

=======is loop:0=========

 bb index 80 
<bb 80> [local count: 604805]:
_118 = MEM[(const char *)p_141 + 1B];
if (_118 == 0)
  goto <bb 90>; [66.00%]
else
  goto <bb 81>; [34.00%]

=======is loop:0=========

 bb index 81 
<bb 81> [local count: 810438]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 82 
<bb 82> [local count: 623132]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 83 
<bb 83> [local count: 3666230]:
# p_142 = PHI <p_138(55), p_208(62), p_140(65)>
_119 = *p_142;
if (_119 == 46)
  goto <bb 84>; [34.00%]
else
  goto <bb 88>; [66.00%]

=======is loop:0=========

 bb index 84 
<bb 84> [local count: 1246518]:
_120 = MEM[(const char *)p_142 + 1B];
_121 = (unsigned int) _120;
_122 = _121 + 4294967248;
if (_122 <= 9)
  goto <bb 85>; [50.00%]
else
  goto <bb 88>; [50.00%]

=======is loop:0=========

 bb index 85 
<bb 85> [local count: 623259]:
p_211 = p_142 + 2;
goto <bb 87>; [100.00%]

=======is loop:1=========

 bb index 86 
<bb 86> [local count: 5042733]:
p_212 = p_143 + 1;

=======is loop:1=========

 bb index 87 
<bb 87> [local count: 5665992]:
# p_143 = PHI <p_211(85), p_212(86)>
_123 = *p_143;
_124 = (unsigned int) _123;
_125 = _124 + 4294967248;
if (_125 <= 9)
  goto <bb 86>; [89.00%]
else
  goto <bb 88>; [11.00%]

=======is loop:0=========

 bb index 88 
<bb 88> [local count: 3666230]:
# p_144 = PHI <p_142(83), p_142(84), p_143(87)>
_126 = *p_144;
if (_126 == 0)
  goto <bb 90>; [66.00%]
else
  goto <bb 89>; [34.00%]

=======is loop:0=========

 bb index 89 
<bb 89> [local count: 1246518]:
// predicted unlikely by goto predictor.
goto <bb 91>; [100.00%]

=======is loop:0=========

 bb index 90 
<bb 90> [local count: 34471359]:
# d_151 = PHI <d_148(24), d_148(33), d_196(54), d_150(72), d_149(80), d_149(88)>
*d_151 = 0;
goto <bb 94>; [100.00%]

=======is loop:0=========

 bb index 91 
<bb 91> [local count: 85329483]:
unknown:
_127 = strlen (mangled_131);
len0_214 = (int) _127;
_128 = len0_214 + 3;
_129 = (long unsigned int) _128;
demangled_216 = malloc (_129);
_130 = *mangled_131;
if (_130 == 60)
  goto <bb 92>; [34.00%]
else
  goto <bb 93>; [66.00%]

=======is loop:0=========

 bb index 92 
<bb 92> [local count: 29012024]:
strcpy (demangled_216, mangled_131);
goto <bb 94>; [100.00%]

=======is loop:0=========

 bb index 93 
<bb 93> [local count: 56317458]:
sprintf (demangled_216, "<%s>", mangled_131);

=======is loop:0=========

 bb index 94 
<bb 94> [local count: 119800842]:
# _156 = PHI <demangled_172(90), demangled_216(92), demangled_216(93)>
return _156;

=======Mapping node_fun:string_append=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)s_3(D)];
printf ("%d\n", _1);
return;

=======Mapping node_fun:string_init=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
s_4(D)->e = 0B;
_1 = s_4(D)->e;
s_4(D)->p = _1;
_2 = s_4(D)->p;
s_4(D)->b = _2;
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 56 [0m
[40;34m    analyzable ptable point : 48 [0m
[40;34m    used_stmt array stack totalsize of : 0.046968 mb[0m
[40;34m    collect time: : 0.011992 s [0m
[40;34m    algorithm time: 0.594356 s [0m
[40;34m    gimple stmt count : : 293 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:47 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  2157k ( 73%)
 phase opt and generate             :   0.31 (100%)   0.32 (100%)   0.63 ( 98%)   719k ( 25%)
 callgraph functions expansion      :   0.02 (  6%)   0.02 (  6%)   0.03 (  5%)   509k ( 17%)
 ipa points-to                      :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)  8264  (  0%)
 tree CFG cleanup                   :   0.00 (  0%)   0.01 (  3%)   0.00 (  0%)  7104  (  0%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    49k (  2%)
 reload                             :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   144  (  0%)
 shorten branches                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 plugin execution                   :   0.28 ( 90%)   0.30 ( 94%)   0.61 ( 95%)  4976  (  0%)
 initialize rtl                     :   0.01 (  3%)   0.01 (  3%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.31          0.32          0.64         2935k
