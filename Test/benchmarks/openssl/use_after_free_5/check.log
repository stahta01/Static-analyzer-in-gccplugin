./benchmarks/openssl/double_free_5/openssl_df_5.c: In function â€˜_CONF_get_sectionâ€™:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:32: warning: passing argument 1 of â€˜lh_CONF_VALUE_retrieveâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
                                ^~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:113:13: note: expected â€˜OPENSSL_LHASH * {aka struct lhash_st *}â€™ but argument is of type â€˜struct lhash_st_CONF_VALUE * constâ€™
 CONF_VALUE *lh_CONF_VALUE_retrieve(OPENSSL_LHASH *lh, const void *data)
             ^~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function â€˜_CONF_new_dataâ€™:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         conf->data = lh_CONF_VALUE_new();
                    ^
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function â€˜CONF_load_bioâ€™:
./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5: warning: implicit declaration of function â€˜CONF_set_nconfâ€™; did you mean â€˜CONF_get_sectionâ€™? [-Wimplicit-function-declaration]
     CONF_set_nconf(&ctmp, conf);
     ^~~~~~~~~~~~~~
     CONF_get_section
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function â€˜CONF_loadâ€™:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: implicit declaration of function â€˜BIO_new_fileâ€™ [-Wimplicit-function-declaration]
     in = BIO_new_file(file, "r");
          ^~~~~~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     in = BIO_new_file(file, "r");
        ^
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: implicit declaration of function â€˜BIO_freeâ€™; did you mean â€˜freeâ€™? [-Wimplicit-function-declaration]
     BIO_free(in);
     ^~~~~~~~
     free
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function â€˜certify_spkacâ€™:
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:27: warning: passing argument 1 of â€˜CONF_get_sectionâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
     sk = CONF_get_section(parms, "default");
                           ^~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:158:23: note: expected â€˜const CONF * {aka const struct conf_st *}â€™ but argument is of type â€˜struct lhash_st_CONF_VALUE *â€™
 STACK_OF(CONF_VALUE) *CONF_get_section(const CONF *conf, const char *section)
                       ^~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: implicit declaration of function â€˜sk_CONF_VALUE_numâ€™; did you mean â€˜lh_CONF_VALUE_newâ€™? [-Wimplicit-function-declaration]
     if (sk_CONF_VALUE_num(sk) == 0) {
         ^~~~~~~~~~~~~~~~~
         lh_CONF_VALUE_new
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: implicit declaration of function â€˜CONF_freeâ€™; did you mean â€˜CONF_loadâ€™? [-Wimplicit-function-declaration]
         CONF_free(parms); /* freed */
         ^~~~~~~~~
         CONF_load
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: implicit declaration of function â€˜sk_CONF_VALUE_valueâ€™; did you mean â€˜lh_CONF_VALUE_newâ€™? [-Wimplicit-function-declaration]
         cv = sk_CONF_VALUE_value(sk, i);
              ^~~~~~~~~~~~~~~~~~~
              lh_CONF_VALUE_new
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
         cv = sk_CONF_VALUE_value(sk, i);
            ^
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: implicit declaration of function â€˜X509_NAME_add_entry_by_NIDâ€™ [-Wimplicit-function-declaration]
         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 3
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 10
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 13
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 19
succs:= 20
--------GIMPLE Cond -------
succs:= 21
succs:= 20
--------GIMPLE Cond -------
succs:= 21
succs:= 24
--------GIMPLE Cond -------
succs:= 25
succs:= 25
succs:= 15
--------GIMPLE Cond -------
succs:= 29
succs:= 29
succs:= 14
--------GIMPLE Cond -------
succs:= 32
succs:= 32
--------GIMPLE Cond -------
succs:= 34
--------GIMPLE Cond -------
succs:= 36
--------GIMPLE Cond -------
succs:= 36
succs:= 37
succs:= 37
--------GIMPLE Cond -------
succs:= 40
--------GIMPLE Cond -------
succs:= 41
succs:= 13
succs:= 34
succs:= 41
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_113 = VDEF <.MEM_6(D)>
_32 = BIO_new_file (_2, "r");
# .MEM_114 = VDEF <.MEM_113>
CONF_set_nconf (&ctmp, 0B);
# .MEM_115 = VDEF <.MEM_114>
ret_46 = malloc (24);
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
# .MEM_142 = VDEF <.MEM_110>
_10 = sk_CONF_VALUE_num (sk_9);
# .MEM_146 = VDEF <.MEM_142>
CONF_free (parms_8);
# .MEM_143 = VDEF <.MEM_111>
_11 = sk_CONF_VALUE_num (sk_9);
# .MEM_144 = VDEF <.MEM_143>
_13 = sk_CONF_VALUE_value (sk_9, i_12);
# .MEM_145 = VDEF <.MEM_144>
_30 = X509_NAME_add_entry_by_NID (0B, nid_28(D), _1, buf_29, -1, -1, 0);
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_value========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_value========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_num========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_num========= [0m
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;33m =======POP node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;33m =======POP node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;33m =======POP node_fun stack:BIO_new_file========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>
# .MEM_115 = VDEF <.MEM_114>
ret_46 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_48 = PHI <0B(4), ret_46(5)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_116 = _48;
lto1: warning: use location
_43 = _116;
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
         conf->data = lh_CONF_VALUE_new();
                      ^
ctmp.data = _43;
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
         conf->data = lh_CONF_VALUE_new();
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_114>
_42 = ctmp.data;
bb index := 3
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 43

======================================================================
_42 = ctmp.data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
     if (conf->data == NULL) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_42 == 0B)
bb index := 3
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 43

======================================================================
if (_42 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:8: warning: use location
     if (conf->data == NULL) {
        ^
if (_42 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:8: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_44 = ctmp.data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
         if (conf->data == NULL)
                 ^
_38 = ctmp.data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:214:20: warning: use location
         return ctmp.data;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = PHI <0B(10), _38(11)>
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
_39 = PHI <0B(10), _38(11)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _39;
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
_121 = _39;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
ltmp_35 = _121;
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
ltmp_35 = _121;
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:10: warning: use location
     ltmp = CONF_load_bio(conf, in, eline);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(2), ltmp_35(12)>
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(2), ltmp_35(12)>
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(2), ltmp_35(12)>
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(2), ltmp_35(12)>
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================
_36 = PHI <0B(2), ltmp_35(12)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_123 = _36;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_123 = _36;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_123 = _36;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_123 = _36;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================
_123 = _36;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
parms_8 = _123;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
parms_8 = _123;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
parms_8 = _123;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
parms_8 = _123;
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================
parms_8 = _123;
./benchmarks/openssl/double_free_5/openssl_df_5.c:251:11: warning: use location
     parms = CONF_load(NULL, infile, &errline);
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================
CONF_free (parms_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
     CONF_free(parms); /* double-free */
     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_142>
CONF_free (parms_8);
bb index := 33
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 43

======================================================================
CONF_free (parms_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
         CONF_free(parms); /* freed */
         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
_57 = MEM[(const struct CONF *)parms_8].data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:36: warning: use location
     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
                                    ^
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve = _67;
./benchmarks/openssl/double_free_5/openssl_df_5.c:127:25: warning: use location
         lh->num_retrieve++;
                         ^
_66 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve;
./benchmarks/openssl/double_free_5/openssl_df_5.c:127:11: warning: use location
         lh->num_retrieve++;
           ^
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss = _63;
./benchmarks/openssl/double_free_5/openssl_df_5.c:123:30: warning: use location
         lh->num_retrieve_miss++;
                              ^
_62 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss;
./benchmarks/openssl/double_free_5/openssl_df_5.c:123:11: warning: use location
         lh->num_retrieve_miss++;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls = _95;
./benchmarks/openssl/double_free_5/openssl_df_5.c:105:27: warning: use location
         lh->num_comp_calls++;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls;
./benchmarks/openssl/double_free_5/openssl_df_5.c:105:11: warning: use location
         lh->num_comp_calls++;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps = _90;
./benchmarks/openssl/double_free_5/openssl_df_5.c:100:27: warning: use location
         lh->num_hash_comps++;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps;
./benchmarks/openssl/double_free_5/openssl_df_5.c:100:11: warning: use location
         lh->num_hash_comps++;
           ^
_82 = MEM[(struct OPENSSL_LHASH *)_57].b;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:15: warning: use location
     ret = &(lh->b[(int)nn]);
               ^
ret_87 = _82 + _86;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:9: warning: use location
     ret = &(lh->b[(int)nn]);
         ^
n1_88 = *ret_87;
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:13: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_91 = PHI <n1_88(18), n1_99(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_99 = n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:36: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = n1_91->data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:18: warning: use location
         if (cf(n1->data, data) == 0)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = cf_81 (_96, &vv);
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:13: warning: use location
         if (cf(n1->data, data) == 0)
             ^

 ================== trace ================== 
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_97 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:12: warning: use location
         if (cf(n1->data, data) == 0)
            ^
if (_97 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:12: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = n1_91->hash;
./benchmarks/openssl/double_free_5/openssl_df_5.c:101:15: warning: use location
         if (n1->hash != hash) {
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_91 != 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:5: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
     ^
if (n1_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:5: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_98 = &n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:108:13: warning: use location
         ret = &(n1->next);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_102 = PHI <ret_93(20), ret_98(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_100 = PHI <ret_87(18), ret_102(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_133 = ret_100;
lto1: warning: use location
_101 = ret_100;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
     return (ret);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_93 = &n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:102:17: warning: use location
             ret = &(n1->next);
                 ^
cf_81 = MEM[(struct OPENSSL_LHASH *)_57].comp;
./benchmarks/openssl/double_free_5/openssl_df_5.c:97:8: warning: use location
     cf = lh->comp;
        ^
_78 = MEM[(struct OPENSSL_LHASH *)_57].num_alloc_nodes;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:23: warning: use location
         nn = hash % lh->num_alloc_nodes;
                       ^
_79 = (long unsigned int) _78;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:23: warning: use location
nn_80 = hash_70 % _79;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:12: warning: use location
         nn = hash % lh->num_alloc_nodes;
            ^
nn_83 = PHI <nn_75(16), nn_80(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_84 = (int) nn_83;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:19: warning: use location
     ret = &(lh->b[(int)nn]);
                   ^
_76 = MEM[(struct OPENSSL_LHASH *)_57].p;
./benchmarks/openssl/double_free_5/openssl_df_5.c:94:16: warning: use location
     if (nn < lh->p)
                ^
_77 = (long unsigned int) _76;
./benchmarks/openssl/double_free_5/openssl_df_5.c:94:16: warning: use location
_73 = MEM[(struct OPENSSL_LHASH *)_57].pmax;
./benchmarks/openssl/double_free_5/openssl_df_5.c:93:19: warning: use location
     nn = hash % lh->pmax;
                   ^
_74 = (long unsigned int) _73;
./benchmarks/openssl/double_free_5/openssl_df_5.c:93:19: warning: use location
MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls = _72;
./benchmarks/openssl/double_free_5/openssl_df_5.c:90:23: warning: use location
     lh->num_hash_calls++;
                       ^
_71 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls;
./benchmarks/openssl/double_free_5/openssl_df_5.c:90:7: warning: use location
     lh->num_hash_calls++;
       ^
_69 = MEM[(struct OPENSSL_LHASH *)_57].hash;
./benchmarks/openssl/double_free_5/openssl_df_5.c:89:13: warning: use location
     hash = (*(lh->hash)) (data);
             ^
MEM[(struct OPENSSL_LHASH *)_57].error = 0;
./benchmarks/openssl/double_free_5/openssl_df_5.c:119:15: warning: use location
     lh->error = 0;
               ^
_54 = parms_8 == 0B;
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:15: warning: use location
     if ((conf == NULL) || (section == NULL))
               ^
_56 = _54 | _55;
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:24: warning: use location
     if ((conf == NULL) || (section == NULL))
                        ^
if (_56 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:8: warning: use location
     if ((conf == NULL) || (section == NULL))
        ^
if (_56 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:8: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 29
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 14
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 43

======================================================================
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
     if (conf == NULL) {
        ^
if (parms_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_47 = ret_46;
./benchmarks/openssl/double_free_5/openssl_df_5.c:176:9: warning: use location
  return ret;
         ^
if (ret_46 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:4: warning: use location
  if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL) /* allocation site */
    ^
if (ret_46 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:4: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_46 = malloc (24);
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:4: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f60ecc3dee8
    type <pointer_type 0x7f60ecc1fbd0
        type <record_type 0x7f60ecc1fb28 CONF_VALUE BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc212f8 section> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1fbd0> chain <type_decl 0x7f60ecc21390 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc43360 ret>
    def_stmt ret_46 = malloc (24);
    version 46
    ptr-info 0x7f60ecc473f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f60ed0f6ab0
    type <pointer_type 0x7f60ecc187e0
        type <integer_type 0x7f60ecc18738 char public string-flag QI
            size <integer_cst 0x7f60ed0eecd8 constant 8>
            unit size <integer_cst 0x7f60ed0eecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f60ed1023f0 precision 8 min <integer_cst 0x7f60ecc1b180 -128> max <integer_cst 0x7f60ecc1b168 127>
            pointer_to_this <pointer_type 0x7f60ecc187e0>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f60ecc18888>>
   
    def_stmt _2 = *argv_5(D);
    version 2
    ptr-info 0x7f60ecc47228>
# VUSE <.MEM_6(D)>
_2 = *argv_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_6(D)>
_32 = BIO_new_file (_2, "r");
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_6(D)>
_32 = BIO_new_file (_2, "r");
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================
_32 = BIO_new_file (_2, "r");
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
     in = BIO_new_file(file, "r");
          ^
this stmt is child function---BIO_new_file-----

 ================== trace ================== 
 <ssa_name 0x7f60ed0f6ab0
    type <pointer_type 0x7f60ecc187e0
        type <integer_type 0x7f60ecc18738 char public string-flag QI
            size <integer_cst 0x7f60ed0eecd8 constant 8>
            unit size <integer_cst 0x7f60ed0eecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f60ed1023f0 precision 8 min <integer_cst 0x7f60ecc1b180 -128> max <integer_cst 0x7f60ecc1b168 127>
            pointer_to_this <pointer_type 0x7f60ecc187e0>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f60ecc18888>>
   
    def_stmt _2 = *argv_5(D);
    version 2
    ptr-info 0x7f60ecc47228>
trace fucntion name:BIO_new_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_32 == 0)
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_32 == 0)
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================
if (_32 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
     if (in == NULL) {
        ^
if (_32 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = (long int) _32;
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = (long int) _32;
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================
_33 = (long int) _32;
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
     in = BIO_new_file(file, "r");
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_34 = (struct BIO *) _33;
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_34 = (struct BIO *) _33;
bb index := 2
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 43

======================================================================
in_34 = (struct BIO *) _33;
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: use location
     in = BIO_new_file(file, "r");
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
BIO_free (in_34);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
     BIO_free(in);
     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ed0f6ab0
    type <pointer_type 0x7f60ecc187e0
        type <integer_type 0x7f60ecc18738 char public string-flag QI
            size <integer_cst 0x7f60ed0eecd8 constant 8>
            unit size <integer_cst 0x7f60ed0eecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f60ed1023f0 precision 8 min <integer_cst 0x7f60ecc1b180 -128> max <integer_cst 0x7f60ecc1b168 127>
            pointer_to_this <pointer_type 0x7f60ecc187e0>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f60ecc18888>>
   
    def_stmt _2 = *argv_5(D);
    version 2
    ptr-info 0x7f60ecc47228>
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f60ed0f6ab0
    type <pointer_type 0x7f60ecc187e0
        type <integer_type 0x7f60ecc18738 char public string-flag QI
            size <integer_cst 0x7f60ed0eecd8 constant 8>
            unit size <integer_cst 0x7f60ed0eecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f60ed1023f0 precision 8 min <integer_cst 0x7f60ecc1b180 -128> max <integer_cst 0x7f60ecc1b168 127>
            pointer_to_this <pointer_type 0x7f60ecc187e0>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f60ecc18888>>
   
    def_stmt _2 = *argv_5(D);
    version 2
    ptr-info 0x7f60ecc47228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f60ecc3f140
    type <pointer_type 0x7f60ecc1f2a0
        type <record_type 0x7f60ecc1f348 CONF BLK
            size <integer_cst 0x7f60ed10a0a8 constant 192>
            unit size <integer_cst 0x7f60ed10a078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18348 fields <field_decl 0x7f60ecc1a7b8 meth> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f2a0> chain <type_decl 0x7f60ecc1ab48 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f60ecc3ca20 ctmp type <record_type 0x7f60ecc1f348 CONF>
        addressable used BLK file ./benchmarks/openssl/double_free_5/openssl_df_5.c line 207 col 10 size <integer_cst 0x7f60ed10a0a8 192> unit size <integer_cst 0x7f60ed10a078 24>
        align 128 context <function_decl 0x7f60ecc19b00 main> abstract_origin <var_decl 0x7f60ecc3c6c0 ctmp>
        chain <var_decl 0x7f60ecc3cab0 ret type <integer_type 0x7f60ed1025e8 int>
            used SI file ./benchmarks/openssl/double_free_5/openssl_df_5.c line 208 col 9
            size <integer_cst 0x7f60ed0eee28 constant 32>
            unit size <integer_cst 0x7f60ed0eee40 constant 4>
            align 32 context <function_decl 0x7f60ecc19b00 main> abstract_origin <var_decl 0x7f60ecc3c630 ret>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f60ecc1bfd8 type <integer_type 0x7f60ed1027e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <ssa_name 0x7f60ecc3d1f8
    type <pointer_type 0x7f60ecc18d20
        type <record_type 0x7f60ecc18c78 BIO VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc18d20> chain <type_decl 0x7f60ecc1a1c8 D.3988>>
        unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc3c3f0 in>
    def_stmt in_34 = (struct BIO *) _33;
    version 34
    ptr-info 0x7f60ecc47330>
in_34 = (struct BIO *) _33;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
BIO_free (in_34);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
this stmt is child function---BIO_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc3d1f8
    type <pointer_type 0x7f60ecc18d20
        type <record_type 0x7f60ecc18c78 BIO VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc18d20> chain <type_decl 0x7f60ecc1a1c8 D.3988>>
        unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc3c3f0 in>
    def_stmt in_34 = (struct BIO *) _33;
    version 34
    ptr-info 0x7f60ecc47330>
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
bb index := 12
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 43

======================================================================
# .MEM_122 = VDEF <.MEM_120>
BIO_free (in_34);
BIO_free (in_34);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
this stmt is child function---BIO_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc3d1f8
    type <pointer_type 0x7f60ecc18d20
        type <record_type 0x7f60ecc18c78 BIO VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc18d20> chain <type_decl 0x7f60ecc1a1c8 D.3988>>
        unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc3c3f0 in>
    def_stmt in_34 = (struct BIO *) _33;
    version 34
    ptr-info 0x7f60ecc47330>
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f60ecc3d1f8
    type <pointer_type 0x7f60ecc18d20
        type <record_type 0x7f60ecc18c78 BIO VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc18d20> chain <type_decl 0x7f60ecc1a1c8 D.3988>>
        unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc3c3f0 in>
    def_stmt in_34 = (struct BIO *) _33;
    version 34
    ptr-info 0x7f60ecc47330>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
sk_9 = _141;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_144 = VDEF <.MEM_143>
_13 = sk_CONF_VALUE_value (sk_9, i_12);
bb index := 35
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = sk_CONF_VALUE_value (sk_9, i_12);
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
         cv = sk_CONF_VALUE_value(sk, i);
              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = (long int) _13;
bb index := 35
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (long int) _13;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_15 = (struct CONF_VALUE *) _14;
bb index := 35
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_15 = (struct CONF_VALUE *) _14;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
         cv = sk_CONF_VALUE_value(sk, i);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_144>
buf_17 = cv_15->name;
bb index := 35
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_17 = cv_15->name;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
         for (buf = cv->name; *buf; buf++)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_18 = PHI <buf_17(35), buf_26(39)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_18;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
         for (buf = cv->name; *buf; buf++)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:9: warning: use location
         for (buf = cv->name; *buf; buf++)
         ^
if (_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:9: warning: use location
Cond in fucntion main basic block 40
 ================== possible direct basic block ================= 
from main basic block 36
 ================== possible direct basic block ================= 
from main basic block 41
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = MEM[(char *)buf_18 + 1B];
./benchmarks/openssl/double_free_5/openssl_df_5.c:278:21: warning: use location
                 if (*buf)
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *buf_18;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
                                                ^
if (_23 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = *buf_18;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_29 = PHI <buf_24(38), buf_18(40)>
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_29 = PHI <buf_24(38), buf_18(40)>
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_29 = PHI <buf_24(38), buf_18(40)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_145 = VDEF <.MEM_144>
_30 = X509_NAME_add_entry_by_NID (0B, nid_28(D), _1, buf_29, -1, -1, 0);
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_145 = VDEF <.MEM_144>
_30 = X509_NAME_add_entry_by_NID (0B, nid_28(D), _1, buf_29, -1, -1, 0);
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = X509_NAME_add_entry_by_NID (0B, nid_28(D), _1, buf_29, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_30 == 0)
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_30 == 0)
bb index := 41
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_30 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
            ^
if (_30 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 43
 ================== possible direct basic block ================= 
from main basic block 42
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_144>
type_16 = cv_15->name;
bb index := 35
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
type_16 = cv_15->name;
./benchmarks/openssl/double_free_5/openssl_df_5.c:271:14: warning: use location
         type = cv->name;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = i_12 + 1;
bb index := 42
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_31 = i_12 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
     for (i = 0;; i++) {
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_143 = VDEF <.MEM_111>
_11 = sk_CONF_VALUE_num (sk_9);
bb index := 34
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_143 = VDEF <.MEM_111>
_11 = sk_CONF_VALUE_num (sk_9);
bb index := 34
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = sk_CONF_VALUE_num (sk_9);
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
         if (sk_CONF_VALUE_num(sk) <= i)
             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_10 = sk_CONF_VALUE_num (sk_9);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
     if (sk_CONF_VALUE_num(sk) == 0) {
         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_10 = sk_CONF_VALUE_num (sk_9);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f60ecc37750
    type <pointer_type 0x7f60ecc1f930
        type <record_type 0x7f60ecc1f888 stack_st_CONF_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc1f930> chain <type_decl 0x7f60ecc21130 D.4013>>
        public unsigned DI
        size <integer_cst 0x7f60ed0eebe8 constant 64>
        unit size <integer_cst 0x7f60ed0eec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc345a0 sk>
    def_stmt sk_9 = _141;
    version 9
    ptr-info 0x7f60ecc47270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f60ecc37708
    type <pointer_type 0x7f60ecc180a8
        type <record_type 0x7f60ecc18f18 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f60ed0eebe8 constant 64>
            unit size <integer_cst 0x7f60ed0eec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18f18 fields <field_decl 0x7f60ecc1a558 dummy> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc180a8> chain <type_decl 0x7f60ecc1a5f0 D.3995>>
        public unsigned DI size <integer_cst 0x7f60ed0eebe8 64> unit size <integer_cst 0x7f60ed0eec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc34630 parms>
    def_stmt parms_8 = _123;
    version 8
    ptr-info 0x7f60ecc47258>
parms_8 = _123;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
bb index := 43
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 43 ,possiable got to succ := 43

======================================================================

 Expand conflict 
 The same function may have multiple branches :CONF_free
# .MEM_146 = VDEF <.MEM_142>
CONF_free (parms_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
         CONF_free(parms); /* freed */
         ^
# .MEM_147 = VDEF <.MEM_112>
CONF_free (parms_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
     CONF_free(parms); /* double-free */
     ^
=======================Path Constaint===========================

succs:= 13
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
     if (parms == NULL) {
        ^
	relate logic:= 1
succs:= 2
if (_32 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
     if (in == NULL) {
        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 34
if (_11 <= i_12)
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:12: warning: use location
         if (sk_CONF_VALUE_num(sk) <= i)
            ^
	relate logic:= 1
succs:= 32
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:8: warning: use location
     if (sk_CONF_VALUE_num(sk) == 0) {
        ^
	relate logic:= 1
succs:= 14
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
     if (conf == NULL) {
        ^
	relate logic:= 0
succs:= 13
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
     if (parms == NULL) {
        ^
	relate logic:= 1
succs:= 2
if (_32 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
     if (in == NULL) {
        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 41
if (_30 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
            ^
	relate logic:= 1
succs:= 40
if (_27 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:9: warning: use location
         for (buf = cv->name; *buf; buf++)
         ^
	relate logic:= 0
succs:= 34
if (_11 <= i_12)
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:12: warning: use location
         if (sk_CONF_VALUE_num(sk) <= i)
            ^
	relate logic:= 0
succs:= 32
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:8: warning: use location
     if (sk_CONF_VALUE_num(sk) == 0) {
        ^
	relate logic:= 1
succs:= 14
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
     if (conf == NULL) {
        ^
	relate logic:= 0
succs:= 13
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
     if (parms == NULL) {
        ^
	relate logic:= 1
succs:= 2
if (_32 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
     if (in == NULL) {
        ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_142>
CONF_free (parms_8);
bb index := 33
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 43

======================================================================
# .MEM_146 = VDEF <.MEM_142>
CONF_free (parms_8);
CONF_free (parms_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
         CONF_free(parms); /* freed */
         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
 <ssa_name 0x7f60ecc37708
    type <pointer_type 0x7f60ecc180a8
        type <record_type 0x7f60ecc18f18 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f60ed0eebe8 constant 64>
            unit size <integer_cst 0x7f60ed0eec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18f18 fields <field_decl 0x7f60ecc1a558 dummy> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc180a8> chain <type_decl 0x7f60ecc1a5f0 D.3995>>
        public unsigned DI size <integer_cst 0x7f60ed0eebe8 64> unit size <integer_cst 0x7f60ed0eec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc34630 parms>
    def_stmt parms_8 = _123;
    version 8
    ptr-info 0x7f60ecc47258>
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
_57 = MEM[(const struct CONF *)parms_8].data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:36: warning: use location
     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
                                    ^
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve = _67;
./benchmarks/openssl/double_free_5/openssl_df_5.c:127:25: warning: use location
         lh->num_retrieve++;
                         ^
_66 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve;
./benchmarks/openssl/double_free_5/openssl_df_5.c:127:11: warning: use location
         lh->num_retrieve++;
           ^
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss = _63;
./benchmarks/openssl/double_free_5/openssl_df_5.c:123:30: warning: use location
         lh->num_retrieve_miss++;
                              ^
_62 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss;
./benchmarks/openssl/double_free_5/openssl_df_5.c:123:11: warning: use location
         lh->num_retrieve_miss++;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls = _95;
./benchmarks/openssl/double_free_5/openssl_df_5.c:105:27: warning: use location
         lh->num_comp_calls++;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls;
./benchmarks/openssl/double_free_5/openssl_df_5.c:105:11: warning: use location
         lh->num_comp_calls++;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps = _90;
./benchmarks/openssl/double_free_5/openssl_df_5.c:100:27: warning: use location
         lh->num_hash_comps++;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps;
./benchmarks/openssl/double_free_5/openssl_df_5.c:100:11: warning: use location
         lh->num_hash_comps++;
           ^
_82 = MEM[(struct OPENSSL_LHASH *)_57].b;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:15: warning: use location
     ret = &(lh->b[(int)nn]);
               ^
ret_87 = _82 + _86;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:9: warning: use location
     ret = &(lh->b[(int)nn]);
         ^
n1_88 = *ret_87;
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:13: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_91 = PHI <n1_88(18), n1_99(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_99 = n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:36: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = n1_91->data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:18: warning: use location
         if (cf(n1->data, data) == 0)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = cf_81 (_96, &vv);
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:13: warning: use location
         if (cf(n1->data, data) == 0)
             ^

 ================== trace ================== 
 <ssa_name 0x7f60ecc37708
    type <pointer_type 0x7f60ecc180a8
        type <record_type 0x7f60ecc18f18 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f60ed0eebe8 constant 64>
            unit size <integer_cst 0x7f60ed0eec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18f18 fields <field_decl 0x7f60ecc1a558 dummy> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc180a8> chain <type_decl 0x7f60ecc1a5f0 D.3995>>
        public unsigned DI size <integer_cst 0x7f60ed0eebe8 64> unit size <integer_cst 0x7f60ed0eec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc34630 parms>
    def_stmt parms_8 = _123;
    version 8
    ptr-info 0x7f60ecc47258>
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_97 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:12: warning: use location
         if (cf(n1->data, data) == 0)
            ^
if (_97 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:106:12: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = n1_91->hash;
./benchmarks/openssl/double_free_5/openssl_df_5.c:101:15: warning: use location
         if (n1->hash != hash) {
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_91 != 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:5: warning: use location
     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
     ^
if (n1_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:99:5: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_98 = &n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:108:13: warning: use location
         ret = &(n1->next);
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_102 = PHI <ret_93(20), ret_98(22)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_100 = PHI <ret_87(18), ret_102(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_133 = ret_100;
lto1: warning: use location
_101 = ret_100;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
     return (ret);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_93 = &n1_91->next;
./benchmarks/openssl/double_free_5/openssl_df_5.c:102:17: warning: use location
             ret = &(n1->next);
                 ^
cf_81 = MEM[(struct OPENSSL_LHASH *)_57].comp;
./benchmarks/openssl/double_free_5/openssl_df_5.c:97:8: warning: use location
     cf = lh->comp;
        ^
_78 = MEM[(struct OPENSSL_LHASH *)_57].num_alloc_nodes;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:23: warning: use location
         nn = hash % lh->num_alloc_nodes;
                       ^
_79 = (long unsigned int) _78;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:23: warning: use location
nn_80 = hash_70 % _79;
./benchmarks/openssl/double_free_5/openssl_df_5.c:95:12: warning: use location
         nn = hash % lh->num_alloc_nodes;
            ^
nn_83 = PHI <nn_75(16), nn_80(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_84 = (int) nn_83;
./benchmarks/openssl/double_free_5/openssl_df_5.c:98:19: warning: use location
     ret = &(lh->b[(int)nn]);
                   ^
_76 = MEM[(struct OPENSSL_LHASH *)_57].p;
./benchmarks/openssl/double_free_5/openssl_df_5.c:94:16: warning: use location
     if (nn < lh->p)
                ^
_77 = (long unsigned int) _76;
./benchmarks/openssl/double_free_5/openssl_df_5.c:94:16: warning: use location
_73 = MEM[(struct OPENSSL_LHASH *)_57].pmax;
./benchmarks/openssl/double_free_5/openssl_df_5.c:93:19: warning: use location
     nn = hash % lh->pmax;
                   ^
_74 = (long unsigned int) _73;
./benchmarks/openssl/double_free_5/openssl_df_5.c:93:19: warning: use location
MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls = _72;
./benchmarks/openssl/double_free_5/openssl_df_5.c:90:23: warning: use location
     lh->num_hash_calls++;
                       ^
_71 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls;
./benchmarks/openssl/double_free_5/openssl_df_5.c:90:7: warning: use location
     lh->num_hash_calls++;
       ^
_69 = MEM[(struct OPENSSL_LHASH *)_57].hash;
./benchmarks/openssl/double_free_5/openssl_df_5.c:89:13: warning: use location
     hash = (*(lh->hash)) (data);
             ^
MEM[(struct OPENSSL_LHASH *)_57].error = 0;
./benchmarks/openssl/double_free_5/openssl_df_5.c:119:15: warning: use location
     lh->error = 0;
               ^
_54 = parms_8 == 0B;
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:15: warning: use location
     if ((conf == NULL) || (section == NULL))
               ^
_56 = _54 | _55;
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:24: warning: use location
     if ((conf == NULL) || (section == NULL))
                        ^
if (_56 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:8: warning: use location
     if ((conf == NULL) || (section == NULL))
        ^
if (_56 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:136:8: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 29
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 14
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 43

======================================================================
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
     if (conf == NULL) {
        ^
if (parms_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 32
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_8 == 0B)
bb index := 13
# VUSE <.MEM_147>
return 0;
lto1: warning: use location
beacuse in succ := 43 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 43

======================================================================
if (parms_8 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
     if (parms == NULL) {
        ^
if (parms_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 43
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f60ecc37708
    type <pointer_type 0x7f60ecc180a8
        type <record_type 0x7f60ecc18f18 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f60ed0eebe8 constant 64>
            unit size <integer_cst 0x7f60ed0eec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f60ecc18f18 fields <field_decl 0x7f60ecc1a558 dummy> context <translation_unit_decl 0x7f60ed0f9168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f60ecc180a8> chain <type_decl 0x7f60ecc1a5f0 D.3995>>
        public unsigned DI size <integer_cst 0x7f60ed0eebe8 64> unit size <integer_cst 0x7f60ed0eec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f60ecc34630 parms>
    def_stmt parms_8 = _123;
    version 8
    ptr-info 0x7f60ecc47258>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f60ed10a000 type <pointer_type 0x7f60ed1090a8> constant 0>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [5.50%]:
_1 = (long unsigned int) argc_3(D);
_2 = *argv_5(D);
_32 = BIO_new_file (_2, "r");
_33 = (long int) _32;
in_34 = (struct BIO *) _33;
if (_32 == 0)
  goto <bb 13>; [16.72%]
else
  goto <bb 3>; [83.28%]

=======is loop:0=========

 bb index 3 
<bb 3> [4.58%]:
CONF_set_nconf (&ctmp, 0B);
_42 = ctmp.data;
if (_42 == 0B)
  goto <bb 4>; [19.86%]
else
  goto <bb 8>; [80.14%]

=======is loop:0=========

 bb index 4 
<bb 4> [0.91%]:
ret_46 = malloc (24);
if (ret_46 == 0B)
  goto <bb 6>; [4.07%]
else
  goto <bb 5>; [95.93%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.87%]:
_47 = ret_46;

=======is loop:0=========

 bb index 6 
<bb 6> [0.91%]:
# _48 = PHI <0B(4), ret_46(5)>
_116 = _48;
_43 = _116;
ctmp.data = _43;
_44 = ctmp.data;
if (_44 == 0B)
  goto <bb 8>; [26.74%]
else
  goto <bb 7>; [73.26%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.67%]:

=======is loop:0=========

 bb index 8 
<bb 8> [4.58%]:
# _45 = PHI <1(7), 1(3), 0(6)>
_118 = _45;
_40 = _118;
if (_40 == 0)
  goto <bb 10>; [46.00%]
else
  goto <bb 9>; [54.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [2.47%]:

=======is loop:0=========

 bb index 10 
<bb 10> [4.58%]:
# _41 = PHI <1(9), 0(8)>
_119 = _41;
ret_37 = _119;
if (ret_37 != 0)
  goto <bb 11>; [91.00%]
else
  goto <bb 12>; [9.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [4.17%]:
_38 = ctmp.data;

=======is loop:0=========

 bb index 12 
<bb 12> [4.58%]:
# _39 = PHI <0B(10), _38(11)>
ctmp ={v} {CLOBBER};
_121 = _39;
ltmp_35 = _121;
BIO_free (in_34);

=======is loop:0=========

 bb index 13 
<bb 13> [5.50%]:
# _36 = PHI <0B(2), ltmp_35(12)>
_123 = _36;
parms_8 = _123;
if (parms_8 == 0B)
  goto <bb 43> (end); [42.57%]
else
  goto <bb 14>; [57.43%]

=======is loop:0=========

 bb index 14 
<bb 14> [3.16%]:
if (parms_8 == 0B)
  goto <bb 32>; [4.07%]
else
  goto <bb 15>; [95.93%]

=======is loop:0=========

 bb index 15 
<bb 15> [3.03%]:
_54 = parms_8 == 0B;
_55 = 0;
_56 = _54 | _55;
if (_56 != 0)
  goto <bb 29>; [16.72%]
else
  goto <bb 16>; [83.28%]

=======is loop:0=========

 bb index 16 
<bb 16> [2.52%]:
vv.name = 0B;
vv.section = "default";
_57 = MEM[(const struct CONF *)parms_8].data;
MEM[(struct OPENSSL_LHASH *)_57].error = 0;
_69 = MEM[(struct OPENSSL_LHASH *)_57].hash;
hash_70 = _69 (&vv);
_71 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls;
_72 = _71 + 1;
MEM[(struct OPENSSL_LHASH *)_57].num_hash_calls = _72;
hash_150 = hash_70;
_73 = MEM[(struct OPENSSL_LHASH *)_57].pmax;
_74 = (long unsigned int) _73;
nn_75 = hash_70 % _74;
_76 = MEM[(struct OPENSSL_LHASH *)_57].p;
_77 = (long unsigned int) _76;
if (nn_75 < _77)
  goto <bb 17>; [50.00%]
else
  goto <bb 18>; [50.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [1.26%]:
_78 = MEM[(struct OPENSSL_LHASH *)_57].num_alloc_nodes;
_79 = (long unsigned int) _78;
nn_80 = hash_70 % _79;

=======is loop:0=========

 bb index 18 
<bb 18> [2.52%]:
# nn_83 = PHI <nn_75(16), nn_80(17)>
cf_81 = MEM[(struct OPENSSL_LHASH *)_57].comp;
_82 = MEM[(struct OPENSSL_LHASH *)_57].b;
_84 = (int) nn_83;
_85 = (long unsigned int) _84;
_86 = _85 * 8;
ret_87 = _82 + _86;
n1_88 = *ret_87;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [17.30%]:
_89 = MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps;
_90 = _89 + 1;
MEM[(struct OPENSSL_LHASH *)_57].num_hash_comps = _90;
_92 = n1_91->hash;
if (hash_70 != _92)
  goto <bb 20>; [13.47%]
else
  goto <bb 21>; [86.53%]

=======is loop:1=========

 bb index 20 
<bb 20> [2.33%]:
ret_93 = &n1_91->next;
// predicted unlikely by continue predictor.
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [14.97%]:
_94 = MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls;
_95 = _94 + 1;
MEM[(struct OPENSSL_LHASH *)_57].num_comp_calls = _95;
_96 = n1_91->data;
_97 = cf_81 (_96, &vv);
if (_97 == 0)
  goto <bb 25>; [7.50%]
else
  goto <bb 22>; [92.50%]

=======is loop:1=========

 bb index 22 
<bb 22> [13.84%]:
ret_98 = &n1_91->next;

=======is loop:1=========

 bb index 23 
<bb 23> [16.17%]:
# ret_102 = PHI <ret_93(20), ret_98(22)>
n1_99 = n1_91->next;

=======is loop:1=========

 bb index 24 
<bb 24> [18.70%]:
# ret_100 = PHI <ret_87(18), ret_102(23)>
# n1_91 = PHI <n1_88(18), n1_99(23)>
if (n1_91 != 0B)
  goto <bb 19>; [92.50%]
else
  goto <bb 25>; [7.50%]

=======is loop:0=========

 bb index 25 
<bb 25> [2.52%]:
_101 = ret_100;
_133 = ret_100;
rn_60 = _133;
_61 = *rn_60;
if (_61 == 0B)
  goto <bb 26>; [4.07%]
else
  goto <bb 27>; [95.93%]

=======is loop:0=========

 bb index 26 
<bb 26> [0.10%]:
_62 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss;
_63 = _62 + 1;
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve_miss = _63;
goto <bb 28>; [100.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [2.42%]:
_64 = *rn_60;
ret_65 = _64->data;
_66 = MEM[(struct OPENSSL_LHASH *)_57].num_retrieve;
_67 = _66 + 1;
MEM[(struct OPENSSL_LHASH *)_57].num_retrieve = _67;

=======is loop:0=========

 bb index 28 
<bb 28> [2.52%]:
# _68 = PHI <0B(26), ret_65(27)>
_137 = _68;
v_58 = _137;

=======is loop:0=========

 bb index 29 
<bb 29> [3.03%]:
# _59 = PHI <0B(15), v_58(28)>
vv ={v} {CLOBBER};
_139 = _59;
v_51 = _139;
if (v_51 != 0B)
  goto <bb 30>; [95.93%]
else
  goto <bb 31>; [4.07%]

=======is loop:0=========

 bb index 30 
<bb 30> [2.91%]:
_52 = v_51->value;

=======is loop:0=========

 bb index 31 
<bb 31> [3.03%]:
# _53 = PHI <0B(29), _52(30)>
_140 = _53;
_49 = _140;

=======is loop:0=========

 bb index 32 
<bb 32> [3.16%]:
# _50 = PHI <0B(14), _49(31)>
_141 = _50;
sk_9 = _141;
_10 = sk_CONF_VALUE_num (sk_9);
if (_10 == 0)
  goto <bb 33>; [29.56%]
else
  goto <bb 34>; [70.44%]

=======is loop:0=========

 bb index 33 
<bb 33> [0.93%]:
CONF_free (parms_8);
goto <bb 43> (end); [100.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [15.42%]:
# i_12 = PHI <0(32), i_31(42)>
_11 = sk_CONF_VALUE_num (sk_9);
if (_11 <= i_12)
  goto <bb 43> (end); [7.50%]
else
  goto <bb 35>; [92.50%]

=======is loop:1=========

 bb index 35 
<bb 35> [14.26%]:
_13 = sk_CONF_VALUE_value (sk_9, i_12);
_14 = (long int) _13;
cv_15 = (struct CONF_VALUE *) _14;
type_16 = cv_15->name;
buf_17 = cv_15->name;
goto <bb 40>; [100.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [95.00%]:
_19 = *buf_18;
_20 = _19 == 58;
_21 = _19 == 44;
_22 = _20 | _21;
if (_22 != 0)
  goto <bb 38>; [5.00%]
else
  goto <bb 37>; [95.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [90.25%]:
_23 = *buf_18;
if (_23 == 46)
  goto <bb 38>; [5.00%]
else
  goto <bb 39>; [95.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [9.26%]:
buf_24 = buf_18 + 1;
_25 = MEM[(char *)buf_18 + 1B];
goto <bb 41>; [100.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [85.74%]:
buf_26 = buf_18 + 1;

=======is loop:1=========

 bb index 40 
<bb 40> [100.00%]:
# buf_18 = PHI <buf_17(35), buf_26(39)>
_27 = *buf_18;
if (_27 != 0)
  goto <bb 36>; [95.00%]
else
  goto <bb 41>; [5.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [14.26%]:
# buf_29 = PHI <buf_24(38), buf_18(40)>
_30 = X509_NAME_add_entry_by_NID (0B, nid_28(D), _1, buf_29, -1, -1, 0);
if (_30 == 0)
  goto <bb 43> (end); [7.50%]
else
  goto <bb 42>; [92.50%]

=======is loop:1=========

 bb index 42 
<bb 42> [13.19%]:
i_31 = i_12 + 1;
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 43 
end [5.50%]:
CONF_free (parms_8);
_149 = -1;
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 5 [0m
[40;34m    used_stmt array stack totalsize of : 4080 [0m
[40;34m    collect time: : 0.000328 s [0m
[40;34m    algorithm time: 0.012168 s [0m
[40;34m    gimple stmt count : : 131 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccYD09DD.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x35): undefined reference to `BIO_new_file'
/usr/bin/ld: <artificial>:(.text+0x54): undefined reference to `CONF_set_nconf'
/usr/bin/ld: <artificial>:(.text+0x72): undefined reference to `BIO_free'
/usr/bin/ld: <artificial>:(.text+0x124): undefined reference to `BIO_free'
/usr/bin/ld: <artificial>:(.text+0x187): undefined reference to `sk_CONF_VALUE_num'
/usr/bin/ld: <artificial>:(.text+0x1c3): undefined reference to `CONF_free'
/usr/bin/ld: <artificial>:(.text+0x1d0): undefined reference to `CONF_free'
/usr/bin/ld: <artificial>:(.text+0x21f): undefined reference to `X509_NAME_add_entry_by_NID'
/usr/bin/ld: <artificial>:(.text+0x237): undefined reference to `sk_CONF_VALUE_num'
/usr/bin/ld: <artificial>:(.text+0x24a): undefined reference to `sk_CONF_VALUE_value'
collect2: error: ld returned 1 exit status
