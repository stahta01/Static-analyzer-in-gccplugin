./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:23: warning: passing argument 1 of ‘CRYPTO_atomic_add’ from incompatible pointer type [-Wincompatible-pointer-types]
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |                       ^~~~~~~~~~~~~~~~~~~
      |                       |
      |                       long unsigned int *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:70:28: note: expected ‘int *’ but argument is of type ‘long unsigned int *’
   70 | int CRYPTO_atomic_add(int *val, int amount, int *ret)
      |                       ~~~~~^~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:27: warning: passing argument 1 of ‘CRYPTO_atomic_add’ from incompatible pointer type [-Wincompatible-pointer-types]
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |                           ^~~~~~~~~~~~~~~~~~~
      |                           |
      |                           long unsigned int *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:70:28: note: expected ‘int *’ but argument is of type ‘long unsigned int *’
   70 | int CRYPTO_atomic_add(int *val, int amount, int *ret)
      |                       ~~~~~^~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:102:27: warning: passing argument 1 of ‘CRYPTO_atomic_add’ from incompatible pointer type [-Wincompatible-pointer-types]
  102 |         CRYPTO_atomic_add(&lh->num_comp_calls, 1, &scratch);
      |                           ^~~~~~~~~~~~~~~~~~~
      |                           |
      |                           long unsigned int *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:70:28: note: expected ‘int *’ but argument is of type ‘long unsigned int *’
   70 | int CRYPTO_atomic_add(int *val, int amount, int *ret)
      |                       ~~~~~^~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:139:12: warning: returning ‘OPENSSL_LHASH *’ {aka ‘struct lhash_st *’} from a function with incompatible return type ‘CONF_VALUE *’ [-Wincompatible-pointer-types]
  139 |     return (ret);
      |            ^
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: passing argument 1 of ‘CRYPTO_atomic_add’ from incompatible pointer type [-Wincompatible-pointer-types]
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^~~~~~~~~~~~~~~~~~~~~~
      |                           |
      |                           long unsigned int *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:70:28: note: expected ‘int *’ but argument is of type ‘long unsigned int *’
   70 | int CRYPTO_atomic_add(int *val, int amount, int *ret)
      |                       ~~~~~^~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: passing argument 1 of ‘CRYPTO_atomic_add’ from incompatible pointer type [-Wincompatible-pointer-types]
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^~~~~~~~~~~~~~~~~
      |                           |
      |                           long unsigned int *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:70:28: note: expected ‘int *’ but argument is of type ‘long unsigned int *’
   70 | int CRYPTO_atomic_add(int *val, int amount, int *ret)
      |                       ~~~~~^~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:44: warning: passing argument 1 of ‘lh_CONF_VALUE_retrieve’ from incompatible pointer type [-Wincompatible-pointer-types]
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                                        ~~~~^~~~~~
      |                                            |
      |                                            struct lhash_st_CONF_VALUE *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:147:45: note: expected ‘OPENSSL_LHASH *’ {aka ‘struct lhash_st *’} but argument is of type ‘struct lhash_st_CONF_VALUE *’
  147 | void *lh_CONF_VALUE_retrieve(OPENSSL_LHASH *lh, const void *data)
      |                              ~~~~~~~~~~~~~~~^~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:40: warning: passing argument 1 of ‘lh_CONF_VALUE_retrieve’ from incompatible pointer type [-Wincompatible-pointer-types]
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                                    ~~~~^~~~~~
      |                                        |
      |                                        struct lhash_st_CONF_VALUE *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:147:45: note: expected ‘OPENSSL_LHASH *’ {aka ‘struct lhash_st *’} but argument is of type ‘struct lhash_st_CONF_VALUE *’
  147 | void *lh_CONF_VALUE_retrieve(OPENSSL_LHASH *lh, const void *data)
      |                              ~~~~~~~~~~~~~~~^~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘app_RAND_write’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: implicit declaration of function ‘RAND_write_file’ [-Wimplicit-function-declaration]
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^~~~~~~~~~~~~~~
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: assignment to ‘struct lhash_st_CONF_VALUE *’ from incompatible pointer type ‘CONF_VALUE *’ [-Wincompatible-pointer-types]
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c: In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:32: warning: passing argument 1 of ‘lh_CONF_VALUE_free’ from incompatible pointer type [-Wincompatible-pointer-types]
  247 |         lh_CONF_VALUE_free(conf->data);
      |                            ~~~~^~~~~~
      |                                |
      |                                struct lhash_st_CONF_VALUE *
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:111:40: note: expected ‘OPENSSL_LHASH *’ {aka ‘struct lhash_st *’} but argument is of type ‘struct lhash_st_CONF_VALUE *’
  111 | void lh_CONF_VALUE_free(OPENSSL_LHASH *lh)
      |                         ~~~~~~~~~~~~~~~^~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.4%|          |
nothrow                          |      |      |      |      |     -2.4%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa                      |      |      |      |      |     -0.9%|     -0.3%|
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:foo=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 2
succs:= 3
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 4
succs:= 5
succs:= 3
succs:= 5
=======node_fun:CONF_new=========

=======node_fun:CONF_free=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
=======node_fun:_CONF_new_data=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
=======node_fun:app_RAND_write=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
=======node_fun:app_RAND_load_conf=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
=======node_fun:NCONF_get_string=========

--------GIMPLE Cond -------
succs:= 2
=======node_fun:_CONF_get_string=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 4
--------GIMPLE Cond -------
succs:= 7
succs:= 3
succs:= 2
succs:= 5
succs:= 7
=======node_fun:lh_CONF_VALUE_retrieve=========

--------GIMPLE Cond -------
succs:= 4
succs:= 2
succs:= 2
succs:= 2
=======node_fun:lh_CONF_VALUE_new=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
succs:= 4
=======node_fun:lh_CONF_VALUE_free=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 7
succs:= 2
=======node_fun:getrn=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 7
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 10
=======node_fun:CRYPTO_atomic_add=========

===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
foo ();
# .MEM_3 = VDEF <.MEM_2>
app_RAND_write ();
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
# .MEM_11 = VDEF <.MEM_10>
app_RAND_load_conf (conf_5, "section");
# .MEM_12 = VDEF <.MEM_6>
CONF_free (conf_5);
# .MEM_5 = VDEF <.MEM_4(D)>
ret_3 = malloc (16);
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"RAND_write_file error"[0]);
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
# .MEM_23 = VDEF <.MEM_22(D)>
_9 = getenv (name_5(D));
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
# .MEM_52 = VDEF <.MEM_51>
CRYPTO_atomic_add (_15, 1, &scratch);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:app_RAND_write========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path app_RAND_write  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:RAND_write_file========= [0m
[40;33m =======POP node_fun stack:RAND_write_file========= [0m
[40;42m =======pre_check_funciton:app_RAND_write========= [0m
[40;42m =======start_check_funciton:app_RAND_write========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1a68
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
   
    def_stmt _2 = save_rand_file;
    version:2
    ptr-info 0x7fc08a6e9a20>
# VUSE <.MEM_5(D)>
_2 = save_rand_file;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_write’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_3 = RAND_write_file (_2);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^
this stmt is child function---RAND_write_file-----

 ================== trace ================== 
trace fucntion name:RAND_write_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_write’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_3 == -1)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |        ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
Cond in fucntion app_RAND_write basic block 3
 ================== possible direct basic block ================= 
from app_RAND_write basic block 4
 ================== possible direct basic block ================= 
from app_RAND_write basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1a68
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
   
    def_stmt _2 = save_rand_file;
    version:2
    ptr-info 0x7fc08a6e9a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc08ada5e60
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    constant
    arg:0 <array_ref 0x7fc08abb3118 type <integer_type 0x7fc08a6d2a80 char>
       
        arg:0 <string_cst 0x7fc08a6f20f0 type <array_type 0x7fc08a6ded20>
            readonly constant static "RAND_write_file error\000">
        arg:1 <integer_cst 0x7fc08aba9f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:app_RAND_write========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path foo  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_free  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_free  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_free========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_free========= [0m
[40;33m =======POP node_fun stack:lh_CONF_VALUE_free========= [0m
[40;42m =======pre_check_funciton:CONF_free========= [0m
[40;42m =======start_check_funciton:CONF_free========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>
# VUSE <.MEM_6(D)>
_2 = conf_4(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:app_RAND_load_conf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path app_RAND_load_conf  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_get_string  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_string  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_string========= [0m
[40;42m =======start_check_funciton:_CONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>
# VUSE <.MEM_28>
_1 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
if (v_19 != 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
  180 |             if (v != NULL)
      |                ^
if (v_19 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
Cond in fucntion _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 6
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>
# VUSE <.MEM_25>
_2 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
if (v_14 != 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
  187 |         if (v != NULL)
      |            ^
if (v_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
Cond in fucntion _CONF_get_string basic block 7
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 8
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_9 = getenv (name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:192:17: warning: use location
  192 |         return (getenv(name));
      |                 ^
this stmt is child function---getenv-----

 ================== trace ================== 
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
vv.section = section_10(D);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:178:24: warning: use location
  178 |             vv.section = (char *)section;
      |                        ^
if (section_10(D) != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
  176 |         if (section != NULL) {
      |            ^
if (section_10(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
Cond in fucntion _CONF_get_string basic block 4
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_string========= [0m
[40;42m =======pre_check_funciton:NCONF_get_string========= [0m
[40;42m =======start_check_funciton:NCONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:197:15: warning: use location
  197 |     char *s = _CONF_get_string(conf, group, name);
      |               ^
this stmt is child function---_CONF_get_string-----

 ================== trace ================== 
trace fucntion name:_CONF_get_string 
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <s_7(2), 0B(3)>
bb index := 4
# VUSE <.MEM_54>
return ret_19;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <s_7(2), 0B(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (s_7 != 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
  199 |     if (s)
      |        ^
if (s_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
Cond in fucntion NCONF_get_string basic block 2
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 4
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_get_string========= [0m
[40;42m =======pre_check_funciton:app_RAND_load_conf========= [0m
[40;42m =======start_check_funciton:app_RAND_load_conf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:210:28: warning: use location
  210 |     const char *randfile = NCONF_get_string(c, section, "RANDFILE");
      |                            ^
this stmt is child function---NCONF_get_string-----

 ================== trace ================== 
trace fucntion name:NCONF_get_string 
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
save_rand_file = randfile_7;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:217:24: warning: use location
  217 |         save_rand_file = randfile;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = save_rand_file;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:24: warning: use location
  222 |     if (save_rand_file == NULL)
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
  222 |     if (save_rand_file == NULL)
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 2
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = save_rand_file;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_3 = RAND_write_file (_2);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^
this stmt is child function---RAND_write_file-----

 ================== trace ================== 
trace fucntion name:RAND_write_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_3 == -1)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |        ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 3
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 4
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = save_rand_file;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:216:24: warning: use location
  216 |     if (save_rand_file == NULL)
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:app_RAND_load_conf========= [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_8 = malloc (176);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:16: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = malloc (8);
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:19: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9780 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 176>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9798 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :888========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = conf_6(D)->data;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
if (_3 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = conf_6(D)->data;
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:13: warning: use location
  234 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
  231 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :0========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
if (_3 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre add _ fucntion:CONF_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path CONF_new  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:CONF_new========= [0m
[40;42m =======start_check_funciton:CONF_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>
# .MEM_5 = VDEF <.MEM_4(D)>
ret_3 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return ret_3;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:256:12: warning: use location
  256 |     return ret;
      |            ^
ret_3 = malloc (16);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:255:11: warning: use location
  255 |     ret = OPENSSL_malloc(sizeof(*ret));
      |           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e95d0 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:CONF_new========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======start_check_funciton:foo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();

 ================== trace ptable================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_new-----
this other function ------CONF_new-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 
[40;44m =======trace_function_path CONF_free  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:248:9: warning: use location
  248 |         OPENSSL_free(conf);
      |         ^
[40;36m ======= node_fun:CONF_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_free========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :1========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^
this stmt is child function---app_RAND_load_conf-----

 ================== trace ================== 
trace fucntion name:app_RAND_load_conf 
[40;44m =======trace_function_path app_RAND_load_conf  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:app_RAND_load_conf========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;46m =======add node_fun stack:NCONF_get_string========= [0m
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:3 
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :1========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
Cond in fucntion foo basic block 4
 ================== possible direct basic block ================= 
from foo basic block 5
 ================== possible direct basic block ================= 
from foo basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location
  264 |     conf->data = NULL;
      |                ^
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_5 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_5 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
if (conf_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
Cond in fucntion foo basic block 2
 ================== possible direct basic block ================= 
from foo basic block 3
 ================== possible direct basic block ================= 
from foo basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
conf_5 = CONF_new ();
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:17: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |                 ^
this stmt is child function---CONF_new-----

 ================== trace ================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_12 = VDEF <.MEM_6>
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_11 = VDEF <.MEM_10>
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();

 ================== trace ptable================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_new-----
this other function ------CONF_new-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 
[40;44m =======trace_function_path CONF_free  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:248:9: warning: use location
  248 |         OPENSSL_free(conf);
      |         ^
[40;36m ======= node_fun:CONF_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_free========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :1========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^
this stmt is child function---app_RAND_load_conf-----

 ================== trace ================== 
trace fucntion name:app_RAND_load_conf 
[40;44m =======trace_function_path app_RAND_load_conf  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:app_RAND_load_conf========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;46m =======add node_fun stack:NCONF_get_string========= [0m
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:3 
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :1========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
Cond in fucntion foo basic block 4
 ================== possible direct basic block ================= 
from foo basic block 5
 ================== possible direct basic block ================= 
from foo basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location
  264 |     conf->data = NULL;
      |                ^
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_5 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_5 == 0B)
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
if (conf_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
Cond in fucntion foo basic block 2
 ================== possible direct basic block ================= 
from foo basic block 3
 ================== possible direct basic block ================= 
from foo basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
conf_5 = CONF_new ();
In function ‘main’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:17: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |                 ^
this stmt is child function---CONF_new-----

 ================== trace ================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_12 = VDEF <.MEM_6>
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_11 = VDEF <.MEM_10>
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:foo========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:foo========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path foo  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_free  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_free========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_free========= [0m
[40;33m =======POP node_fun stack:lh_CONF_VALUE_free========= [0m
[40;42m =======pre_check_funciton:CONF_free========= [0m
[40;42m =======start_check_funciton:CONF_free========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>
# VUSE <.MEM_6(D)>
_2 = conf_4(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:app_RAND_load_conf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path app_RAND_load_conf  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_get_string  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_string  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_string========= [0m
[40;42m =======start_check_funciton:_CONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>
# VUSE <.MEM_28>
_1 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
if (v_19 != 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
  180 |             if (v != NULL)
      |                ^
if (v_19 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
Cond in fucntion _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 6
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>
# VUSE <.MEM_25>
_2 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
if (v_14 != 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
  187 |         if (v != NULL)
      |            ^
if (v_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
Cond in fucntion _CONF_get_string basic block 7
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 8
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_9 = getenv (name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:192:17: warning: use location
  192 |         return (getenv(name));
      |                 ^
this stmt is child function---getenv-----

 ================== trace ================== 
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
vv.section = section_10(D);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:178:24: warning: use location
  178 |             vv.section = (char *)section;
      |                        ^
if (section_10(D) != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
  176 |         if (section != NULL) {
      |            ^
if (section_10(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
Cond in fucntion _CONF_get_string basic block 4
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_string========= [0m
[40;42m =======pre_check_funciton:NCONF_get_string========= [0m
[40;42m =======start_check_funciton:NCONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:197:15: warning: use location
  197 |     char *s = _CONF_get_string(conf, group, name);
      |               ^
this stmt is child function---_CONF_get_string-----

 ================== trace ================== 
trace fucntion name:_CONF_get_string 
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <s_7(2), 0B(3)>
bb index := 4
# VUSE <.MEM_54>
return ret_19;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <s_7(2), 0B(3)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (s_7 != 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
  199 |     if (s)
      |        ^
if (s_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
Cond in fucntion NCONF_get_string basic block 2
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 4
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_get_string========= [0m
[40;42m =======pre_check_funciton:app_RAND_load_conf========= [0m
[40;42m =======start_check_funciton:app_RAND_load_conf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:210:28: warning: use location
  210 |     const char *randfile = NCONF_get_string(c, section, "RANDFILE");
      |                            ^
this stmt is child function---NCONF_get_string-----

 ================== trace ================== 
trace fucntion name:NCONF_get_string 
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
save_rand_file = randfile_7;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:217:24: warning: use location
  217 |         save_rand_file = randfile;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = save_rand_file;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:24: warning: use location
  222 |     if (save_rand_file == NULL)
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
  222 |     if (save_rand_file == NULL)
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 2
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = save_rand_file;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_3 = RAND_write_file (_2);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^
this stmt is child function---RAND_write_file-----

 ================== trace ================== 
trace fucntion name:RAND_write_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_3 == -1)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |        ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 3
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 4
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = save_rand_file;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:216:24: warning: use location
  216 |     if (save_rand_file == NULL)
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:app_RAND_load_conf========= [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_8 = malloc (176);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:16: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘foo’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = malloc (8);
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:19: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9780 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 176>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9798 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :888========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = conf_6(D)->data;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
if (_3 == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = conf_6(D)->data;
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:13: warning: use location
  234 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
  231 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘foo’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :0========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
if (_3 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre add _ fucntion:CONF_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path CONF_new  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:CONF_new========= [0m
[40;42m =======start_check_funciton:CONF_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>
# .MEM_5 = VDEF <.MEM_4(D)>
ret_3 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return ret_3;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:256:12: warning: use location
  256 |     return ret;
      |            ^
ret_3 = malloc (16);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:255:11: warning: use location
  255 |     ret = OPENSSL_malloc(sizeof(*ret));
      |           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e95d0 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:CONF_new========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======start_check_funciton:foo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();

 ================== trace ptable================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_new-----
this other function ------CONF_new-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 
[40;44m =======trace_function_path CONF_free  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:248:9: warning: use location
  248 |         OPENSSL_free(conf);
      |         ^
[40;36m ======= node_fun:CONF_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_free========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :1========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^
this stmt is child function---app_RAND_load_conf-----

 ================== trace ================== 
trace fucntion name:app_RAND_load_conf 
[40;44m =======trace_function_path app_RAND_load_conf  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:app_RAND_load_conf========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;46m =======add node_fun stack:NCONF_get_string========= [0m
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:3 
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :1========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
Cond in fucntion foo basic block 4
 ================== possible direct basic block ================= 
from foo basic block 5
 ================== possible direct basic block ================= 
from foo basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location
  264 |     conf->data = NULL;
      |                ^
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_5 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
if (conf_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
Cond in fucntion foo basic block 2
 ================== possible direct basic block ================= 
from foo basic block 3
 ================== possible direct basic block ================= 
from foo basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
conf_5 = CONF_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:17: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |                 ^
this stmt is child function---CONF_new-----

 ================== trace ================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_12 = VDEF <.MEM_6>
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_11 = VDEF <.MEM_10>
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();

 ================== trace ptable================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_new-----
this other function ------CONF_new-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 
[40;44m =======trace_function_path CONF_free  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (conf_4(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:248:9: warning: use location
  248 |         OPENSSL_free(conf);
      |         ^
[40;36m ======= node_fun:CONF_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_free========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :1========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^
this stmt is child function---app_RAND_load_conf-----

 ================== trace ================== 
trace fucntion name:app_RAND_load_conf 
[40;44m =======trace_function_path app_RAND_load_conf  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:app_RAND_load_conf========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;46m =======add node_fun stack:NCONF_get_string========= [0m
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:3 
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :1========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
Cond in fucntion foo basic block 4
 ================== possible direct basic block ================= 
from foo basic block 5
 ================== possible direct basic block ================= 
from foo basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location
  264 |     conf->data = NULL;
      |                ^
conf_5->data = 0B;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:264:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_5 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
if (conf_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
Cond in fucntion foo basic block 2
 ================== possible direct basic block ================= 
from foo basic block 3
 ================== possible direct basic block ================= 
from foo basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
conf_5 = CONF_new ();
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
conf_5 = CONF_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:17: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |                 ^
this stmt is child function---CONF_new-----

 ================== trace ================== 
trace fucntion name:CONF_new 
[40;44m =======trace_function_path CONF_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1708
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08b451cf0 conf>
    def_stmt conf_5 = CONF_new ();
    version:5
    ptr-info 0x7fc08a6e9930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_12 = VDEF <.MEM_6>
CONF_free (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:270:5: warning: use location
  270 |     CONF_free(conf);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
# .MEM_11 = VDEF <.MEM_10>
app_RAND_load_conf (conf_5, "section");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:267:9: warning: use location
  267 |         app_RAND_load_conf(conf, "section");
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
_1 = _CONF_new_data (conf_5);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:9: warning: Use after free error!: free location 
  265 |     if (_CONF_new_data(conf) == 0)
      |         ^
if (_1 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:265:8: warning: use location
  265 |     if (_CONF_new_data(conf) == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 0
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 0
=succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:foo========= [0m
[40;44m =======node_fun:CONF_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CONF_new  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:CONF_new========= [0m
[40;42m =======start_check_funciton:CONF_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>
# .MEM_5 = VDEF <.MEM_4(D)>
ret_3 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return ret_3;
In function ‘CONF_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:256:12: warning: use location
  256 |     return ret;
      |            ^
ret_3 = malloc (16);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:255:11: warning: use location
  255 |     ret = OPENSSL_malloc(sizeof(*ret));
      |           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1948
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6ef000 ret>
    def_stmt ret_3 = malloc (16);
    version:3
    ptr-info 0x7fc08a6e9948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e95d0 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:CONF_new========= [0m
[40;44m =======node_fun:CONF_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CONF_free  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_free========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_free========= [0m
[40;33m =======POP node_fun stack:lh_CONF_VALUE_free========= [0m
[40;42m =======pre_check_funciton:CONF_free========= [0m
[40;42m =======start_check_funciton:CONF_free========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>
# VUSE <.MEM_6(D)>
_2 = conf_4(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘CONF_free’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
lh_CONF_VALUE_free (_2);
lh_CONF_VALUE_free (_2);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:247:9: warning: use location
  247 |         lh_CONF_VALUE_free(conf->data);
      |         ^
this stmt is child function---lh_CONF_VALUE_free-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_free 
[40;44m =======trace_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_19>
free (n_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:123:13: warning: use location
  123 |             OPENSSL_free(n);
      |             ^
# .MEM_23 = VDEF <.MEM_20>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_20>
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_24 = VDEF <.MEM_23>
free (lh_12(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:128:5: warning: use location
  128 |     OPENSSL_free(lh);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1af8
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_4(D)->data;
    version:2
    ptr-info 0x7fc08a6e9978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;44m =======node_fun:_CONF_new_data========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘_CONF_new_data’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_8 = malloc (176);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:16: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
In function ‘_CONF_new_data’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = malloc (8);
In function ‘_CONF_new_data’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:19: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9780 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 176>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9798 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :888========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = conf_6(D)->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
if (_3 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = conf_6(D)->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:13: warning: use location
  234 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
  231 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:231:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 2 level :0========  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1cf0
    type <pointer_type 0x7fc08a6dbd20
        type <record_type 0x7fc08a6dbc78 CONF_VALUE BLK
            size <integer_cst 0x7fc08abc7078 constant 192>
            unit-size <integer_cst 0x7fc08abc7048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6dbbd0 fields <field_decl 0x7fc08a6dd2f8 section> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6dbd20>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7fc08a6e99c0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:20: warning: use location
  235 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:17: warning: use location
  236 |         if (conf->data == NULL)
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:235:22: warning: Use after free error!: free location 
  235 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
if (_3 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:236:12: warning: use location
  236 |         if (conf->data == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:234:8: warning: use location
  234 |     if (conf->data == NULL) {
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;44m =======node_fun:app_RAND_write========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path app_RAND_write  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:RAND_write_file========= [0m
[40;33m =======POP node_fun stack:RAND_write_file========= [0m
[40;42m =======pre_check_funciton:app_RAND_write========= [0m
[40;42m =======start_check_funciton:app_RAND_write========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08abb1a68
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
   
    def_stmt _2 = save_rand_file;
    version:2
    ptr-info 0x7fc08a6e9a20>
# VUSE <.MEM_5(D)>
_2 = save_rand_file;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
In function ‘app_RAND_write’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_3 = RAND_write_file (_2);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^
this stmt is child function---RAND_write_file-----

 ================== trace ================== 
trace fucntion name:RAND_write_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_3 == -1)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |        ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
Cond in fucntion app_RAND_write basic block 3
 ================== possible direct basic block ================= 
from app_RAND_write basic block 4
 ================== possible direct basic block ================= 
from app_RAND_write basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08abb1a68
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
   
    def_stmt _2 = save_rand_file;
    version:2
    ptr-info 0x7fc08a6e9a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc08ada5e60
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    constant
    arg:0 <array_ref 0x7fc08abb3118 type <integer_type 0x7fc08a6d2a80 char>
       
        arg:0 <string_cst 0x7fc08a6f20f0 type <array_type 0x7fc08a6ded20>
            readonly constant static "RAND_write_file error\000">
        arg:1 <integer_cst 0x7fc08aba9f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:app_RAND_write========= [0m
[40;44m =======node_fun:app_RAND_load_conf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path app_RAND_load_conf  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_get_string  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_string  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_string========= [0m
[40;42m =======start_check_funciton:_CONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>
# VUSE <.MEM_28>
_1 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘app_RAND_load_conf’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
if (v_19 != 0B)
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
  180 |             if (v != NULL)
      |                ^
if (v_19 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
Cond in fucntion _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 6
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>
# VUSE <.MEM_25>
_2 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘app_RAND_load_conf’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
if (v_14 != 0B)
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
  187 |         if (v != NULL)
      |            ^
if (v_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
Cond in fucntion _CONF_get_string basic block 7
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 8
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_9 = getenv (name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:192:17: warning: use location
  192 |         return (getenv(name));
      |                 ^
this stmt is child function---getenv-----

 ================== trace ================== 
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘app_RAND_load_conf’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
vv.section = section_10(D);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:178:24: warning: use location
  178 |             vv.section = (char *)section;
      |                        ^
if (section_10(D) != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
  176 |         if (section != NULL) {
      |            ^
if (section_10(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
Cond in fucntion _CONF_get_string basic block 4
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_string========= [0m
[40;42m =======pre_check_funciton:NCONF_get_string========= [0m
[40;42m =======start_check_funciton:NCONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:197:15: warning: use location
  197 |     char *s = _CONF_get_string(conf, group, name);
      |               ^
this stmt is child function---_CONF_get_string-----

 ================== trace ================== 
trace fucntion name:_CONF_get_string 
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <s_7(2), 0B(3)>
bb index := 4
# VUSE <.MEM_54>
return ret_19;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <s_7(2), 0B(3)>
In function ‘app_RAND_load_conf’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (s_7 != 0B)
In function ‘app_RAND_load_conf’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
  199 |     if (s)
      |        ^
if (s_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
Cond in fucntion NCONF_get_string basic block 2
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 4
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_get_string========= [0m
[40;42m =======pre_check_funciton:app_RAND_load_conf========= [0m
[40;42m =======start_check_funciton:app_RAND_load_conf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:210:28: warning: use location
  210 |     const char *randfile = NCONF_get_string(c, section, "RANDFILE");
      |                            ^
this stmt is child function---NCONF_get_string-----

 ================== trace ================== 
trace fucntion name:NCONF_get_string 
[40;44m =======trace_function_path NCONF_get_string  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:NCONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;46m =======add node_fun stack:_CONF_get_string========= [0m
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
save_rand_file = randfile_7;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
save_rand_file = randfile_7;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:217:24: warning: use location
  217 |         save_rand_file = randfile;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = save_rand_file;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = save_rand_file;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:24: warning: use location
  222 |     if (save_rand_file == NULL)
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
  222 |     if (save_rand_file == NULL)
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:222:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 2
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_2 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = save_rand_file;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
_3 = RAND_write_file (_2);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_3 = RAND_write_file (_2);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:9: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |         ^
this stmt is child function---RAND_write_file-----

 ================== trace ================== 
trace fucntion name:RAND_write_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_3 == -1)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
  224 |     if (RAND_write_file(save_rand_file) == -1) {
      |        ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:224:8: warning: use location
Cond in fucntion app_RAND_load_conf basic block 3
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 4
 ================== possible direct basic block ================= 
from app_RAND_load_conf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_1 = save_rand_file;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = save_rand_file;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:216:24: warning: use location
  216 |     if (save_rand_file == NULL)
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f31b0
    type <pointer_type 0x7fc08a6de7e0
        type <record_type 0x7fc08a6de738 CONF TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de7e0>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1480 c>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc08a6e9a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:app_RAND_load_conf========= [0m
[40;44m =======node_fun:NCONF_get_string========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path NCONF_get_string  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_string  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_string========= [0m
[40;42m =======start_check_funciton:_CONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>
# VUSE <.MEM_28>
_1 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘NCONF_get_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
if (v_19 != 0B)
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
  180 |             if (v != NULL)
      |                ^
if (v_19 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
Cond in fucntion _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 6
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>
# VUSE <.MEM_25>
_2 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘NCONF_get_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
if (v_14 != 0B)
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
  187 |         if (v != NULL)
      |            ^
if (v_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
Cond in fucntion _CONF_get_string basic block 7
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 8
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_9 = getenv (name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:192:17: warning: use location
  192 |         return (getenv(name));
      |                 ^
this stmt is child function---getenv-----

 ================== trace ================== 
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
In function ‘NCONF_get_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
vv.section = section_10(D);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:178:24: warning: use location
  178 |             vv.section = (char *)section;
      |                        ^
if (section_10(D) != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
  176 |         if (section != NULL) {
      |            ^
if (section_10(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
Cond in fucntion _CONF_get_string basic block 4
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
In function ‘NCONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_string========= [0m
[40;42m =======pre_check_funciton:NCONF_get_string========= [0m
[40;42m =======start_check_funciton:NCONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:197:15: warning: use location
  197 |     char *s = _CONF_get_string(conf, group, name);
      |               ^
this stmt is child function---_CONF_get_string-----

 ================== trace ================== 
trace fucntion name:_CONF_get_string 
[40;44m =======trace_function_path _CONF_get_string  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_string========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;46m =======add node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <s_7(2), 0B(3)>
bb index := 4
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <s_7(2), 0B(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (s_7 != 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (s_7 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
  199 |     if (s)
      |        ^
if (s_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:199:8: warning: use location
Cond in fucntion NCONF_get_string basic block 2
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 4
 ================== possible direct basic block ================= 
from NCONF_get_string basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3438
    type <pointer_type 0x7fc08a6de1f8
        type <record_type 0x7fc08a6de150 CONF readonly TI
            size <integer_cst 0x7fc08aba9c00 constant 128>
            unit-size <integer_cst 0x7fc08aba9c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6de0a8 fields <field_decl 0x7fc08a6dd428 meth_data> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de1f8>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1580 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fc08a6e9ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_get_string========= [0m
[40;44m =======node_fun:_CONF_get_string========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _CONF_get_string  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘_CONF_get_string’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_string========= [0m
[40;42m =======start_check_funciton:_CONF_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>
# VUSE <.MEM_28>
_1 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_19 != 0B)
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
if (v_19 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
  180 |             if (v != NULL)
      |                ^
if (v_19 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:180:16: warning: use location
Cond in fucntion _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 6
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3630
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = conf_6(D)->data;
    version:1
    ptr-info 0x7fc08a6e9b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>
# VUSE <.MEM_25>
_2 = conf_6(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_15 = v_14->value;
bb index := 8
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================
_15 = v_14->value;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:188:22: warning: use location
  188 |             return (v->value);
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_20 = v_19->value;
bb index := 6
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================
_20 = v_19->value;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:181:26: warning: use location
  181 |                 return (v->value);
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_14 != 0B)
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
if (v_14 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
  187 |         if (v != NULL)
      |            ^
if (v_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:187:12: warning: use location
Cond in fucntion _CONF_get_string basic block 7
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 8
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3678
    type <pointer_type 0x7fc08a6de000
        type <record_type 0x7fc08a6dbf18 lhash_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6de000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = conf_6(D)->data;
    version:2
    ptr-info 0x7fc08a6e9b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_9 = getenv (name_5(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:192:17: warning: use location
  192 |         return (getenv(name));
      |                 ^
this stmt is child function---getenv-----

 ================== trace ================== 
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
bb index := 10
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
vv.name = name_5(D);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
vv.name = name_5(D);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:185:17: warning: use location
  185 |         vv.name = (char *)name;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
vv.section = section_10(D);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
vv.section = section_10(D);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:178:24: warning: use location
  178 |             vv.section = (char *)section;
      |                        ^
if (section_10(D) != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
  176 |         if (section != NULL) {
      |            ^
if (section_10(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:176:12: warning: use location
Cond in fucntion _CONF_get_string basic block 4
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 5
 ================== possible direct basic block ================= 
from _CONF_get_string basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
bb index := 5
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:179:17: warning: use location
  179 |             v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                 ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
bb index := 7
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:186:13: warning: use location
  186 |         v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |             ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3708
    type <pointer_type 0x7fc08a6d2b28
        type <integer_type 0x7fc08a6d2a80 char readonly QI
            size <integer_cst 0x7fc08aba9ca8 constant 8>
            unit-size <integer_cst 0x7fc08aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe3f0 precision:8 min <integer_cst 0x7fc08a6c9708 -128> max <integer_cst 0x7fc08a6c96f0 127>
            pointer_to_this <pointer_type 0x7fc08a6d2b28>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08a6dea80>>
    var <parm_decl 0x7fc08a6e1800 name>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fc08a6e9b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_string========= [0m
[40;44m =======node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
In function ‘lh_CONF_VALUE_retrieve’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = &lh_8(D)->num_retrieve;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:27: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |                           ^
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = &lh_8(D)->num_retrieve_miss;
bb index := 3
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_2 = &lh_8(D)->num_retrieve_miss;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:27: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
CRYPTO_atomic_add (_2, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
rn_12 = getrn (lh_8(D), data_10(D), &hash);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
rn_12 = getrn (lh_8(D), data_10(D), &hash);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:155:10: warning: use location
  155 |     rn = getrn(lh, data, &hash);
      |          ^
this stmt is child function---getrn-----

 ================== trace ================== 
trace fucntion name:getrn 
[40;44m =======trace_function_path getrn  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;46m =======add node_fun stack:CRYPTO_atomic_add========= [0m
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with lh ========= [0m
[40;36m ======= relate stmt argument:lh ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:16: warning: use location
  161 |         ret = (*rn)->data;
      |                ^
ret_13 = _3->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:161:13: warning: use location
  161 |         ret = (*rn)->data;
      |             ^
_5 = PHI <0B(3), ret_13(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17>
_1 = *rn_12;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = *rn_12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:9: warning: use location
  157 |     if (*rn == NULL) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
  157 |     if (*rn == NULL) {
      |        ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:157:8: warning: use location
Cond in fucntion lh_CONF_VALUE_retrieve basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_retrieve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
lh_8(D)->error = 0;
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
lh_8(D)->error = 0;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:154:15: warning: use location
  154 |     lh->error = 0;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3d80
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc08a6e1880 lh>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc08a6e9c90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>
_2 = &lh_8(D)->num_retrieve_miss;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 3
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
# .MEM_19 = VDEF <.MEM_17>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:158:9: warning: use location
  158 |         CRYPTO_atomic_add(&lh->num_retrieve_miss, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3c60
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_8(D)->num_retrieve_miss;
    version:2
    ptr-info 0x7fc08a6e9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>
_4 = &lh_8(D)->num_retrieve;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
  162 |         CRYPTO_atomic_add(&lh->num_retrieve, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_17>
CRYPTO_atomic_add (_4, 1, &scratch);
CRYPTO_atomic_add (_4, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:162:9: warning: use location
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6f3cf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &lh_8(D)->num_retrieve;
    version:4
    ptr-info 0x7fc08a6e9c60>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======node_fun:lh_CONF_VALUE_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
ret_8 = malloc (176);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_8 = malloc (176);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:16: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc1f8
    type <pointer_type 0x7fc08a6db888
        type <record_type 0x7fc08a6db7e0 OPENSSL_LHASH BLK
            size <integer_cst 0x7fc08ac7e0a8 constant 1408>
            unit-size <integer_cst 0x7fc08a6c9918 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08a6db738 fields <field_decl 0x7fc08a6dd130 b> context <translation_unit_decl 0x7fc08abb4168 ./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c>
            pointer_to_this <pointer_type 0x7fc08a6db888>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc08a6eff30 ret>
    def_stmt ret_8 = malloc (176);
    version:8
    ptr-info 0x7fc08a6e9d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
ret_8->b = _1;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
ret_8->b = _1;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:17: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), ret_8(3), 0B(4)>
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
  143 |     OPENSSL_free(ret);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_3 = ret_8->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_3 = ret_8->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = ret_8->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_2 = ret_8->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:13: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_36 = _9 + _12;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
n1_37 = *ret_36;
bb index := 4
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^
if (n1_20 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== trace ================== 
trace fucntion name:cf 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_51>
_14 = n1_20->hash;
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 != hash_29)
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^
if (_14 != hash_29)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_8 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
  135 |     if ((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)
      |        ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:135:8: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 5
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = malloc (8);
bb index := 3
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================
_1 = malloc (8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:19: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc0d8
    type <pointer_type 0x7fc08abc5000
        type <void_type 0x7fc08abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fc08abc5000>>
        public unsigned DI
        size <integer_cst 0x7fc08aba9bb8 constant 64>
        unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc08abca9d8>>
   
    def_stmt _1 = malloc (8);
    version:1
    ptr-info 0x7fc08a6e9cf0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: use location
  142 |     OPENSSL_free(ret->b);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
_4 = PHI <0B(2), ret_8(3), 0B(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_1 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:120:15: warning: use location
  120 |         n = lh->b[i];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_20>
_6 = lh_12(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:127:5: warning: use location
  127 |     OPENSSL_free(lh->b);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
_9 = lh_26(D)->b;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:15: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_36 = _9 + _12;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:95:9: warning: use location
   95 |     ret = &(lh->b[(int)nn]);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_19 = PHI <ret_36(4), ret_18(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_50>
n1_37 = *ret_36;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:13: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
n1_20 = PHI <n1_37(4), n1_43(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (n1_20 != 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:24: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_44>
n1_43 = n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:96:36: warning: use location
   96 |     for (n1 = *ret; n1 != NULL; n1 = n1->next) {
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_41 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:105:13: warning: use location
  105 |         ret = &(n1->next);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_18 = PHI <ret_42(6), ret_41(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_52>
_16 = n1_20->data;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:18: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# .MEM_53 = VDEF <.MEM_52>
_17 = cf_35 (_16, data_27(D));
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:13: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_17 == 0)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:103:12: warning: use location
  103 |         if (cf(n1->data, data) == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
ret_42 = &n1_20->next;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:99:17: warning: use location
   99 |             ret = &(n1->next);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
# VUSE <.MEM_51>
_14 = n1_20->hash;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:15: warning: use location
   98 |         if (n1->hash != hash) {
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14>
free (ret_8);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:143:5: warning: Use after free error!: free location 
  143 |     OPENSSL_free(ret);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (_3);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:142:5: warning: Use after free error!: free location 
  142 |     OPENSSL_free(ret->b);
      |     ^
if (_14 != hash_29)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:98:12: warning: use location
   98 |         if (n1->hash != hash) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 3
if (_2 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:137:8: warning: use location
  137 |     if ((ret->b = OPENSSL_zalloc(sizeof(*ret->b) * 1)) == NULL)
      |        ^
	relate logic:= 1
succs:= 3
// predicted unlikely by goto predictor.
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:263:9: warning: use location
  263 |         goto end;
      |         ^
	relate logic:= 1
succs:= 2
if (conf_5 == 0B)
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:262:8: warning: use location
  262 |     if ((conf = CONF_new()) == NULL)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9780 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 176>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc08a6e9798 type <integer_type 0x7fc08abbe7e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======node_fun:lh_CONF_VALUE_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lh_CONF_VALUE_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_free========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_free========= [0m
[40;33m =======POP node_fun stack:lh_CONF_VALUE_free========= [0m
[40;44m =======node_fun:getrn========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path getrn  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CRYPTO_atomic_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>
_2 = &lh_26(D)->num_hash_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
In function ‘getrn’:
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
  271 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:271:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_5>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_8>
return;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_30>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_21>
return;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_21>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
bb index := 2
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
# .MEM_49 = VDEF <.MEM_48>
CRYPTO_atomic_add (_2, 1, &scratch);
CRYPTO_atomic_add (_2, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:87:5: warning: use location
   87 |     CRYPTO_atomic_add(&lh->num_hash_calls, 1, &scratch);
      |     ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fc9d8
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &lh_26(D)->num_hash_calls;
    version:2
    ptr-info 0x7fc08a6e9e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>
_13 = &lh_26(D)->num_hash_comps;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
bb index := 5
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
  107 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_54>
return ret_19;
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:107:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_51 = VDEF <.MEM_45>
CRYPTO_atomic_add (_13, 1, &scratch);
CRYPTO_atomic_add (_13, 1, &scratch);
./benchmarks/openssl/use_after_free_1/openssl_uaf_1.c:97:9: warning: use location
   97 |         CRYPTO_atomic_add(&lh->num_hash_comps, 1, &scratch);
      |         ^
this stmt is child function---CRYPTO_atomic_add-----

 ================== trace ================== 
trace fucntion name:CRYPTO_atomic_add 
[40;44m =======trace_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:CRYPTO_atomic_add========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc08a6fccf0
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = &lh_26(D)->num_hash_comps;
    version:13
    ptr-info 0x7fc08a6e9e58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc08a6fcd80
    type <pointer_type 0x7fc08a6d2c78
        type <integer_type 0x7fc08abbe7e0 long unsigned int public unsigned DI
            size <integer_cst 0x7fc08aba9bb8 constant 64>
            unit-size <integer_cst 0x7fc08aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc08abbe738 precision:64 min <integer_cst 0x7fc08aba9e88 0> max <integer_cst 0x7fc08abaa500 18446744073709551615>
            pointer_to_this <pointer_type 0x7fc08a6d2c78>>
        public unsigned DI size <integer_cst 0x7fc08aba9bb8 64> unit-size <integer_cst 0x7fc08aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &lh_26(D)->num_comp_calls;
    version:15
    ptr-info 0x7fc08a6e9e70>
_15 = &lh_26(D)->num_comp_calls;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:getrn========= [0m
[40;44m =======node_fun:CRYPTO_atomic_add========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CRYPTO_atomic_add  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:CRYPTO_atomic_add========= [0m
[40;42m =======start_check_funciton:CRYPTO_atomic_add========= [0m
[40;33m =======POP node_fun stack:CRYPTO_atomic_add========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
foo ();
app_RAND_write ();
return 0;

=======Mapping node_fun:foo=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
conf_5 = CONF_new ();
if (conf_5 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
// predicted unlikely by goto predictor.
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312327]:
conf_5->data = 0B;
_1 = _CONF_new_data (conf_5);
if (_1 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 548677266]:
// predicted unlikely by goto predictor.
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 524635062]:
app_RAND_load_conf (conf_5, "section");

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
end:
CONF_free (conf_5);
return;

=======Mapping node_fun:CONF_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_3 = malloc (16);
return ret_3;

=======Mapping node_fun:CONF_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (conf_4(D) == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = conf_4(D)->data;
if (_1 == 0B)
  goto <bb 5>; [30.95%]
else
  goto <bb 4>; [69.05%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 607296081]:
_2 = conf_4(D)->data;
lh_CONF_VALUE_free (_2);
free (conf_4(D));

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
return;

=======Mapping node_fun:_CONF_new_data=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (conf_6(D) == 0B)
  goto <bb 6>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = conf_6(D)->data;
if (_1 == 0B)
  goto <bb 4>; [17.43%]
else
  goto <bb 6>; [82.57%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 153297186]:
_2 = lh_CONF_VALUE_new ();
conf_6(D)->data = _2;
_3 = conf_6(D)->data;
if (_3 == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 6>; [81.91%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 27731461]:

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _4 = PHI <0(2), 1(3), 1(4), 0(5)>
return _4;

=======Mapping node_fun:app_RAND_write=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = save_rand_file;
if (_1 == 0B)
  goto <bb 5>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_2 = save_rand_file;
_3 = RAND_write_file (_2);
if (_3 == -1)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 150063150]:
__builtin_puts (&"RAND_write_file error"[0]);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
return;

=======Mapping node_fun:app_RAND_load_conf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
randfile_7 = NCONF_get_string (c_4(D), section_5(D), "RANDFILE");
if (randfile_7 == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = save_rand_file;
if (_1 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 5>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 263850576]:
save_rand_file = randfile_7;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
return;

=======Mapping node_fun:NCONF_get_string=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
s_7 = _CONF_get_string (conf_3(D), group_4(D), name_5(D));
if (s_7 != 0B)
  goto <bb 4>; [54.59%]
else
  goto <bb 3>; [45.41%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 487586160]:

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <s_7(2), 0B(3)>
return _1;

=======Mapping node_fun:_CONF_get_string=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (name_5(D) == 0B)
  goto <bb 10>; [8.27%]
else
  goto <bb 3>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 984943377]:
if (conf_6(D) != 0B)
  goto <bb 4>; [90.19%]
else
  goto <bb 9>; [9.81%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 888320433]:
if (section_10(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 621824306]:
vv.name = name_5(D);
vv.section = section_10(D);
_1 = conf_6(D)->data;
v_19 = lh_CONF_VALUE_retrieve (_1, &vv);
if (v_19 != 0B)
  goto <bb 6>; [85.10%]
else
  goto <bb 10>; [14.90%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 529172486]:
_20 = v_19->value;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 266496127]:
vv.section = "default";
vv.name = name_5(D);
_2 = conf_6(D)->data;
v_14 = lh_CONF_VALUE_retrieve (_2, &vv);
if (v_14 != 0B)
  goto <bb 8>; [85.10%]
else
  goto <bb 10>; [14.90%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 226788205]:
_15 = v_14->value;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 96622944]:
_9 = getenv (name_5(D));

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _3 = PHI <0B(2), 0B(5), _20(6), 0B(7), _15(8), _9(9)>
vv ={v} {CLOBBER};
return _3;

=======Mapping node_fun:lh_CONF_VALUE_retrieve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
lh_8(D)->error = 0;
rn_12 = getrn (lh_8(D), data_10(D), &hash);
_1 = *rn_12;
if (_1 == 0B)
  goto <bb 3>; [8.27%]
else
  goto <bb 4>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 88798448]:
_2 = &lh_8(D)->num_retrieve_miss;
CRYPTO_atomic_add (_2, 1, &scratch);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 984943377]:
_3 = *rn_12;
ret_13 = _3->data;
_4 = &lh_8(D)->num_retrieve;
CRYPTO_atomic_add (_4, 1, &scratch);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _5 = PHI <0B(3), ret_13(4)>
hash ={v} {CLOBBER};
scratch ={v} {CLOBBER};
return _5;

=======Mapping node_fun:lh_CONF_VALUE_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_8 = malloc (176);
if (ret_8 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = malloc (8);
ret_8->b = _1;
_2 = ret_8->b;
if (_2 == 0B)
  goto <bb 4>; [4.25%]
else
  goto <bb 5>; [95.75%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 45615770]:
// predicted unlikely by goto predictor.
_3 = ret_8->b;
free (_3);
free (ret_8);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _4 = PHI <0B(2), ret_8(3), 0B(4)>
return _4;

=======Mapping node_fun:lh_CONF_VALUE_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 17822076]:
if (lh_12(D) == 0B)
  goto <bb 9>; [18.09%]
else
  goto <bb 10>; [81.91%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 14598062]:
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 118111600]:
_1 = lh_12(D)->b;
_2 = (long unsigned int) i_7;
_3 = _2 * 8;
_4 = _1 + _3;
n_16 = *_4;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630226]:
nn_18 = n_8->next;
free (n_8);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# n_8 = PHI <n_16(3), nn_18(4)>
if (n_8 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 6>; [11.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 118111600]:
i_17 = i_7 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 132709663]:
# i_7 = PHI <0(10), i_17(6)>
_5 = lh_12(D)->num_nodes;
if (_5 > i_7)
  goto <bb 3>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 14598063]:
_6 = lh_12(D)->b;
free (_6);
free (lh_12(D));

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 17822076]:
return;

=======Mapping node_fun:getrn=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 78030428]:
_1 = lh_26(D)->hash;
hash_29 = _1 (data_27(D));
_2 = &lh_26(D)->num_hash_calls;
CRYPTO_atomic_add (_2, 1, &scratch);
*rhash_31(D) = hash_29;
_3 = lh_26(D)->pmax;
_4 = (long unsigned int) _3;
nn_33 = hash_29 % _4;
_5 = lh_26(D)->p;
_6 = (long unsigned int) _5;
if (_6 > nn_33)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 39015214]:
_7 = lh_26(D)->num_alloc_nodes;
_8 = (long unsigned int) _7;
nn_34 = hash_29 % _8;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 78030428]:
# nn_21 = PHI <nn_33(2), nn_34(3)>
cf_35 = lh_26(D)->comp;
_9 = lh_26(D)->b;
_10 = (int) nn_21;
_11 = (long unsigned int) _10;
_12 = _11 * 8;
ret_36 = _9 + _12;
n1_37 = *ret_36;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_13 = &lh_26(D)->num_hash_comps;
CRYPTO_atomic_add (_13, 1, &scratch);
_14 = n1_20->hash;
if (_14 != hash_29)
  goto <bb 6>; [66.00%]
else
  goto <bb 7>; [34.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 669692774]:
ret_42 = &n1_20->next;
// predicted unlikely by continue predictor.
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 344993252]:
_15 = &lh_26(D)->num_comp_calls;
CRYPTO_atomic_add (_15, 1, &scratch);
_16 = n1_20->data;
_17 = cf_35 (_16, data_27(D));
if (_17 == 0)
  goto <bb 11>; [5.50%]
else
  goto <bb 8>; [94.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 326018623]:
ret_41 = &n1_20->next;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 995711397]:
# ret_18 = PHI <ret_42(6), ret_41(8)>
n1_43 = n1_20->next;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# ret_19 = PHI <ret_36(4), ret_18(9)>
# n1_20 = PHI <n1_37(4), n1_43(9)>
if (n1_20 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 78030429]:
scratch ={v} {CLOBBER};
return ret_19;

=======Mapping node_fun:CRYPTO_atomic_add=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = *val_5(D);
_2 = _1 + amount_6(D);
*val_5(D) = _2;
_3 = *val_5(D);
*ret_8(D) = _3;
return 1;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 6 [0m
[40;34m    find Entry point : 17 [0m
[40;34m    used_stmt array stack totalsize of : 0.003056 mb[0m
[40;34m    collect time: : 0.000296 s [0m
[40;34m    algorithm time: 0.359758 s [0m
[40;34m    gimple stmt count : : 148 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt                           |      |      |      |      |     -0.7%|     -0.3%|
ch                               |      |      |      |      |     +0.9%|     -0.3%|
cplxlower                        |      |      |      |      |     +1.6%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -2.0%|     -0.8%|
copyprop                         |      |      |      |      |     -2.1%|     -0.8%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -65.1%|    -84.6%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |   +186.7%|   +547.7%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +73.4%|    +46.6%|
into_cfglayout                   |      |      |      |      |     -1.0%|     -0.4%|
jump                             |      |      |      |      |     -1.0%|     -0.4%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.0%|     -1.5%|
ce1                              |      |      |      |      |     -1.0%|     -1.5%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |          |     -0.2%|
loop2_done                       |      |      |      |      |          |     -0.2%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.1%|     -0.1%|
init-regs                        |      |      |      |      |     -0.1%|     -0.1%|
combine                          |      |      |      |      |     +3.8%|     +5.0%|
ce2                              |      |      |      |      |     +3.7%|     +4.8%|
outof_cfglayout                  |      |      |      |      |     +0.8%|     +0.4%|
split1                           |      |      |      |      |     +0.8%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     +0.1%|     +0.0%|
reload                           |      |      |      |      |    -10.2%|    -12.9%|
postreload                       |      |      |      |      |    -11.5%|    -14.9%|
split2                           |      |      |      |      |     +0.6%|     +0.1%|
cmpelim                          |      |      |      |      |     +0.6%|     +0.1%|
pro_and_epilogue                 |      |      |      |      |    +11.2%|    +11.0%|
dse2                             |      |      |      |      |    +10.1%|     +9.9%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.1%|     -0.2%|
rtl_dce                          |      |      |      |      |     -0.1%|     -0.2%|
bbro                             |      |      |      |      |     +0.7%|     +0.1%|
split4                           |      |      |      |      |     +0.7%|     +0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/cchwk4Qf.ltrans0.ltrans.o: in function `app_RAND_write':
<artificial>:(.text+0x348): undefined reference to `RAND_write_file'
collect2: error: ld returned 1 exit status
