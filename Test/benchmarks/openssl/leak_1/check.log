../Compiler/newplugin.so 11.2.0 
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘test_ptr’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: implicit declaration of function ‘test_fail_message’ [-Wimplicit-function-declaration]
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘ASN1_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  133 |             len = strlen(data);
      |                   ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssl.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  133 |             len = strlen(data);
      |                   ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: implicit declaration of function ‘OPENSSL_realloc’; did you mean ‘OPENSSL_malloc’? [-Wimplicit-function-declaration]
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^~~~~~~~~~~~~~~
      |                     OPENSSL_malloc
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: assignment to ‘unsigned char *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  145 |         memcpy(str->data, data, len);
      |         ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘asn1_string_set_uint64’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:158:11: warning: implicit declaration of function ‘asn1_put_uint64’ [-Wimplicit-function-declaration]
  158 |     off = asn1_put_uint64(tbuf, r);
      |           ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: implicit declaration of function ‘is_utc’ [-Wimplicit-function-declaration]
  179 |         if (is_utc(ts->tm_year))
      |             ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: implicit declaration of function ‘ASN1_STRING_new’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^~~~~~~~~~~~~~~
      |                ASN1_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: assignment to ‘ASN1_TIME *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: implicit declaration of function ‘BIO_snprintf’; did you mean ‘vsnprintf’? [-Wimplicit-function-declaration]
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^~~~~~~~~~~~
      |                        vsnprintf
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: implicit declaration of function ‘ASN1_STRING_free’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
  217 |         ASN1_STRING_free(tmps);
      |         ^~~~~~~~~~~~~~~~
      |         ASN1_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: implicit declaration of function ‘OPENSSL_gmtime’; did you mean ‘OPENSSL_free’? [-Wimplicit-function-declaration]
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^~~~~~~~~~~~~~
      |          OPENSSL_free
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:8: warning: assignment to ‘struct tm *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |        ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: implicit declaration of function ‘OPENSSL_gmtime_adj’ [-Wimplicit-function-declaration]
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘X509_NAME_add_entry_by_NID’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: implicit declaration of function ‘X509_NAME_ENTRY_create_by_NID’; did you mean ‘X509_NAME_add_entry_by_NID’? [-Wimplicit-function-declaration]
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          X509_NAME_add_entry_by_NID
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:8: warning: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |        ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: implicit declaration of function ‘X509_NAME_add_entry’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^~~~~~~~~~~~~~~~~~~
      |           X509_NAME_ENTRY
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: implicit declaration of function ‘X509_NAME_ENTRY_free’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^~~~~~~~~~~~~~~~~~~~
      |     X509_NAME_ENTRY
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘OCSP_basic_add1_status’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_new_null’ [-Wimplicit-function-declaration]
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: assignment to ‘OCSP_SINGLERESP *’ {aka ‘struct ocsp_single_response_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: implicit declaration of function ‘OCSP_CERTID_dup’ [-Wimplicit-function-declaration]
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: assignment to ‘OCSP_CERTID *’ {aka ‘struct ocsp_cert_id_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_push’ [-Wimplicit-function-declaration]
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:280:5: warning: implicit declaration of function ‘OCSP_SINGLERESP_free’ [-Wimplicit-function-declaration]
  280 |     OCSP_SINGLERESP_free(single);
      |     ^~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: implicit declaration of function ‘OCSP_BASICRESP_new’ [-Wimplicit-function-declaration]
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: initialization of ‘OCSP_BASICRESP *’ {aka ‘struct ocsp_basic_response_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:46: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                                              ^~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: implicit declaration of function ‘X509_NAME_new’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^~~~~~~~~~~~~
      |                       X509_NAME
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: implicit declaration of function ‘ASN1_BIT_STRING_new’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^~~~~~~~~~~~~~~~~~~
      |                            ASN1_BIT_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: initialization of ‘ASN1_BIT_STRING *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: implicit declaration of function ‘ASN1_INTEGER_new’; did you mean ‘V_ASN1_INTEGER’? [-Wimplicit-function-declaration]
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^~~~~~~~~~~~~~~~
      |                            V_ASN1_INTEGER
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: initialization of ‘ASN1_INTEGER *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: implicit declaration of function ‘OCSP_cert_id_new’ [-Wimplicit-function-declaration]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:28: warning: implicit declaration of function ‘EVP_sha256’; did you mean ‘LN_sha256’? [-Wimplicit-function-declaration]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |                            ^~~~~~~~~~
      |                            LN_sha256
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: assignment to ‘OCSP_CERTID *’ {aka ‘struct ocsp_cert_id_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: implicit declaration of function ‘ASN1_TIME_free’; did you mean ‘ASN1_TIME_set’? [-Wimplicit-function-declaration]
  310 |     ASN1_TIME_free(thisupd);
      |     ^~~~~~~~~~~~~~
      |     ASN1_TIME_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: implicit declaration of function ‘ASN1_BIT_STRING_free’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
  312 |     ASN1_BIT_STRING_free(key);
      |     ^~~~~~~~~~~~~~~~~~~~
      |     ASN1_BIT_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: implicit declaration of function ‘ASN1_INTEGER_free’ [-Wimplicit-function-declaration]
  313 |     ASN1_INTEGER_free(serial);
      |     ^~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: implicit declaration of function ‘OCSP_CERTID_free’ [-Wimplicit-function-declaration]
  314 |     OCSP_CERTID_free(cid);
      |     ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: implicit declaration of function ‘X509_NAME_free’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
  315 |     X509_NAME_free(name);
      |     ^~~~~~~~~~~~~~
      |     X509_NAME
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:23: warning: implicit declaration of function ‘get_cert_and_key’ [-Wimplicit-function-declaration]
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |                       ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:23: warning: implicit declaration of function ‘OCSP_basic_sign’ [-Wimplicit-function-declaration]
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |                       ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:56: warning: implicit declaration of function ‘EVP_sha1’ [-Wimplicit-function-declaration]
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |                                                        ^~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: implicit declaration of function ‘OCSP_BASICRESP_free’ [-Wimplicit-function-declaration]
  334 |     OCSP_BASICRESP_free(bs);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:20: warning: implicit declaration of function ‘OCSP_resp_get0_signer’ [-Wimplicit-function-declaration]
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |                    ^~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: implicit declaration of function ‘TEST_int_eq’ [-Wimplicit-function-declaration]
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:25: warning: implicit declaration of function ‘X509_cmp’ [-Wimplicit-function-declaration]
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |                         ^~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: implicit declaration of function ‘X509_free’ [-Wimplicit-function-declaration]
  347 |     X509_free(signer);
      |     ^~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: implicit declaration of function ‘EVP_PKEY_free’ [-Wimplicit-function-declaration]
  348 |     EVP_PKEY_free(key);
      |     ^~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  1298k ( 33%)
 phase parsing                      :   0.21 ( 95%)   0.04 ( 80%)   0.25 ( 89%)  2296k ( 58%)
 phase opt and generate             :   0.01 (  5%)   0.01 ( 20%)   0.02 (  7%)   337k (  9%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 ( 20%)   0.02 (  7%)   162k (  4%)
 lto stream compression             :   0.00 (  0%)   0.01 ( 20%)   0.01 (  4%)     0  (  0%)
 preprocessing                      :   0.02 (  9%)   0.01 ( 20%)   0.01 (  4%)  1222k ( 31%)
 lexical analysis                   :   0.01 (  5%)   0.01 ( 20%)   0.02 (  7%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.02 (  7%)   804k ( 20%)
 parser function body               :   0.18 ( 82%)   0.02 ( 40%)   0.20 ( 71%)   105k (  3%)
 plugin execution                   :   0.01 (  5%)   0.00 (  0%)   0.01 (  4%)     0  (  0%)
 TOTAL                              :   0.22          0.05          0.28         3942k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 95%)
 TOTAL                              :   0.00          0.00          0.01         2261k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=5
	next_branch :=3
node:= 3 
 	next_branch :=5
	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=13
node:= 6 
 	next_branch :=8
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=13
node:= 9 
 	next_branch :=11
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=13
node:= 12 
 	next_branch :=13
=======node_fun:make_dummy_resp=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=6
	next_branch :=5
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=22
node:= 7 
 	next_branch :=20
	next_branch :=8
node:= 8 
 	next_branch :=20
	next_branch :=9
node:= 9 
 	next_branch :=20
	next_branch :=10
node:= 10 
 	next_branch :=20
	next_branch :=11
node:= 11 
 	next_branch :=12
	next_branch :=14
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=18
node:= 14 
 	next_branch :=15
	next_branch :=16
node:= 15 
 	next_branch :=18
node:= 16 
 	next_branch :=17
	next_branch :=19
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 	next_branch :=22
node:= 21 
 	next_branch :=22
=======node_fun:ASN1_TIME_adj=========
node:= 2 
 	next_branch :=17
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=17
	next_branch :=5
node:= 5 
 	next_branch :=7
	next_branch :=6
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=16
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=15
	next_branch :=16
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=16
node:= 14 
 	next_branch :=16
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=17
=======node_fun:ASN1_STRING_set=========
node:= 2 
 	next_branch :=3
	next_branch :=5
node:= 3 
 	next_branch :=11
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=7
	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=9
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=11
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=11
=======node_fun:test_true=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=======node_fun:test_ptr=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 46 
===============The second stage : Mapping stmt=================
# .MEM_57 = VDEF <.MEM_56>
bs_40 = make_dummy_resp ();
# .MEM_58 = VDEF <.MEM_57>
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
# .MEM_59 = VDEF <.MEM_58>
_2 = get_cert_and_key (&signer, &key);
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
# .MEM_61 = VDEF <.MEM_60>
_6 = EVP_sha1 ();
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
# .MEM_64 = VDEF <.MEM_63>
OCSP_BASICRESP_free (bs_40);
# .MEM_65 = VDEF <.MEM_64>
bs_49 = make_dummy_resp ();
# .MEM_67 = VDEF <.MEM_66>
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
# .MEM_68 = VDEF <.MEM_67>
_14 = EVP_sha1 ();
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
# .MEM_71 = VDEF <.MEM_70>
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);
# .MEM_74 = VDEF <.MEM_73>
_28 = TEST_int_eq (_27, 0);
# .MEM_75 = VDEF <.MEM_74>
OCSP_BASICRESP_free (bs_49);
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
# .MEM_62 = VDEF <.MEM_108>
_5 = time (0B);
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
# .MEM_64 = VDEF <.MEM_110>
_8 = X509_NAME_new ();
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();
# .MEM_112 = VDEF <.MEM_66>
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
# .MEM_114 = VDEF <.MEM_113>
X509_NAME_ENTRY_free (ne_87);
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
# .MEM_69 = VDEF <.MEM_116>
_16 = EVP_sha256 ();
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
# .MEM_118 = VDEF <.MEM_74>
_94 = sk_OCSP_SINGLERESP_new_null ();
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
# .MEM_123 = VDEF <.MEM_106>
OCSP_SINGLERESP_free (0B);
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
# .MEM_79 = VDEF <.MEM_78>
ASN1_BIT_STRING_free (key_45);
# .MEM_80 = VDEF <.MEM_79>
ASN1_INTEGER_free (serial_47);
# .MEM_81 = VDEF <.MEM_80>
OCSP_CERTID_free (cid_52);
# .MEM_82 = VDEF <.MEM_81>
X509_NAME_free (name_43);
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_33);
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
===============The second stage : Program slicing=================
=============== *this point analyzable =================
bs_40 = make_dummy_resp ();
=============== *this point analyzable =================
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
=============== *this point analyzable =================
_2 = get_cert_and_key (&signer, &key);
=============== *this point analyzable =================
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
=============== *this point analyzable =================
_6 = EVP_sha1 ();
=============== *this point analyzable =================
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
=============== *this point analyzable =================
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
=============== *this point analyzable =================
bs_49 = make_dummy_resp ();
=============== *this point analyzable =================
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
=============== *this point analyzable =================
_14 = EVP_sha1 ();
=============== *this point analyzable =================
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
=============== *this point analyzable =================
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
=============== *this point analyzable =================
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
=============== *this point analyzable =================
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
=============== *this point analyzable =================
_27 = X509_cmp (_26, _25);
=============== *this point analyzable =================
_28 = TEST_int_eq (_27, 0);
=============== *this point analyzable =================
_1 = OCSP_BASICRESP_new ();
=============== *this point analyzable =================
_3 = time (0B);
=============== *this point analyzable =================
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
=============== *this point analyzable =================
_5 = time (0B);
=============== *this point analyzable =================
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
=============== *this point analyzable =================
_8 = X509_NAME_new ();
=============== *this point analyzable =================
_10 = ASN1_BIT_STRING_new ();
=============== *this point analyzable =================
_12 = ASN1_INTEGER_new ();
=============== *this point analyzable =================
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
=============== *this point analyzable =================
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
=============== *this point analyzable =================
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
=============== *this point analyzable =================
_16 = EVP_sha256 ();
=============== *this point analyzable =================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
=============== *this point analyzable =================
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
=============== *this point analyzable =================
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
=============== *this point analyzable =================
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
=============== *this point analyzable =================
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
=============== *this point analyzable =================
_94 = sk_OCSP_SINGLERESP_new_null ();
=============== *this point analyzable =================
_98 = OCSP_CERTID_dup (cid_52);
=============== *this point analyzable =================
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
=============== *this point analyzable =================
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
=============== *this point analyzable =================
_1 = OPENSSL_gmtime (&t, &data);
=============== *this point analyzable =================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
=============== *this point analyzable =================
_27 = is_utc (_26);
=============== *this point analyzable =================
_30 = ASN1_STRING_new ();
=============== *this point analyzable =================
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_1 = strlen (_data_18(D));
=============== *this point analyzable =================
_5 = OPENSSL_realloc (c_23, _4);
=============== *this point analyzable =================
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
=============== *this point analyzable =================
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
=============== *this point analyzable =================
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
=============== *this point analyzable =================
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
=============== *this point analyzable =================
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
=============== *this point analyzable =================
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
=============== *this point analyzable =================
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
=============== *this point analyzable =================
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
=============== *this point analyzable =================
_27 = X509_cmp (_26, _25);
=============== *this point analyzable =================
_27 = X509_cmp (_26, _25);
=============== *this point analyzable =================
X509_free (_29);
=============== *this point analyzable =================
EVP_PKEY_free (_30);
=============== *this point analyzable =================
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
=============== *this point analyzable =================
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
=============== *this point analyzable =================
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
=============== *this point analyzable =================
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
=============== *this point analyzable =================
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
=============== *this point analyzable =================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
=============== *this point analyzable =================
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
=============== *this point analyzable =================
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
=============== *this point analyzable =================
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
=============== *this point analyzable =================
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
=============== *this point analyzable =================
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
=============== *this point analyzable =================
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
=============== *this point analyzable =================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
=============== *this point analyzable =================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
=============== *this point analyzable =================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
=============== *this point analyzable =================
_27 = is_utc (_26);
=============== *this point analyzable =================
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
=============== *this point analyzable =================
_1 = strlen (_data_18(D));
=============== *this point analyzable =================
_5 = OPENSSL_realloc (c_23, _4);
=============== *this point analyzable =================
_5 = OPENSSL_realloc (c_23, _4);
=============== *this point analyzable =================
memcpy (_10, _data_18(D), _9);
=============== *this point analyzable =================
memcpy (_10, _data_18(D), _9);
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
=============== *this point analyzable =================
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:EVP_PKEY_free========= [0m
[40;33m =======POP node_fun stack:EVP_PKEY_free========= [0m
[40;42m =======pre add _ fucntion:X509_free========= [0m
[40;33m =======POP node_fun stack:X509_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_free========= [0m
[40;42m =======pre add _ fucntion:TEST_int_eq========= [0m
[40;33m =======POP node_fun stack:TEST_int_eq========= [0m
[40;42m =======pre add _ fucntion:X509_cmp========= [0m
[40;33m =======POP node_fun stack:X509_cmp========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
  118 |     test_fail_message(NULL, file, line, "bool", s, "true", "==", "false");
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_resp_get0_signer========= [0m
[40;33m =======POP node_fun stack:OCSP_resp_get0_signer========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_sign========= [0m
[40;33m =======POP node_fun stack:OCSP_basic_sign========= [0m
[40;42m =======pre add _ fucntion:EVP_sha1========= [0m
[40;33m =======POP node_fun stack:EVP_sha1========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba20
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea80 p>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f09cb60f300>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:make_dummy_resp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 23 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
  118 |     test_fail_message(NULL, file, line, "bool", s, "true", "==", "false");
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba20
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea80 p>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f09cb60f300>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
_1 = OPENSSL_gmtime (&t, &data);
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^
this stmt call this function :OPENSSL_gmtime
trace fucntion name:OPENSSL_gmtime 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:228:8: warning: use location
  228 |     if (ts == NULL) {
      |        ^
ts_12 = (struct tm *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:8: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |        ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime_adj
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);

 ================== pre trace ptable ================== 
trace fucntion name:is_utc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function is_utc
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_new
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_32 = (struct ASN1_TIME *) _31;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_new-----
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();
_30 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt call this function :ASN1_STRING_new
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :888========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_set
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>
ts_12 = (struct tm *) _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
if (s_16(D) != tmps_33)
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
if (_3 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:30: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                              ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>
_44 = _43 + 1900;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>
_42 = _41 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>
# VUSE <.MEM_62>
_40 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>
# VUSE <.MEM_62>
_39 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>
# VUSE <.MEM_62>
_38 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>
# VUSE <.MEM_62>
_37 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>
_53 = _52 % 100;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>
_51 = _50 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>
# VUSE <.MEM_62>
_49 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>
# VUSE <.MEM_62>
_48 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>
# VUSE <.MEM_62>
_47 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>
# VUSE <.MEM_62>
_46 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb5eda20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_BASICRESP_new
 
 Start check Pointer Collect  

======================================================================
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
bs_35 = (struct OCSP_BASICRESP *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:21: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                     ^
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();
_1 = OCSP_BASICRESP_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
this stmt call this function :OCSP_BASICRESP_new
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5eda20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _3 = time (0B);
    version:3>
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_4 = (long int) _3;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);
_3 = time (0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:46: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                                              ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _3 = time (0B);
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7480
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _91 = ASN1_TIME_adj (0B, _4, 0, 0);
    version:91
    ptr-info 0x7f09cb60f030>
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_TIME_adj
 
 Start check Pointer Collect  

======================================================================
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7480
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _91 = ASN1_TIME_adj (0B, _4, 0, 0);
    version:91
    ptr-info 0x7f09cb60f030>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edb40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = time (0B);
    version:5>
# .MEM_62 = VDEF <.MEM_108>
_5 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_6 = _5 + 200;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:57: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                                                         ^
_7 = (long int) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^
# .MEM_62 = VDEF <.MEM_108>
_5 = time (0B);
_5 = time (0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:46: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                                              ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edb40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = time (0B);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7438
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _90 = ASN1_TIME_adj (0B, _7, 0, 0);
    version:90
    ptr-info 0x7f09cb60f018>
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_TIME_adj
 
 Start check Pointer Collect  

======================================================================
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7438
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _90 = ASN1_TIME_adj (0B, _7, 0, 0);
    version:90
    ptr-info 0x7f09cb60f018>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edc18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>
# .MEM_64 = VDEF <.MEM_110>
_8 = X509_NAME_new ();

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_new
 
 Start check Pointer Collect  

======================================================================
_9 = (long int) _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
name_43 = (void *) _9;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:16: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_64 = VDEF <.MEM_110>
_8 = X509_NAME_new ();
_8 = X509_NAME_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
this stmt call this function :X509_NAME_new
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edc18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_BIT_STRING_new
 
 Start check Pointer Collect  

======================================================================
_11 = (long int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
key_45 = (struct ASN1_BIT_STRING *) _11;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:22: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                      ^
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();
_10 = ASN1_BIT_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
this stmt call this function :ASN1_BIT_STRING_new
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edd38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_INTEGER_new
 
 Start check Pointer Collect  

======================================================================
_13 = (long int) _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
serial_47 = (struct ASN1_INTEGER *) _13;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:19: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                   ^
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();
_12 = ASN1_INTEGER_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
this stmt call this function :ASN1_INTEGER_new
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edd38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f71f8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
    version:85>
# .MEM_112 = VDEF <.MEM_66>
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_ENTRY_create_by_NID 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_ENTRY_create_by_NID
 
 Start check Pointer Collect  

======================================================================
if (_85 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:250:8: warning: use location
  250 |     if (!ne)
      |        ^
_86 = (long int) _85;
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^
ne_87 = (void *) _86;
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:8: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_112 = VDEF <.MEM_66>
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^
this stmt call this function :X509_NAME_ENTRY_create_by_NID
trace fucntion name:X509_NAME_ENTRY_create_by_NID 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f71f8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
    version:85>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f72d0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <var_decl 0x7f09cb5f65a0 ret>
    def_stmt ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
    version:88>
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_add_entry
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f72d0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <var_decl 0x7f09cb5f65a0 ret>
    def_stmt ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
    version:88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _92 = ASN1_STRING_set (key_45, &keybytes, 1);
    version:92>
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :888========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_set
 
 Start check Pointer Collect  

======================================================================
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _92 = ASN1_STRING_set (key_45, &keybytes, 1);
    version:92>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5ede58
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_116>
_16 = EVP_sha256 ();

 ================== pre trace ptable ================== 
trace fucntion name:EVP_sha256 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function EVP_sha256
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_116>
_16 = EVP_sha256 ();
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :EVP_sha256
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5ede58
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edea0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
    version:17>
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_cert_id_new
 
 Start check Pointer Collect  

======================================================================
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edea0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edf30
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
    version:19>
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edf30
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edf78
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
    version:20>
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edf78
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
    version:20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0000
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
    version:21>
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0000
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
    version:22>
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7a20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _94 = sk_OCSP_SINGLERESP_new_null ();
    version:94>
# .MEM_118 = VDEF <.MEM_74>
_94 = sk_OCSP_SINGLERESP_new_null ();

 ================== pre trace ptable ================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function sk_OCSP_SINGLERESP_new_null
 
 Start check Pointer Collect  

======================================================================
_95 = (long int) _94;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
_96 = (struct OCSP_SINGLERESP *) _95;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
# .MEM_118 = VDEF <.MEM_74>
_94 = sk_OCSP_SINGLERESP_new_null ();
_94 = sk_OCSP_SINGLERESP_new_null ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
this stmt call this function :sk_OCSP_SINGLERESP_new_null
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7a20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _94 = sk_OCSP_SINGLERESP_new_null ();
    version:94>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _98 = OCSP_CERTID_dup (cid_52);
    version:98>
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_CERTID_dup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_CERTID_dup
 
 Start check Pointer Collect  

======================================================================
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _98 = OCSP_CERTID_dup (cid_52);
    version:98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7ca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _103 = sk_OCSP_SINGLERESP_push (_102, 0B);
    version:103>
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function sk_OCSP_SINGLERESP_push
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7ca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _103 = sk_OCSP_SINGLERESP_push (_102, 0B);
    version:103>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0168
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
    version:26>
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0168
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edaf8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _4 = (long int) _3;
    version:4>
_4 = (long int) _3;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edaf8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _4 = (long int) _3;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edbd0
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _7 = (long int) _6;
    version:7>
_7 = (long int) _6;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edbd0
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _7 = (long int) _6;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f02d0
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5ee480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7f09cb5bef18>
name_43 = (void *) _9;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f02d0
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5ee480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7f09cb5bef18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>
ne_87 = (void *) _86;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>
ne_87 = (void *) _86;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_114 = VDEF <.MEM_113>
X509_NAME_ENTRY_free (ne_87);
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0360
    type <pointer_type 0x7f09cb5d57e0
        type <record_type 0x7f09cb5d5738 ASN1_INTEGER BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d57e0>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7f09cb5bef48>
serial_47 = (struct ASN1_INTEGER *) _13;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0360
    type <pointer_type 0x7f09cb5d57e0
        type <record_type 0x7f09cb5d5738 ASN1_INTEGER BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d57e0>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7f09cb5bef48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f01f8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee6c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7f09cb5bee28>
bs_35 = (struct OCSP_BASICRESP *) _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f01f8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee6c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7f09cb5bee28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0240
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee5a0 thisupd>
    def_stmt thisupd_38 = _109;
    version:38
    ptr-info 0x7f09cb5beed0>
thisupd_38 = _109;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0240
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee5a0 thisupd>
    def_stmt thisupd_38 = _109;
    version:38
    ptr-info 0x7f09cb5beed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0288
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee510 nextupd>
    def_stmt nextupd_41 = _111;
    version:41
    ptr-info 0x7f09cb5bef00>
nextupd_41 = _111;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0288
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee510 nextupd>
    def_stmt nextupd_41 = _111;
    version:41
    ptr-info 0x7f09cb5bef00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7c60
    type <pointer_type 0x7f09cb5d4930
        type <record_type 0x7f09cb5d4888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7f09cbaaff18 constant 256>
            unit-size <integer_cst 0x7f09cbacd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d47e0 fields <field_decl 0x7f09cb5ca8e8 certId> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d4930>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _102 = bs_35->tbsResponseData.responses;
    version:102
    ptr-info 0x7f09cb60f0c0>
# VUSE <.MEM_121>
_102 = bs_35->tbsResponseData.responses;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7c60
    type <pointer_type 0x7f09cb5d4930
        type <record_type 0x7f09cb5d4888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7f09cbaaff18 constant 256>
            unit-size <integer_cst 0x7f09cbacd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d47e0 fields <field_decl 0x7f09cb5ca8e8 certId> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d4930>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _102 = bs_35->tbsResponseData.responses;
    version:102
    ptr-info 0x7f09cb60f0c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0120
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _25 = (int) _24;
    version:25>
_25 = (int) _24;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0120
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _25 = (int) _24;
    version:25>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;42m =======pre add _ fucntion:get_cert_and_key========= [0m
[40;33m =======POP node_fun stack:get_cert_and_key========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7ea0
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cc357d80 bs>
    def_stmt bs_40 = make_dummy_resp ();
    version:40
    ptr-info 0x7f09cb5bedc8>
# .MEM_57 = VDEF <.MEM_56>
bs_40 = make_dummy_resp ();

 ================== pre trace ptable ================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function make_dummy_resp
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_57 = VDEF <.MEM_56>
bs_40 = make_dummy_resp ();
bs_40 = make_dummy_resp ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:328:10: warning: use location
  328 |     bs = make_dummy_resp();
      |          ^
this stmt call this function :make_dummy_resp
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7ea0
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cc357d80 bs>
    def_stmt bs_40 = make_dummy_resp ();
    version:40
    ptr-info 0x7f09cb5bedc8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
    version:1>
# .MEM_58 = VDEF <.MEM_57>
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_58 = VDEF <.MEM_57>
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7630
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _2 = get_cert_and_key (&signer, &key);
    version:2>
# .MEM_59 = VDEF <.MEM_58>
_2 = get_cert_and_key (&signer, &key);

 ================== pre trace ptable ================== 
trace fucntion name:get_cert_and_key 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function get_cert_and_key
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_58>
_2 = get_cert_and_key (&signer, &key);
_2 = get_cert_and_key (&signer, &key);
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13: warning: use location
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |             ^
this stmt call this function :get_cert_and_key
trace fucntion name:get_cert_and_key 

 ================== trace ================== 
trace fucntion free:0 
_8 = signer;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = signer;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_25 = signer;
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :X509_cmp
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
_29 = signer;
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
  347 |     X509_free(signer);
      |     ^
X509_free (_29);
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
this stmt call this function :X509_free
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 
_30 = key;
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
  348 |     EVP_PKEY_free(key);
      |     ^
EVP_PKEY_free (_30);
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
this stmt call this function :EVP_PKEY_free
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7630
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _2 = get_cert_and_key (&signer, &key);
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7708
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
    version:5>
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13: warning: use location
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_5 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:9: warning: use location
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7708
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7750
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = EVP_sha1 ();
    version:6>
# .MEM_61 = VDEF <.MEM_60>
_6 = EVP_sha1 ();

 ================== pre trace ptable ================== 
trace fucntion name:EVP_sha1 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function EVP_sha1
 
 Start check Pointer Collect  

======================================================================
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_61 = VDEF <.MEM_60>
_6 = EVP_sha1 ();
_6 = EVP_sha1 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :EVP_sha1
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7750
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = EVP_sha1 ();
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7828
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
    version:9>
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_basic_sign 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_basic_sign
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7828
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7900
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
    version:12>
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7900
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7ee8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cc357d80 bs>
    def_stmt bs_49 = make_dummy_resp ();
    version:49
    ptr-info 0x7f09cb5bede0>
# .MEM_65 = VDEF <.MEM_64>
bs_49 = make_dummy_resp ();

 ================== pre trace ptable ================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function make_dummy_resp
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_65 = VDEF <.MEM_64>
bs_49 = make_dummy_resp ();
bs_49 = make_dummy_resp ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:337:10: warning: use location
  337 |     bs = make_dummy_resp();
      |          ^
this stmt call this function :make_dummy_resp
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7ee8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cc357d80 bs>
    def_stmt bs_49 = make_dummy_resp ();
    version:49
    ptr-info 0x7f09cb5bede0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7948
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
    version:13>
# .MEM_67 = VDEF <.MEM_66>
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_67 = VDEF <.MEM_66>
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7948
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7990
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _14 = EVP_sha1 ();
    version:14>
# .MEM_68 = VDEF <.MEM_67>
_14 = EVP_sha1 ();

 ================== pre trace ptable ================== 
trace fucntion name:EVP_sha1 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function EVP_sha1
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67>
_14 = EVP_sha1 ();
_14 = EVP_sha1 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :EVP_sha1
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7990
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _14 = EVP_sha1 ();
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7a68
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
    version:17>
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_basic_sign 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_basic_sign
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7a68
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
    version:20>
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
    version:20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7b88
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
    version:21>
# .MEM_71 = VDEF <.MEM_70>
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_resp_get0_signer 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_resp_get0_signer
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_71 = VDEF <.MEM_70>
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_26 = tmp;
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :X509_cmp
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7b88
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7c60
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
    version:24>
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7c60
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7d38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version:27>
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);

 ================== pre trace ptable ================== 
trace fucntion name:X509_cmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_cmp
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt call this function :X509_cmp
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7d38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version:27>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7d80
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _28 = TEST_int_eq (_27, 0);
    version:28>
# .MEM_74 = VDEF <.MEM_73>
_28 = TEST_int_eq (_27, 0);

 ================== pre trace ptable ================== 
trace fucntion name:TEST_int_eq 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function TEST_int_eq
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_28 = TEST_int_eq (_27, 0);
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7d80
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _28 = TEST_int_eq (_27, 0);
    version:28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab76c0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = (int) _3;
    version:4>
_4 = (int) _3;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13: warning: use location
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_5 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:9: warning: use location
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab76c0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = (int) _3;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab77e0
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _8 = signer;
    version:8
    ptr-info 0x7f09cb5bee40>
# VUSE <.MEM_61>
_8 = signer;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab77e0
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _8 = signer;
    version:8
    ptr-info 0x7f09cb5bee40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7798
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _7 = key;
    version:7
    ptr-info 0x7f09cb5e3c30>
# VUSE <.MEM_61>
_7 = key;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7798
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _7 = key;
    version:7
    ptr-info 0x7f09cb5e3c30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab78b8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _11 = (int) _10;
    version:11>
_11 = (int) _10;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab78b8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _11 = (int) _10;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7a20
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _16 = signer;
    version:16
    ptr-info 0x7f09cb5bed50>
# VUSE <.MEM_68>
_16 = signer;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7a20
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _16 = signer;
    version:16
    ptr-info 0x7f09cb5bed50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab79d8
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _15 = key;
    version:15
    ptr-info 0x7f09cb5bee58>
# VUSE <.MEM_68>
_15 = key;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :OCSP_basic_sign
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt call this function :OCSP_BASICRESP_free
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :OCSP_resp_get0_signer
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab79d8
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _15 = key;
    version:15
    ptr-info 0x7f09cb5bee58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = (int) _18;
    version:19>
_19 = (int) _18;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = (int) _18;
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7c18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _23 = (int) _22;
    version:23>
_23 = (int) _22;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7c18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _23 = (int) _22;
    version:23>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7cf0
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _26 = tmp;
    version:26
    ptr-info 0x7f09cb5bed80>
# VUSE <.MEM_72>
_26 = tmp;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt call this function :X509_cmp
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7cf0
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _26 = tmp;
    version:26
    ptr-info 0x7f09cb5bed80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7ca8
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _25 = signer;
    version:25
    ptr-info 0x7f09cb5bed68>
# VUSE <.MEM_72>
_25 = signer;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt call this function :X509_cmp
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt call this function :TEST_int_eq
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7ca8
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _25 = signer;
    version:25
    ptr-info 0x7f09cb5bed68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7dc8
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _29 = signer;
    version:29
    ptr-info 0x7f09cb5bed98>
# VUSE <.MEM_75>
_29 = signer;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
X509_free (_29);
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
  347 |     X509_free(signer);
      |     ^
this stmt call this function :X509_free
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
X509_free (_29);
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
this stmt call this function :X509_free
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7dc8
    type <pointer_type 0x7f09cb5d7a80
        type <record_type 0x7f09cb5d79d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7a80>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7bd0>>
   
    def_stmt _29 = signer;
    version:29
    ptr-info 0x7f09cb5bed98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cbab7e10
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _30 = key;
    version:30
    ptr-info 0x7f09cb5bedb0>
# VUSE <.MEM_76>
_30 = key;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
EVP_PKEY_free (_30);
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
  348 |     EVP_PKEY_free(key);
      |     ^
this stmt call this function :EVP_PKEY_free
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
EVP_PKEY_free (_30);
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
this stmt call this function :EVP_PKEY_free
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cbab7e10
    type <pointer_type 0x7f09cb5d7888
        type <record_type 0x7f09cb5d77e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d7888>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cb5d7c78>>
   
    def_stmt _30 = key;
    version:30
    ptr-info 0x7f09cb5bedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:make_dummy_resp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
  118 |     test_fail_message(NULL, file, line, "bool", s, "true", "==", "false");
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba20
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea80 p>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f09cb60f300>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
_1 = OPENSSL_gmtime (&t, &data);
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^
this stmt call this function :OPENSSL_gmtime
trace fucntion name:OPENSSL_gmtime 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:228:8: warning: use location
  228 |     if (ts == NULL) {
      |        ^
ts_12 = (struct tm *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:8: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |        ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime_adj
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);

 ================== pre trace ptable ================== 
trace fucntion name:is_utc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function is_utc
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_new
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_32 = (struct ASN1_TIME *) _31;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_new-----
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();
_30 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt call this function :ASN1_STRING_new
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :888========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_set
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>
ts_12 = (struct tm *) _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
if (s_16(D) != tmps_33)
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
if (_3 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:30: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                              ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>
_44 = _43 + 1900;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>
_42 = _41 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>
# VUSE <.MEM_62>
_40 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>
# VUSE <.MEM_62>
_39 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>
# VUSE <.MEM_62>
_38 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>
# VUSE <.MEM_62>
_37 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>
_53 = _52 % 100;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>
_51 = _50 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>
# VUSE <.MEM_62>
_49 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>
# VUSE <.MEM_62>
_48 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>
# VUSE <.MEM_62>
_47 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>
# VUSE <.MEM_62>
_46 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb5eda20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_BASICRESP_new
 
 Start check Pointer Collect  

======================================================================
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
bs_35 = (struct OCSP_BASICRESP *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:21: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                     ^
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();
_1 = OCSP_BASICRESP_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
this stmt call this function :OCSP_BASICRESP_new
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5eda20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _3 = time (0B);
    version:3>
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_4 = (long int) _3;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);
_3 = time (0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:46: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                                              ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _3 = time (0B);
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7480
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _91 = ASN1_TIME_adj (0B, _4, 0, 0);
    version:91
    ptr-info 0x7f09cb60f030>
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_TIME_adj
 
 Start check Pointer Collect  

======================================================================
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7480
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _91 = ASN1_TIME_adj (0B, _4, 0, 0);
    version:91
    ptr-info 0x7f09cb60f030>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edb40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = time (0B);
    version:5>
# .MEM_62 = VDEF <.MEM_108>
_5 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_6 = _5 + 200;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:57: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                                                         ^
_7 = (long int) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^
# .MEM_62 = VDEF <.MEM_108>
_5 = time (0B);
_5 = time (0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:46: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                                              ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edb40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = time (0B);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7438
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _90 = ASN1_TIME_adj (0B, _7, 0, 0);
    version:90
    ptr-info 0x7f09cb60f018>
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_TIME_adj
 
 Start check Pointer Collect  

======================================================================
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7438
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _90 = ASN1_TIME_adj (0B, _7, 0, 0);
    version:90
    ptr-info 0x7f09cb60f018>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edc18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>
# .MEM_64 = VDEF <.MEM_110>
_8 = X509_NAME_new ();

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_new
 
 Start check Pointer Collect  

======================================================================
_9 = (long int) _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
name_43 = (void *) _9;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:16: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_64 = VDEF <.MEM_110>
_8 = X509_NAME_new ();
_8 = X509_NAME_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
this stmt call this function :X509_NAME_new
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edc18
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_BIT_STRING_new
 
 Start check Pointer Collect  

======================================================================
_11 = (long int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
key_45 = (struct ASN1_BIT_STRING *) _11;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:22: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                      ^
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();
_10 = ASN1_BIT_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
this stmt call this function :ASN1_BIT_STRING_new
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edd38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_INTEGER_new
 
 Start check Pointer Collect  

======================================================================
_13 = (long int) _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
serial_47 = (struct ASN1_INTEGER *) _13;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:19: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                   ^
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();
_12 = ASN1_INTEGER_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
this stmt call this function :ASN1_INTEGER_new
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edd38
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f71f8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
    version:85>
# .MEM_112 = VDEF <.MEM_66>
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_ENTRY_create_by_NID 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_ENTRY_create_by_NID
 
 Start check Pointer Collect  

======================================================================
if (_85 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:250:8: warning: use location
  250 |     if (!ne)
      |        ^
_86 = (long int) _85;
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^
ne_87 = (void *) _86;
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:8: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_112 = VDEF <.MEM_66>
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: use location
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^
this stmt call this function :X509_NAME_ENTRY_create_by_NID
trace fucntion name:X509_NAME_ENTRY_create_by_NID 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f71f8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
    version:85>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f72d0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <var_decl 0x7f09cb5f65a0 ret>
    def_stmt ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
    version:88>
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);

 ================== pre trace ptable ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function X509_NAME_add_entry
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f72d0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <var_decl 0x7f09cb5f65a0 ret>
    def_stmt ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
    version:88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _92 = ASN1_STRING_set (key_45, &keybytes, 1);
    version:92>
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :888========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_set
 
 Start check Pointer Collect  

======================================================================
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f75e8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _92 = ASN1_STRING_set (key_45, &keybytes, 1);
    version:92>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5ede58
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_116>
_16 = EVP_sha256 ();

 ================== pre trace ptable ================== 
trace fucntion name:EVP_sha256 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function EVP_sha256
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_116>
_16 = EVP_sha256 ();
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :EVP_sha256
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5ede58
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edea0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
    version:17>
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_cert_id_new
 
 Start check Pointer Collect  

======================================================================
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edea0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edf30
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
    version:19>
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edf30
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edf78
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
    version:20>
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edf78
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
    version:20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0000
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
    version:21>
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0000
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
    version:22>
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);

 ================== pre trace ptable ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_ptr
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7a20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _94 = sk_OCSP_SINGLERESP_new_null ();
    version:94>
# .MEM_118 = VDEF <.MEM_74>
_94 = sk_OCSP_SINGLERESP_new_null ();

 ================== pre trace ptable ================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function sk_OCSP_SINGLERESP_new_null
 
 Start check Pointer Collect  

======================================================================
_95 = (long int) _94;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
_96 = (struct OCSP_SINGLERESP *) _95;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
# .MEM_118 = VDEF <.MEM_74>
_94 = sk_OCSP_SINGLERESP_new_null ();
_94 = sk_OCSP_SINGLERESP_new_null ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
this stmt call this function :sk_OCSP_SINGLERESP_new_null
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7a20
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _94 = sk_OCSP_SINGLERESP_new_null ();
    version:94>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _98 = OCSP_CERTID_dup (cid_52);
    version:98>
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);

 ================== pre trace ptable ================== 
trace fucntion name:OCSP_CERTID_dup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OCSP_CERTID_dup
 
 Start check Pointer Collect  

======================================================================
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7b40
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _98 = OCSP_CERTID_dup (cid_52);
    version:98>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7ca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _103 = sk_OCSP_SINGLERESP_push (_102, 0B);
    version:103>
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function sk_OCSP_SINGLERESP_push
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7ca8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _103 = sk_OCSP_SINGLERESP_push (_102, 0B);
    version:103>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0168
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
    version:26>
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);

 ================== pre trace ptable ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function test_true
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0168
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edaf8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _4 = (long int) _3;
    version:4>
_4 = (long int) _3;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_108 = VDEF <.MEM_60>
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_109 = _91;
lto1: warning: use location
thisupd_38 = _109;
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edaf8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _4 = (long int) _3;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5edbd0
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _7 = (long int) _6;
    version:7>
_7 = (long int) _6;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_110 = VDEF <.MEM_62>
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt call this function :ASN1_TIME_adj
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_111 = _90;
lto1: warning: use location
nextupd_41 = _111;
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5edbd0
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
   
    def_stmt _7 = (long int) _6;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f02d0
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5ee480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7f09cb5bef18>
name_43 = (void *) _9;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f02d0
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5ee480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7f09cb5bef18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>
ne_87 = (void *) _86;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_113 = VDEF <.MEM_112>
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>
ne_87 = (void *) _86;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_114 = VDEF <.MEM_113>
X509_NAME_ENTRY_free (ne_87);
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7288
    type <pointer_type 0x7f09cbacb000
        type <void_type 0x7f09cbac4f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb000>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f09cbad09d8>>
    var <var_decl 0x7f09cb5f6510 ne>
    def_stmt ne_87 = (void *) _86;
    version:87
    ptr-info 0x7f09cb60f000>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_116 = VDEF <.MEM_104>
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0318
    type <pointer_type 0x7f09cb5d3a80
        type <record_type 0x7f09cb5d39d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3a80>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee3f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7f09cb5bef30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0360
    type <pointer_type 0x7f09cb5d57e0
        type <record_type 0x7f09cb5d5738 ASN1_INTEGER BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d57e0>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7f09cb5bef48>
serial_47 = (struct ASN1_INTEGER *) _13;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
this stmt call this function :ASN1_INTEGER_free
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt call this function :OCSP_cert_id_new
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt call this function :X509_NAME_add_entry
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_89 = PHI <0(2), ret_88(3)>
lto1: warning: use location
this stmt have mutiple branch ---X509_NAME_add_entry-----
_115 = _89;
lto1: warning: use location
_14 = _115;
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
X509_NAME_ENTRY_free (ne_87);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt call this function :X509_NAME_ENTRY_free
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt call this function :X509_NAME_free
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_117 = _92;
lto1: warning: use location
_15 = _117;
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt call this function :ASN1_BIT_STRING_free
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0360
    type <pointer_type 0x7f09cb5d57e0
        type <record_type 0x7f09cb5d5738 ASN1_INTEGER BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d57e0>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7f09cb5bef48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f01f8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee6c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7f09cb5bee28>
bs_35 = (struct OCSP_BASICRESP *) _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_102 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
_97 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:33: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |                                 ^
if (_97 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:269:9: warning: use location
  269 |         && (rsp->tbsResponseData.responses
      |         ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
bs_35->tbsResponseData.responses = _96;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
_93 = bs_35->tbsResponseData.responses;
./benchmarks/openssl/leak_1/openssl_leak_1.c:268:29: warning: use location
  268 |     if (rsp->tbsResponseData.responses == NULL
      |                             ^
_27 = PHI <0B(6), 0B(20), bs_35(21)>
lto1: warning: use location
this stmt have mutiple branch ---sk_OCSP_SINGLERESP_push-----
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f01f8
    type <pointer_type 0x7f09cb5d5690
        type <record_type 0x7f09cb5d55e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7f09cbacd000 constant 512>
            unit-size <integer_cst 0x7f09cbb84090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d5540 fields <field_decl 0x7f09cb5d6130 tbsResponseData> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d5690>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee6c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7f09cb5bee28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0240
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee5a0 thisupd>
    def_stmt thisupd_38 = _109;
    version:38
    ptr-info 0x7f09cb5beed0>
thisupd_38 = _109;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0240
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee5a0 thisupd>
    def_stmt thisupd_38 = _109;
    version:38
    ptr-info 0x7f09cb5beed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0288
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee510 nextupd>
    def_stmt nextupd_41 = _111;
    version:41
    ptr-info 0x7f09cb5bef00>
nextupd_41 = _111;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt call this function :ASN1_TIME_free
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0288
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee510 nextupd>
    def_stmt nextupd_41 = _111;
    version:41
    ptr-info 0x7f09cb5bef00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_120 = VDEF <.MEM_105>
_98 = OCSP_CERTID_dup (cid_52);
_98 = OCSP_CERTID_dup (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt call this function :OCSP_CERTID_dup
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_99 = (long int) _98;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_100 = (struct OCSP_CERTID *) _99;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_101 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt call this function :OCSP_CERTID_free
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt call this function :test_ptr
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f03a8
    type <pointer_type 0x7f09cb5ce2a0
        type <record_type 0x7f09cb5ce1f8 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5ce2a0>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5ee630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7f09cb5bef60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f7c60
    type <pointer_type 0x7f09cb5d4930
        type <record_type 0x7f09cb5d4888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7f09cbaaff18 constant 256>
            unit-size <integer_cst 0x7f09cbacd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d47e0 fields <field_decl 0x7f09cb5ca8e8 certId> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d4930>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _102 = bs_35->tbsResponseData.responses;
    version:102
    ptr-info 0x7f09cb60f0c0>
# VUSE <.MEM_121>
_102 = bs_35->tbsResponseData.responses;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt call this function :sk_OCSP_SINGLERESP_push
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_103 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f7c60
    type <pointer_type 0x7f09cb5d4930
        type <record_type 0x7f09cb5d4888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7f09cbaaff18 constant 256>
            unit-size <integer_cst 0x7f09cbacd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d47e0 fields <field_decl 0x7f09cb5ca8e8 certId> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d4930>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _102 = bs_35->tbsResponseData.responses;
    version:102
    ptr-info 0x7f09cb60f0c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5f0120
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _25 = (int) _24;
    version:25>
_25 = (int) _24;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_107>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt call this function :test_true
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5f0120
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _25 = (int) _24;
    version:25>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;44m =======node_fun:ASN1_TIME_adj========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
_1 = OPENSSL_gmtime (&t, &data);
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^
this stmt call this function :OPENSSL_gmtime
trace fucntion name:OPENSSL_gmtime 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:228:8: warning: use location
  228 |     if (ts == NULL) {
      |        ^
ts_12 = (struct tm *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:8: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |        ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: use location
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _1 = OPENSSL_gmtime (&t, &data);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_gmtime_adj
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd4c8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);

 ================== pre trace ptable ================== 
trace fucntion name:is_utc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function is_utc
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604360
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _27 = is_utc (_26);
    version:27>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_new 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_new
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_32 = (struct ASN1_TIME *) _31;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_new-----
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();
_30 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt call this function :ASN1_STRING_new
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604438
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version:30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);

 ================== pre trace ptable ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :888========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function ASN1_STRING_set
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604558
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _34 = ASN1_STRING_set (tmps_33, 0B, 20);
    version:34>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
    version:45>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);

 ================== pre trace ptable ================== 
trace fucntion name:BIO_snprintf 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function BIO_snprintf
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604af8
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
    version:54>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>
ts_12 = (struct tm *) _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd558
    type <pointer_type 0x7f09cb5d3dc8
        type <record_type 0x7f09cb5d3d20 tm BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3d20 fields <field_decl 0x7f09cb5ca688 tm_sec> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3dc8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fb750 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7f09cb60f138>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5a0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe100 offset_day>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt call this function :OPENSSL_gmtime_adj
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
_52 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:39: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                       ^
_53 = _52 % 100;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
_26 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:39: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                       ^
_44 = _43 + 1900;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_50 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:210:58: warning: use location
  210 |                                     ts->tm_year % 100, ts->tm_mon + 1,
      |                                                          ^
_41 = ts_12->tm_mon;
./benchmarks/openssl/leak_1/openssl_leak_1.c:205:59: warning: use location
  205 |                                     ts->tm_year + 1900, ts->tm_mon + 1,
      |                                                           ^
_42 = _41 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_40 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
_49 = ts_12->tm_mday;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_39 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_48 = ts_12->tm_hour;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_38 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_47 = ts_12->tm_min;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_37 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
_46 = ts_12->tm_sec;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb5fd5e8
    type <integer_type 0x7f09cbac4738 long int public DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe40 -9223372036854775808> max <integer_cst 0x7f09cbaafe58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09cbad0738>>
    var <parm_decl 0x7f09cb5fe180 offset_sec>
    def_stmt GIMPLE_NOP
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
_27 = is_utc (_26);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt call this function :is_utc
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_27 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604318
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _26 = ts_12->tm_year;
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
if (s_16(D) != tmps_33)
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604510
    type <pointer_type 0x7f09cb5d3c78
        type <record_type 0x7f09cb5d3bd0 ASN1_TIME BLK
            size <integer_cst 0x7f09cbacd078 constant 192>
            unit-size <integer_cst 0x7f09cbacd048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cb5d3690 fields <field_decl 0x7f09cb5ca2f8 length> context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7f09cb5d3c78>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb5fbe10 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version:33
    ptr-info 0x7f09cb60f198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :BIO_snprintf
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
if (_3 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:30: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                              ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6045e8
    type <pointer_type 0x7f09cb5d3e70
        type <integer_type 0x7f09cb5c79d8 char public QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5d3e70>>
        unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f09cbaba168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7f09cb5fbd80 p>
    def_stmt p_36 = tmps_33->data;
    version:36
    ptr-info 0x7f09cb60f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>
_44 = _43 + 1900;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604828
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _44 = _43 + 1900;
    version:44>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>
_42 = _41 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604798
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _42 = _41 + 1;
    version:42>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>
# VUSE <.MEM_62>
_40 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604708
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _40 = ts_12->tm_mday;
    version:40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>
# VUSE <.MEM_62>
_39 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6046c0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _39 = ts_12->tm_hour;
    version:39>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>
# VUSE <.MEM_62>
_38 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604678
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _38 = ts_12->tm_min;
    version:38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>
# VUSE <.MEM_62>
_37 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604630
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _37 = ts_12->tm_sec;
    version:37>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>
_53 = _52 % 100;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604ab0
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _53 = _52 % 100;
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>
_51 = _50 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604a20
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _51 = _50 + 1;
    version:51>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>
# VUSE <.MEM_62>
_49 = ts_12->tm_mday;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604990
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _49 = ts_12->tm_mday;
    version:49>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>
# VUSE <.MEM_62>
_48 = ts_12->tm_hour;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604948
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _48 = ts_12->tm_hour;
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>
# VUSE <.MEM_62>
_47 = ts_12->tm_min;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604900
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _47 = ts_12->tm_min;
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>
# VUSE <.MEM_62>
_46 = ts_12->tm_sec;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt call this function :BIO_snprintf
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
ASN1_STRING_free (tmps_33);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt call this function :ASN1_STRING_free
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
_68 = _56;
lto1: warning: use location
_18 = _68;
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch ---ASN1_STRING_free-----
tmps_33->length = _45;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_36 = tmps_33->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_33->type = type_35;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_35 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt call this function :ASN1_STRING_set
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (tmps_33 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb6048b8
    type <integer_type 0x7f09cbac4690 unsigned int public unsigned SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4690 precision:32 min <integer_cst 0x7f09cbaafe28 0> max <integer_cst 0x7f09cbaafde0 4294967295>
        pointer_to_this <pointer_type 0x7f09cbad0690>>
   
    def_stmt _46 = ts_12->tm_sec;
    version:46>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======node_fun:ASN1_STRING_set========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
In function ‘ASN1_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb604f78
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _1 = strlen (_data_18(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);

 ================== pre trace ptable ================== 
trace fucntion name:OPENSSL_realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function OPENSSL_realloc
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b090
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _5 = OPENSSL_realloc (c_23, _4);
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b3a8
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe600 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7f09cb60f288>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b4c8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f09cb605120 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7f09cb60f2b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>
_4 = len_14 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt call this function :OPENSSL_realloc
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b048
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
   
    def_stmt _4 = len_14 + 1;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1f8
    type <pointer_type 0x7f09cb5ce5e8
        type <integer_type 0x7f09cbac4348 unsigned char public unsigned QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cbaafcd8 0> max <integer_cst 0x7f09cbaafc78 255>
            pointer_to_this <pointer_type 0x7f09cb5ce5e8>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7f09cb60f240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>
_9 = (long unsigned int) len_14;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b1b0
    type <integer_type 0x7f09cbac47e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac4738 precision:64 min <integer_cst 0x7f09cbaafe88 0> max <integer_cst 0x7f09cbab0500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09cbad07e0>>
   
    def_stmt _9 = (long unsigned int) len_14;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======node_fun:test_true========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
In function ‘test_true’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
  118 |     test_fail_message(NULL, file, line, "bool", s, "true", "==", "false");
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b828
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe700 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f2d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b870
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe780 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
./benchmarks/openssl/leak_1/openssl_leak_1.c:118:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60b8b8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe800 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f2e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_true========= [0m
[40;44m =======node_fun:test_ptr========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
In function ‘test_ptr’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60ba68
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fe900 file>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f09cb60f318>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60bab0
    type <integer_type 0x7f09cbac45e8 int public SI
        size <integer_cst 0x7f09cbaafdf8 constant 32>
        unit-size <integer_cst 0x7f09cbaafe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac45e8 precision:32 min <integer_cst 0x7f09cbaafdb0 -2147483648> max <integer_cst 0x7f09cbaafdc8 2147483647>
        pointer_to_this <pointer_type 0x7f09cbacb9d8>>
    var <parm_decl 0x7f09cb5fe980 line>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: use location
this stmt call this function :test_fail_message
trace fucntion name:test_fail_message 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f09cb60baf8
    type <pointer_type 0x7f09cb5c7b28
        type <integer_type 0x7f09cb5c7a80 char readonly QI
            size <integer_cst 0x7f09cbaafca8 constant 8>
            unit-size <integer_cst 0x7f09cbaafcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f09cbac43f0 precision:8 min <integer_cst 0x7f09cb5be720 -128> max <integer_cst 0x7f09cb5be708 127>
            pointer_to_this <pointer_type 0x7f09cb5c7b28>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea00 s>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f09cb60f330>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f09cb60ba20
    type <pointer_type 0x7f09cbacb150
        type <void_type 0x7f09cbacb0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f09cbacb150>>
        public unsigned DI
        size <integer_cst 0x7f09cbaafbb8 constant 64>
        unit-size <integer_cst 0x7f09cbaafbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f09cb5fea80 p>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f09cb60f300>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:test_ptr========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
signer = 0B;
key = 0B;
bs_40 = make_dummy_resp ();
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
if (_1 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = get_cert_and_key (&signer, &key);
_3 = _2 != 0;
_4 = (int) _3;
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
if (_5 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 256544234]:
_6 = EVP_sha1 ();
_7 = key;
_8 = signer;
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
_10 = _9 != 0;
_11 = (int) _10;
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
if (_12 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 948343004]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 125398821]:
OCSP_BASICRESP_free (bs_40);
bs_49 = make_dummy_resp ();
tmp = 0B;
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
if (_13 == 0)
  goto <bb 8>; [51.12%]
else
  goto <bb 7>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 61294943]:
_14 = EVP_sha1 ();
_15 = key;
_16 = signer;
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
_18 = _17 != 0;
_19 = (int) _18;
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
if (_20 == 0)
  goto <bb 8>; [51.12%]
else
  goto <bb 9>; [48.88%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 95437853]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 29960968]:
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
_22 = _21 != 0;
_23 = (int) _22;
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
if (_24 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 10>; [48.88%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 14644921]:
_25 = signer;
_26 = tmp;
_27 = X509_cmp (_26, _25);
_28 = TEST_int_eq (_27, 0);
if (_28 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 12>; [48.88%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 22802531]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 7158437]:
OCSP_BASICRESP_free (bs_49);
_29 = signer;
X509_free (_29);
_30 = key;
EVP_PKEY_free (_30);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# _31 = PHI <0(5), 0(8), 0(11), 1(12)>
signer ={v} {CLOBBER};
tmp ={v} {CLOBBER};
key ={v} {CLOBBER};
return _31;

=======Mapping node_fun:make_dummy_resp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
namestr = "openssl.example.com";
keybytes = "\x07";
_1 = OCSP_BASICRESP_new ();
_2 = (long int) _1;
bs_35 = (struct OCSP_BASICRESP *) _2;
_3 = time (0B);
_4 = (long int) _3;
_91 = ASN1_TIME_adj (0B, _4, 0, 0);
_109 = _91;
thisupd_38 = _109;
_5 = time (0B);
_6 = _5 + 200;
_7 = (long int) _6;
_90 = ASN1_TIME_adj (0B, _7, 0, 0);
_111 = _90;
nextupd_41 = _111;
_8 = X509_NAME_new ();
_9 = (long int) _8;
name_43 = (void *) _9;
_10 = ASN1_BIT_STRING_new ();
_11 = (long int) _10;
key_45 = (struct ASN1_BIT_STRING *) _11;
_12 = ASN1_INTEGER_new ();
_13 = (long int) _12;
serial_47 = (struct ASN1_INTEGER *) _13;
_85 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
_86 = (long int) _85;
ne_87 = (void *) _86;
if (_85 == 0)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524844999]:
ret_88 = X509_NAME_add_entry (name_43, ne_87, -1, 1);
X509_NAME_ENTRY_free (ne_87);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741823]:
# _89 = PHI <0(2), ret_88(3)>
_115 = _89;
_14 = _115;
if (_14 == 0)
  goto <bb 6>; [29.93%]
else
  goto <bb 5>; [70.07%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 752370896]:
_92 = ASN1_STRING_set (key_45, &keybytes, 1);
_117 = _92;
_15 = _117;
if (_15 == 0)
  goto <bb 6>; [29.93%]
else
  goto <bb 7>; [70.07%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 546555538]:
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 527186286]:
_16 = EVP_sha256 ();
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_18 = (long int) _17;
cid_52 = (struct OCSP_CERTID *) _18;
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
if (_19 == 0)
  goto <bb 20>; [29.93%]
else
  goto <bb 8>; [70.07%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 369399431]:
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
if (_20 == 0)
  goto <bb 20>; [29.93%]
else
  goto <bb 9>; [70.07%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 258838181]:
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
if (_21 == 0)
  goto <bb 20>; [29.93%]
else
  goto <bb 10>; [70.07%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 181367914]:
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
if (_22 == 0)
  goto <bb 20>; [29.93%]
else
  goto <bb 11>; [70.07%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 127084497]:
_93 = bs_35->tbsResponseData.responses;
if (_93 == 0B)
  goto <bb 12>; [30.00%]
else
  goto <bb 14>; [70.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 38125349]:
_94 = sk_OCSP_SINGLERESP_new_null ();
_95 = (long int) _94;
_96 = (struct OCSP_SINGLERESP *) _95;
bs_35->tbsResponseData.responses = _96;
_97 = bs_35->tbsResponseData.responses;
if (_97 == 0B)
  goto <bb 13>; [18.09%]
else
  goto <bb 14>; [81.91%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 6896876]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 120187622]:
_98 = OCSP_CERTID_dup (cid_52);
_99 = (long int) _98;
_100 = (struct OCSP_CERTID *) _99;
MEM[(struct OCSP_SINGLERESP *)0B].certId = _100;
_101 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
if (_101 == 0B)
  goto <bb 15>; [30.95%]
else
  goto <bb 16>; [69.05%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 37198069]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 82989553]:
_102 = bs_35->tbsResponseData.responses;
_103 = sk_OCSP_SINGLERESP_push (_102, 0B);
if (_103 == 0)
  goto <bb 17>; [34.00%]
else
  goto <bb 19>; [66.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 28216448]:
// predicted unlikely by goto predictor.

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 72311393]:
err:
OCSP_SINGLERESP_free (0B);

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 127084497]:
_124 = 0B;
_23 = _124;
_24 = _23 != 0B;
_25 = (int) _24;
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
if (_26 == 0)
  goto <bb 20>; [29.93%]
else
  goto <bb 21>; [70.07%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 438138180]:
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 89048107]:
ASN1_TIME_free (thisupd_38);
ASN1_TIME_free (nextupd_41);
ASN1_BIT_STRING_free (key_45);
ASN1_INTEGER_free (serial_47);
OCSP_CERTID_free (cid_52);
X509_NAME_free (name_43);

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 1073741824]:
# _27 = PHI <0B(6), 0B(20), bs_35(21)>
namestr ={v} {CLOBBER};
keybytes ={v} {CLOBBER};
return _27;

=======Mapping node_fun:ASN1_TIME_adj=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = OPENSSL_gmtime (&t, &data);
_2 = (long int) _1;
ts_12 = (struct tm *) _2;
if (_1 == 0)
  goto <bb 17>; [17.38%]
else
  goto <bb 3>; [82.62%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 887125497]:
_3 = offset_day_13(D) != 0;
_4 = offset_sec_14(D) != 0;
_5 = _3 | _4;
if (_5 != 0)
  goto <bb 4>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 443562748]:
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
if (_6 == 0)
  goto <bb 17>; [17.38%]
else
  goto <bb 5>; [82.62%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 810034292]:
_26 = ts_12->tm_year;
_27 = is_utc (_26);
if (_27 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 405017146]:

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 810034292]:
# type_35 = PHI <23(5), 24(6)>
if (s_16(D) == 0B)
  goto <bb 8>; [17.43%]
else
  goto <bb 9>; [82.57%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 141188977]:
_30 = ASN1_STRING_new ();
_31 = (long int) _30;
tmps_32 = (struct ASN1_TIME *) _31;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 810034292]:
# tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
if (tmps_33 == 0B)
  goto <bb 16>; [15.47%]
else
  goto <bb 10>; [84.53%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 684721984]:
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
if (_34 == 0)
  goto <bb 11>; [34.00%]
else
  goto <bb 12>; [66.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 232805477]:
// predicted unlikely by goto predictor.
if (s_16(D) != tmps_33)
  goto <bb 15>; [53.47%]
else
  goto <bb 16>; [46.53%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 451916507]:
tmps_33->type = type_35;
p_36 = tmps_33->data;
if (type_35 == 24)
  goto <bb 13>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 153651614]:
_37 = ts_12->tm_sec;
_38 = ts_12->tm_min;
_39 = ts_12->tm_hour;
_40 = ts_12->tm_mday;
_41 = ts_12->tm_mon;
_42 = _41 + 1;
_43 = ts_12->tm_year;
_44 = _43 + 1900;
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
tmps_33->length = _45;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 298264893]:
_46 = ts_12->tm_sec;
_47 = ts_12->tm_min;
_48 = ts_12->tm_hour;
_49 = ts_12->tm_mday;
_50 = ts_12->tm_mon;
_51 = _50 + 1;
_52 = ts_12->tm_year;
_53 = _52 % 100;
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
tmps_33->length = _54;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 124481088]:
ASN1_STRING_free (tmps_33);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 810034292]:
# _56 = PHI <0B(9), tmps_33(13), tmps_33(14), 0B(11), 0B(15)>
_68 = _56;
_18 = _68;

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 1073741824]:
# _7 = PHI <0B(2), 0B(4), _18(16)>
data ={v} {CLOBBER};
return _7;

=======Mapping node_fun:ASN1_STRING_set=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (len_19(D) < 0)
  goto <bb 3>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 440234143]:
if (_data_18(D) == 0B)
  goto <bb 11>; [18.09%]
else
  goto <bb 4>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 360595787]:
_1 = strlen (_data_18(D));
len_21 = (int) _1;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 994103467]:
# len_14 = PHI <len_19(D)(2), len_21(4)>
_2 = str_22(D)->length;
if (_2 <= len_14)
  goto <bb 7>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 666049325]:
_3 = str_22(D)->data;
if (_3 == 0B)
  goto <bb 7>; [30.00%]
else
  goto <bb 9>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 527868937]:
c_23 = str_22(D)->data;
_4 = len_14 + 1;
_5 = OPENSSL_realloc (c_23, _4);
_6 = (long int) _5;
_7 = (unsigned char *) _6;
str_22(D)->data = _7;
_8 = str_22(D)->data;
if (_8 == 0B)
  goto <bb 8>; [18.09%]
else
  goto <bb 9>; [81.91%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 95491491]:
str_22(D)->data = c_23;
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 898611976]:
str_22(D)->length = len_14;
if (_data_18(D) != 0B)
  goto <bb 10>; [53.47%]
else
  goto <bb 11>; [46.53%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 480487822]:
_9 = (long unsigned int) len_14;
_10 = str_22(D)->data;
memcpy (_10, _data_18(D), _9);
_11 = str_22(D)->data;
_12 = (sizetype) len_14;
_13 = _11 + _12;
*_13 = 0;

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# _15 = PHI <0(3), 0(8), 1(9), 1(10)>
return _15;

=======Mapping node_fun:test_true=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (b_3(D) != 0)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <1(2), 0(3)>
return _1;

=======Mapping node_fun:test_ptr=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (p_3(D) != 0B)
  goto <bb 4>; [70.93%]
else
  goto <bb 3>; [29.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 312136752]:
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <1(2), 0(3)>
return _1;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 0 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    all ptable point : 103 [0m
[40;34m    analyzable ptable point : 99 [0m
[40;34m    used_stmt array stack totalsize of : 0.034624 mb[0m
[40;34m    collect time: : 0.007527 s [0m
[40;34m    algorithm time: 0.411123 s [0m
[40;34m    gimple stmt count : : 220 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:56 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  2157k ( 69%)
 phase opt and generate             :   0.19 (100%)   0.27 (100%)   0.46 ( 98%)   884k ( 28%)
 callgraph functions expansion      :   0.03 ( 16%)   0.02 (  7%)   0.04 (  9%)   623k ( 20%)
 df live regs                       :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 df live&initialized regs           :   0.01 (  5%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 tree CFG cleanup                   :   0.00 (  0%)   0.01 (  4%)   0.00 (  0%)  3112  (  0%)
 integrated RA                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)   204k (  7%)
 LRA non-specific                   :   0.01 (  5%)   0.00 (  0%)   0.00 (  0%)  4176  (  0%)
 plugin execution                   :   0.16 ( 84%)   0.25 ( 93%)   0.42 ( 89%)  3280  (  0%)
 initialize rtl                     :   0.01 (  5%)   0.01 (  4%)   0.00 (  0%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    21k (  1%)
 TOTAL                              :   0.19          0.27          0.47         3134k
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `test_true':
<artificial>:(.text+0x35): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `test_ptr':
<artificial>:(.text+0x7a): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `ASN1_STRING_set':
<artificial>:(.text+0x102): undefined reference to `OPENSSL_realloc'
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `ASN1_TIME_adj':
<artificial>:(.text+0x148): undefined reference to `OPENSSL_gmtime'
/usr/bin/ld: <artificial>:(.text+0x172): undefined reference to `is_utc'
/usr/bin/ld: <artificial>:(.text+0x1fa): undefined reference to `BIO_snprintf'
/usr/bin/ld: <artificial>:(.text+0x223): undefined reference to `OPENSSL_gmtime_adj'
/usr/bin/ld: <artificial>:(.text+0x23d): undefined reference to `ASN1_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x273): undefined reference to `ASN1_STRING_free'
/usr/bin/ld: <artificial>:(.text+0x2b5): undefined reference to `BIO_snprintf'
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `make_dummy_resp':
<artificial>:(.text+0x3b8): undefined reference to `OCSP_BASICRESP_new'
/usr/bin/ld: <artificial>:(.text+0x420): undefined reference to `X509_NAME_new'
/usr/bin/ld: <artificial>:(.text+0x42c): undefined reference to `ASN1_BIT_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x439): undefined reference to `ASN1_INTEGER_new'
/usr/bin/ld: <artificial>:(.text+0x463): undefined reference to `X509_NAME_ENTRY_create_by_NID'
/usr/bin/ld: <artificial>:(.text+0x4a2): undefined reference to `X509_NAME_add_entry'
/usr/bin/ld: <artificial>:(.text+0x4b2): undefined reference to `X509_NAME_ENTRY_free'
/usr/bin/ld: <artificial>:(.text+0x4ea): undefined reference to `EVP_sha256'
/usr/bin/ld: <artificial>:(.text+0x4ff): undefined reference to `OCSP_cert_id_new'
/usr/bin/ld: <artificial>:(.text+0x59b): undefined reference to `OCSP_CERTID_dup'
/usr/bin/ld: <artificial>:(.text+0x5bd): undefined reference to `sk_OCSP_SINGLERESP_push'
/usr/bin/ld: <artificial>:(.text+0x5d0): undefined reference to `OCSP_SINGLERESP_free'
/usr/bin/ld: <artificial>:(.text+0x5ff): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x60e): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x61b): undefined reference to `ASN1_BIT_STRING_free'
/usr/bin/ld: <artificial>:(.text+0x628): undefined reference to `ASN1_INTEGER_free'
/usr/bin/ld: <artificial>:(.text+0x635): undefined reference to `OCSP_CERTID_free'
/usr/bin/ld: <artificial>:(.text+0x642): undefined reference to `X509_NAME_free'
/usr/bin/ld: <artificial>:(.text+0x651): undefined reference to `sk_OCSP_SINGLERESP_new_null'
/usr/bin/ld: /tmp/ccbjTEyT.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x6fb): undefined reference to `get_cert_and_key'
/usr/bin/ld: <artificial>:(.text+0x725): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x74a): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x77b): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x7b5): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x7da): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x815): undefined reference to `OCSP_resp_get0_signer'
/usr/bin/ld: <artificial>:(.text+0x84d): undefined reference to `X509_cmp'
/usr/bin/ld: <artificial>:(.text+0x85e): undefined reference to `TEST_int_eq'
/usr/bin/ld: <artificial>:(.text+0x873): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x882): undefined reference to `X509_free'
/usr/bin/ld: <artificial>:(.text+0x891): undefined reference to `EVP_PKEY_free'
collect2: error: ld returned 1 exit status
